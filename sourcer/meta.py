# Generated by ../generate_metasyntax.py
import re

class Node:
    _fields = ()

    def __eq__(self, other):
        if not isinstance(other, self.__class__):
            return False
        for field in self._fields:
            if getattr(self, field) != getattr(other, field):
                return False
        return True

    def _asdict(self):
        return {k: getattr(self, k) for k in self._fields}

    def _replace(self, **kw):
        for field in self._fields:
            if field not in kw:
                kw[field] = getattr(self, field)
        return self.__class__(**kw)


class Token(Node):
    _fields = ('value',)

    def __init__(self, value):
        self.value = value

    def __repr__(self):
        return f'{self.__class__.__name__}({self.value!r})'


class Space(Token): pass
pattern1 = re.compile('[ \\t]+')

class Word(Token): pass
pattern2 = re.compile('[_a-zA-Z][_a-zA-Z0-9]*')

class Symbol(Token): pass
pattern3 = re.compile('<<\\!|\\!>>|<<|>>|=>|\\/\\/|[=;,:\\|\\/\\*\\+\\?\\!\\(\\)\\[\\]\\{\\}]')

class StringLiteral(Token): pass
pattern4 = re.compile('("([^"\\\\]|\\\\.)*")')
pattern5 = re.compile("('([^'\\\\]|\\\\.)*')")
pattern6 = re.compile('("""([^\\\\]|\\\\.)*?""")')
pattern7 = re.compile("('\\''([^\\\\]|\\\\.)*?'\\'')")

class RegexLiteral(Token): pass
pattern8 = re.compile('\\@\\/([^\\/\\\\]|\\\\.)*\\/')

class Newline(Token): pass
pattern9 = re.compile('[\\r\\n][\\s]*')

class Comment(Token): pass
pattern10 = re.compile('#[^\\r\\n]*')

class RuleDef(Node):
    _fields = ('name', 'expr')
    value = 'RuleDef'

    def __init__(self, name, expr):
        self.name = name
        self.expr = expr

    def __repr__(self):
        return f'RuleDef(name={self.name!r}, expr={self.expr!r})'


class ClassDef(Node):
    _fields = ('name', 'fields')
    value = 'ClassDef'

    def __init__(self, name, fields):
        self.name = name
        self.fields = fields

    def __repr__(self):
        return f'ClassDef(name={self.name!r}, fields={self.fields!r})'


class TokenDef(Node):
    _fields = ('is_ignored', 'child')
    value = 'TokenDef'

    def __init__(self, is_ignored, child):
        self.is_ignored = is_ignored
        self.child = child

    def __repr__(self):
        return f'TokenDef(is_ignored={self.is_ignored!r}, child={self.child!r})'


class TemplateDef(Node):
    _fields = ('name', 'params', 'expr')
    value = 'TemplateDef'

    def __init__(self, name, params, expr):
        self.name = name
        self.params = params
        self.expr = expr

    def __repr__(self):
        return f'TemplateDef(name={self.name!r}, params={self.params!r}, expr={self.expr!r})'


class Ref(Node):
    _fields = ('name',)
    value = 'Ref'

    def __init__(self, name):
        self.name = name

    def __repr__(self):
        return f'Ref(name={self.name!r})'


class ListLiteral(Node):
    _fields = ('elements',)
    value = 'ListLiteral'

    def __init__(self, elements):
        self.elements = elements

    def __repr__(self):
        return f'ListLiteral(elements={self.elements!r})'


class KeywordArg(Node):
    _fields = ('name', 'expr')
    value = 'KeywordArg'

    def __init__(self, name, expr):
        self.name = name
        self.expr = expr

    def __repr__(self):
        return f'KeywordArg(name={self.name!r}, expr={self.expr!r})'


class ArgList(Node):
    _fields = ('args',)
    value = 'ArgList'

    def __init__(self, args):
        self.args = args

    def __repr__(self):
        return f'ArgList(args={self.args!r})'


class ParseError(Exception):
    def __init__(self, mode, expr_code, pos):
        self.is_error = (mode is None)
        self.expr_code = expr_code
        self.pos = pos



class Infix(Node):
    _fields = ('left', 'operator', 'right')

    def __init__(self, left, operator, right):
        self.left = left
        self.operator = operator
        self.right = right

    def __repr__(self):
        return f'Infix({self.left!r}, {self.operator!r}, {self.right!r})'


class Postfix(Node):
    _fields = ('left', 'operator')

    def __init__(self, left, operator):
        self.left = left
        self.operator = operator

    def __repr__(self):
        return f'Postfix({self.left!r}, {self.operator!r})'


class Prefix(Node):
    _fields = ('operator', 'right')

    def __init__(self, operator, right):
        self.operator = operator
        self.right = right

    def __repr__(self):
        return f'Prefix({self.operator!r}, {self.right!r})'


def parse(text, pos=0):
    text = _run(text, pos, _tokenize)
    pos = 0
    return _run(text, pos, _parse_start1)


def _run(text, pos, start):
    memo = {}
    result = None

    key = (3, start, pos)
    gtor = start(text, pos)
    stack = [(key, gtor)]

    while stack:
        key, gtor = stack[-1]
        result = gtor.send(result)

        if result[0] != 3:
            stack.pop()
            memo[key] = result
        elif result in memo:
            result = memo[result]
        else:
            gtor = result[1](text, result[2])
            stack.append((result, gtor))
            result = None

    if result[0]:
        return result[1]
    else:
        raise ParseError(*result)


def visit(node):
    if isinstance(node, list):
        yield from node

    elif isinstance(node, Node):
        yield node

        if hasattr(node, '_fields'):
            for field in node._fields:
                yield from visit(getattr(node, field))


def transform(node, *callbacks):
    if not callbacks:
        return node

    if len(callbacks) == 1:
        callback = callbacks[0]
    else:
        def callback(node):
            for f in callbacks:
                node = f(node)
            return node

    return _transform(node, callback)


def _transform(node, callback):
    if isinstance(node, list):
        return [_transform(x, callback) for x in node]

    if not isinstance(node, Node):
        return node

    updates = {}
    for field in node._fields:
        was = getattr(node, field)
        now = _transform(was, callback)
        if was is not now:
            updates[field] = now

    if updates:
        node = node._replace(**updates)

    return callback(node)


def _tokenize(text, pos):
    buf1 = []
    while True:
        backtrack1 = pos
        match1 = pattern1.match(text, pos)
        if match1:
            mode4 = 1
            value4 = match1.group(0)
            pos4 = match1.end()
        else:
            mode4 = False
            value4 = 139779327357952
            pos4 = pos
        if mode4:
            mode3 = 2
            value3 = None
            pos3 = pos4
        else:
            mode3 = mode4
            value3 = value4
            pos3 = pos4
        if mode3 or mode3 is None:
            mode2 = mode3
            value2 = value3
            pos2 = pos3
        else:
            pos = backtrack1
            match2 = pattern2.match(text, pos)
            if match2:
                mode6 = 1
                value6 = match2.group(0)
                pos6 = match2.end()
            else:
                mode6 = False
                value6 = 139779327358064
                pos6 = pos
            if mode6:
                mode5 = 1
                value5 = Word(value6)
                pos5 = pos6
            else:
                mode5 = mode6
                value5 = value6
                pos5 = pos6
            if mode5 or mode5 is None:
                mode2 = mode5
                value2 = value5
                pos2 = pos5
            else:
                pos = backtrack1
                match3 = pattern3.match(text, pos)
                if match3:
                    mode8 = 1
                    value8 = match3.group(0)
                    pos8 = match3.end()
                else:
                    mode8 = False
                    value8 = 139779327358176
                    pos8 = pos
                if mode8:
                    mode7 = 1
                    value7 = Symbol(value8)
                    pos7 = pos8
                else:
                    mode7 = mode8
                    value7 = value8
                    pos7 = pos8
                if mode7 or mode7 is None:
                    mode2 = mode7
                    value2 = value7
                    pos2 = pos7
                else:
                    pos = backtrack1
                    backtrack2 = pos
                    match4 = pattern4.match(text, pos)
                    if match4:
                        mode11 = 1
                        value11 = match4.group(0)
                        pos11 = match4.end()
                    else:
                        mode11 = False
                        value11 = 139779327358624
                        pos11 = pos
                    if mode11 or mode11 is None:
                        mode10 = mode11
                        value10 = value11
                        pos10 = pos11
                    else:
                        pos = backtrack2
                        match5 = pattern5.match(text, pos)
                        if match5:
                            mode12 = 1
                            value12 = match5.group(0)
                            pos12 = match5.end()
                        else:
                            mode12 = False
                            value12 = 139779327358848
                            pos12 = pos
                        if mode12 or mode12 is None:
                            mode10 = mode12
                            value10 = value12
                            pos10 = pos12
                        else:
                            pos = backtrack2
                            match6 = pattern6.match(text, pos)
                            if match6:
                                mode13 = 1
                                value13 = match6.group(0)
                                pos13 = match6.end()
                            else:
                                mode13 = False
                                value13 = 139779327358680
                                pos13 = pos
                            if mode13 or mode13 is None:
                                mode10 = mode13
                                value10 = value13
                                pos10 = pos13
                            else:
                                pos = backtrack2
                                match7 = pattern7.match(text, pos)
                                if match7:
                                    mode14 = 1
                                    value14 = match7.group(0)
                                    pos14 = match7.end()
                                else:
                                    mode14 = False
                                    value14 = 139779327359016
                                    pos14 = pos
                                if mode14 or mode14 is None:
                                    mode10 = mode14
                                    value10 = value14
                                    pos10 = pos14
                                else:
                                    pos = backtrack2
                                    mode10 = False
                                    value10 = 139779327388416
                                    pos10 = pos
                                    if pos10 < pos11:
                                        mode10 = mode11
                                        value10 = value11
                                        pos10 = pos11
                                    if pos10 < pos12:
                                        mode10 = mode12
                                        value10 = value12
                                        pos10 = pos12
                                    if pos10 < pos13:
                                        mode10 = mode13
                                        value10 = value13
                                        pos10 = pos13
                                    if pos10 < pos14:
                                        mode10 = mode14
                                        value10 = value14
                                        pos10 = pos14
                    if mode10:
                        mode9 = 1
                        value9 = StringLiteral(value10)
                        pos9 = pos10
                    else:
                        mode9 = mode10
                        value9 = value10
                        pos9 = pos10
                    if mode9 or mode9 is None:
                        mode2 = mode9
                        value2 = value9
                        pos2 = pos9
                    else:
                        pos = backtrack1
                        match8 = pattern8.match(text, pos)
                        if match8:
                            mode16 = 1
                            value16 = match8.group(0)
                            pos16 = match8.end()
                        else:
                            mode16 = False
                            value16 = 139779327358568
                            pos16 = pos
                        if mode16:
                            mode15 = 1
                            value15 = RegexLiteral(value16)
                            pos15 = pos16
                        else:
                            mode15 = mode16
                            value15 = value16
                            pos15 = pos16
                        if mode15 or mode15 is None:
                            mode2 = mode15
                            value2 = value15
                            pos2 = pos15
                        else:
                            pos = backtrack1
                            match9 = pattern9.match(text, pos)
                            if match9:
                                mode18 = 1
                                value18 = match9.group(0)
                                pos18 = match9.end()
                            else:
                                mode18 = False
                                value18 = 139779327359072
                                pos18 = pos
                            if mode18:
                                mode17 = 1
                                value17 = Newline(value18)
                                pos17 = pos18
                            else:
                                mode17 = mode18
                                value17 = value18
                                pos17 = pos18
                            if mode17 or mode17 is None:
                                mode2 = mode17
                                value2 = value17
                                pos2 = pos17
                            else:
                                pos = backtrack1
                                match10 = pattern10.match(text, pos)
                                if match10:
                                    mode20 = 1
                                    value20 = match10.group(0)
                                    pos20 = match10.end()
                                else:
                                    mode20 = False
                                    value20 = 139779327359296
                                    pos20 = pos
                                if mode20:
                                    mode19 = 2
                                    value19 = None
                                    pos19 = pos20
                                else:
                                    mode19 = mode20
                                    value19 = value20
                                    pos19 = pos20
                                if mode19 or mode19 is None:
                                    mode2 = mode19
                                    value2 = value19
                                    pos2 = pos19
                                else:
                                    pos = backtrack1
                                    mode2 = False
                                    value2 = 139779327358232
                                    pos2 = pos
                                    if pos2 < pos3:
                                        mode2 = mode3
                                        value2 = value3
                                        pos2 = pos3
                                    if pos2 < pos5:
                                        mode2 = mode5
                                        value2 = value5
                                        pos2 = pos5
                                    if pos2 < pos7:
                                        mode2 = mode7
                                        value2 = value7
                                        pos2 = pos7
                                    if pos2 < pos9:
                                        mode2 = mode9
                                        value2 = value9
                                        pos2 = pos9
                                    if pos2 < pos15:
                                        mode2 = mode15
                                        value2 = value15
                                        pos2 = pos15
                                    if pos2 < pos17:
                                        mode2 = mode17
                                        value2 = value17
                                        pos2 = pos17
                                    if pos2 < pos19:
                                        mode2 = mode19
                                        value2 = value19
                                        pos2 = pos19
        if not mode2:
            if mode2 is None:
                mode1 = mode2
                value1 = value2
                pos1 = pos2
            break
        if mode2 != 2:
            buf1.append(value2)
        pos = pos2
    mode1 = 1
    value1 = buf1
    pos1 = pos
    yield (mode1, value1, pos1)
    

def tokenize(text, pos=0):
    return _run(text, pos, _tokenize)


def _parse_Sep1(text, pos):
    buf2 = []
    while True:
        backtrack3 = pos
        mode23, value23, pos23 = yield (3, _parse_Newline1, pos)
        if mode23 or mode23 is None:
            mode22 = mode23
            value22 = value23
            pos22 = pos23
        else:
            pos = backtrack3
            value25 = ';'
            if pos >= len(text):
                mode24 = False
                value24 = 139779327360192
                pos24 = pos
            else:
                token1 = text[pos]
                if token1.value == value25:
                    mode24 = 1
                    value24 = token1
                    pos24 = pos + 1
                else:
                    mode24 = False
                    value24 = 139779327360192
                    pos24 = pos
            if mode24 or mode24 is None:
                mode22 = mode24
                value22 = value24
                pos22 = pos24
            else:
                pos = backtrack3
                mode22 = False
                value22 = 139779327388696
                pos22 = pos
                if pos22 < pos23:
                    mode22 = mode23
                    value22 = value23
                    pos22 = pos23
                if pos22 < pos24:
                    mode22 = mode24
                    value22 = value24
                    pos22 = pos24
        if not mode22:
            if mode22 is None:
                mode21 = mode22
                value21 = value22
                pos21 = pos22
            break
        if mode22 != 2:
            buf2.append(value22)
        pos = pos22
    if not buf2:
        mode21 = False
        value21 = 139779327388920
        pos21 = pos
    else:
        mode21 = 1
        value21 = buf2
        pos21 = pos
    yield (mode21, value21, pos21)
    

def _parse_Name1(text, pos):
    mode25, value26, pos25 = yield (3, _parse_Word1, pos)
    yield (mode25, value26, pos25)
    

def _parse_Comma1(text, pos):
    while True:
        mode29, value30, pos29 = yield (3, _parse_Newline1, pos)
        if mode29:
            pos = pos29
        else:
            if mode29 is None:
                mode28 = mode29
                value29 = value30
                pos28 = pos29
            break
    mode28 = 1
    value29 = None
    pos28 = pos
    if not mode28:
        mode27 = mode28
        value28 = value29
        pos27 = pos28
    else:
        pos = pos28
        value31 = ','
        if pos >= len(text):
            mode27 = False
            value28 = 139779327295728
            pos27 = pos
        else:
            token2 = text[pos]
            if token2.value == value31:
                mode27 = 1
                value28 = token2
                pos27 = pos + 1
            else:
                mode27 = False
                value28 = 139779327295728
                pos27 = pos
    if not mode27:
        mode26 = mode27
        value27 = value28
        pos26 = pos27
    else:
        pos = pos27
        while True:
            mode31, value33, pos31 = yield (3, _parse_Newline1, pos)
            if mode31:
                pos = pos31
            else:
                if mode31 is None:
                    mode30 = mode31
                    value32 = value33
                    pos30 = pos31
                break
        mode30 = 1
        value32 = None
        pos30 = pos
        if mode30:
            mode26 = 1
            value27 = value28
            pos26 = pos30
        else:
            mode26 = mode30
            value27 = value32
            pos26 = pos30
    yield (mode26, value27, pos26)
    

def _parse_RuleDef1(text, pos):
    mode34, value36, pos34 = yield (3, _parse_Name1, pos)
    if not mode34:
        mode33 = mode34
        value35 = value36
        pos33 = pos34
    else:
        pos = pos34
        backtrack4 = pos
        value39 = '='
        if pos >= len(text):
            mode36 = False
            value38 = 139779327296456
            pos36 = pos
        else:
            token3 = text[pos]
            if token3.value == value39:
                mode36 = 1
                value38 = token3
                pos36 = pos + 1
            else:
                mode36 = False
                value38 = 139779327296456
                pos36 = pos
        if mode36 or mode36 is None:
            mode35 = mode36
            value37 = value38
            pos35 = pos36
        else:
            pos = backtrack4
            value41 = ':'
            if pos >= len(text):
                mode37 = False
                value40 = 139779327296792
                pos37 = pos
            else:
                token4 = text[pos]
                if token4.value == value41:
                    mode37 = 1
                    value40 = token4
                    pos37 = pos + 1
                else:
                    mode37 = False
                    value40 = 139779327296792
                    pos37 = pos
            if mode37 or mode37 is None:
                mode35 = mode37
                value37 = value40
                pos35 = pos37
            else:
                pos = backtrack4
                mode35 = False
                value37 = 139779332058584
                pos35 = pos
                if pos35 < pos36:
                    mode35 = mode36
                    value37 = value38
                    pos35 = pos36
                if pos35 < pos37:
                    mode35 = mode37
                    value37 = value40
                    pos35 = pos37
        if mode35:
            mode33 = 1
            value35 = value36
            pos33 = pos35
        else:
            mode33 = mode35
            value35 = value37
            pos33 = pos35
    if not mode33:
        mode32 = mode33
        value34 = value35
        pos32 = pos33
    else:
        pos = pos33
        mode38, value42, pos38 = yield (3, _parse_Expr1, pos)
        if not mode38:
            mode32 = mode38
            value34 = value42
            pos32 = pos38
        else:
            pos = pos38
            mode32 = 1
            value34 = RuleDef(value35, value42)
            pos32 = pos
    yield (mode32, value34, pos32)
    

def _parse_ClassDef1(text, pos):
    value46 = 'class'
    if pos >= len(text):
        mode41 = False
        value45 = 139779327297520
        pos41 = pos
    else:
        token5 = text[pos]
        if token5.value == value46:
            mode41 = 1
            value45 = token5
            pos41 = pos + 1
        else:
            mode41 = False
            value45 = 139779327297520
            pos41 = pos
    if not mode41:
        mode40 = mode41
        value44 = value45
        pos40 = pos41
    else:
        pos = pos41
        mode40, value44, pos40 = yield (3, _parse_Name1, pos)
    if not mode40:
        mode39 = mode40
        value43 = value44
        pos39 = pos40
    else:
        pos = pos40
        while True:
            mode47, value52, pos47 = yield (3, _parse_Newline1, pos)
            if mode47:
                pos = pos47
            else:
                if mode47 is None:
                    mode46 = mode47
                    value51 = value52
                    pos46 = pos47
                break
        mode46 = 1
        value51 = None
        pos46 = pos
        if not mode46:
            mode45 = mode46
            value50 = value51
            pos45 = pos46
        else:
            pos = pos46
            value53 = '{'
            if pos >= len(text):
                mode45 = False
                value50 = 139779327298976
                pos45 = pos
            else:
                token6 = text[pos]
                if token6.value == value53:
                    mode45 = 1
                    value50 = token6
                    pos45 = pos + 1
                else:
                    mode45 = False
                    value50 = 139779327298976
                    pos45 = pos
        if not mode45:
            mode44 = mode45
            value49 = value50
            pos44 = pos45
        else:
            pos = pos45
            while True:
                mode49, value55, pos49 = yield (3, _parse_Newline1, pos)
                if mode49:
                    pos = pos49
                else:
                    if mode49 is None:
                        mode48 = mode49
                        value54 = value55
                        pos48 = pos49
                    break
            mode48 = 1
            value54 = None
            pos48 = pos
            if mode48:
                mode44 = 1
                value49 = value50
                pos44 = pos48
            else:
                mode44 = mode48
                value49 = value54
                pos44 = pos48
        if not mode44:
            mode43 = mode44
            value48 = value49
            pos43 = pos44
        else:
            pos = pos44
            buf3 = []
            pos43 = pos
            while True:
                mode50, value56, pos50 = yield (3, _parse_RuleDef1, pos)
                if not mode50:
                    if mode50 is None:
                        mode43 = mode50
                        value48 = value56
                        pos43 = pos50
                    break
                buf3.append(value56)
                pos = pos50
                mode51, value57, pos51 = yield (3, _parse_Sep1, pos)
                if not mode51:
                    if mode51 is None:
                        mode43 = mode51
                        value48 = value57
                        pos43 = pos51
                    break
                pos = pos51
            mode43 = 1
            value48 = buf3
            pos43 = pos
        if not mode43:
            mode42 = mode43
            value47 = value48
            pos42 = pos43
        else:
            pos = pos43
            value59 = '}'
            if pos >= len(text):
                mode52 = False
                value58 = 139779327299424
                pos52 = pos
            else:
                token7 = text[pos]
                if token7.value == value59:
                    mode52 = 1
                    value58 = token7
                    pos52 = pos + 1
                else:
                    mode52 = False
                    value58 = 139779327299424
                    pos52 = pos
            if mode52:
                mode42 = 1
                value47 = value48
                pos42 = pos52
            else:
                mode42 = mode52
                value47 = value58
                pos42 = pos52
        if not mode42:
            mode39 = mode42
            value43 = value47
            pos39 = pos42
        else:
            pos = pos42
            mode39 = 1
            value43 = ClassDef(value44, value47)
            pos39 = pos
    yield (mode39, value43, pos39)
    

def _parse_TokenDef1(text, pos):
    backtrack5 = pos
    backtrack6 = pos
    value64 = 'ignore'
    if pos >= len(text):
        mode56 = False
        value63 = 139779327361264
        pos56 = pos
    else:
        token8 = text[pos]
        if token8.value == value64:
            mode56 = 1
            value63 = token8
            pos56 = pos + 1
        else:
            mode56 = False
            value63 = 139779327361264
            pos56 = pos
    if mode56 or mode56 is None:
        mode55 = mode56
        value62 = value63
        pos55 = pos56
    else:
        pos = backtrack6
        value66 = 'ignored'
        if pos >= len(text):
            mode57 = False
            value65 = 139779327362048
            pos57 = pos
        else:
            token9 = text[pos]
            if token9.value == value66:
                mode57 = 1
                value65 = token9
                pos57 = pos + 1
            else:
                mode57 = False
                value65 = 139779327362048
                pos57 = pos
        if mode57 or mode57 is None:
            mode55 = mode57
            value62 = value65
            pos55 = pos57
        else:
            pos = backtrack6
            mode55 = False
            value62 = 139779332157848
            pos55 = pos
            if pos55 < pos56:
                mode55 = mode56
                value62 = value63
                pos55 = pos56
            if pos55 < pos57:
                mode55 = mode57
                value62 = value65
                pos55 = pos57
    if mode55 or mode55 is None:
        mode54 = mode55
        value61 = value62
        pos54 = pos55
    else:
        mode54 = 1
        value61 = None
        pos54 = backtrack5
    if not mode54:
        mode53 = mode54
        value60 = value61
        pos53 = pos54
    else:
        pos = pos54
        value69 = 'token'
        if pos >= len(text):
            mode59 = False
            value68 = 139779327362552
            pos59 = pos
        else:
            token10 = text[pos]
            if token10.value == value69:
                mode59 = 1
                value68 = token10
                pos59 = pos + 1
            else:
                mode59 = False
                value68 = 139779327362552
                pos59 = pos
        if not mode59:
            mode58 = mode59
            value67 = value68
            pos58 = pos59
        else:
            pos = pos59
            backtrack7 = pos
            mode60, value70, pos60 = yield (3, _parse_ClassDef1, pos)
            if mode60 or mode60 is None:
                mode58 = mode60
                value67 = value70
                pos58 = pos60
            else:
                pos = backtrack7
                mode61, value71, pos61 = yield (3, _parse_RuleDef1, pos)
                if mode61 or mode61 is None:
                    mode58 = mode61
                    value67 = value71
                    pos58 = pos61
                else:
                    pos = backtrack7
                    mode58 = False
                    value67 = 139779332158016
                    pos58 = pos
                    if pos58 < pos60:
                        mode58 = mode60
                        value67 = value70
                        pos58 = pos60
                    if pos58 < pos61:
                        mode58 = mode61
                        value67 = value71
                        pos58 = pos61
        if not mode58:
            mode53 = mode58
            value60 = value67
            pos53 = pos58
        else:
            pos = pos58
            mode53 = 1
            value60 = TokenDef(value61, value67)
            pos53 = pos
    yield (mode53, value60, pos53)
    

def _parse_TemplateDef1(text, pos):
    value75 = 'template'
    if pos >= len(text):
        mode64 = False
        value74 = 139779327363504
        pos64 = pos
    else:
        token11 = text[pos]
        if token11.value == value75:
            mode64 = 1
            value74 = token11
            pos64 = pos + 1
        else:
            mode64 = False
            value74 = 139779327363504
            pos64 = pos
    if not mode64:
        mode63 = mode64
        value73 = value74
        pos63 = pos64
    else:
        pos = pos64
        mode63, value73, pos63 = yield (3, _parse_Name1, pos)
    if not mode63:
        mode62 = mode63
        value72 = value73
        pos62 = pos63
    else:
        pos = pos63
        while True:
            mode70, value81, pos70 = yield (3, _parse_Newline1, pos)
            if mode70:
                pos = pos70
            else:
                if mode70 is None:
                    mode69 = mode70
                    value80 = value81
                    pos69 = pos70
                break
        mode69 = 1
        value80 = None
        pos69 = pos
        if not mode69:
            mode68 = mode69
            value79 = value80
            pos68 = pos69
        else:
            pos = pos69
            value82 = '('
            if pos >= len(text):
                mode68 = False
                value79 = 139779327336520
                pos68 = pos
            else:
                token12 = text[pos]
                if token12.value == value82:
                    mode68 = 1
                    value79 = token12
                    pos68 = pos + 1
                else:
                    mode68 = False
                    value79 = 139779327336520
                    pos68 = pos
        if not mode68:
            mode67 = mode68
            value78 = value79
            pos67 = pos68
        else:
            pos = pos68
            while True:
                mode72, value84, pos72 = yield (3, _parse_Newline1, pos)
                if mode72:
                    pos = pos72
                else:
                    if mode72 is None:
                        mode71 = mode72
                        value83 = value84
                        pos71 = pos72
                    break
            mode71 = 1
            value83 = None
            pos71 = pos
            if mode71:
                mode67 = 1
                value78 = value79
                pos67 = pos71
            else:
                mode67 = mode71
                value78 = value83
                pos67 = pos71
        if not mode67:
            mode66 = mode67
            value77 = value78
            pos66 = pos67
        else:
            pos = pos67
            buf4 = []
            pos66 = pos
            while True:
                while True:
                    mode76, value88, pos76 = yield (3, _parse_Newline1, pos)
                    if mode76:
                        pos = pos76
                    else:
                        if mode76 is None:
                            mode75 = mode76
                            value87 = value88
                            pos75 = pos76
                        break
                mode75 = 1
                value87 = None
                pos75 = pos
                if not mode75:
                    mode74 = mode75
                    value86 = value87
                    pos74 = pos75
                else:
                    pos = pos75
                    mode74, value86, pos74 = yield (3, _parse_Name1, pos)
                if not mode74:
                    mode73 = mode74
                    value85 = value86
                    pos73 = pos74
                else:
                    pos = pos74
                    while True:
                        mode78, value90, pos78 = yield (3, _parse_Newline1, pos)
                        if mode78:
                            pos = pos78
                        else:
                            if mode78 is None:
                                mode77 = mode78
                                value89 = value90
                                pos77 = pos78
                            break
                    mode77 = 1
                    value89 = None
                    pos77 = pos
                    if mode77:
                        mode73 = 1
                        value85 = value86
                        pos73 = pos77
                    else:
                        mode73 = mode77
                        value85 = value89
                        pos73 = pos77
                if not mode73:
                    if mode73 is None:
                        mode66 = mode73
                        value77 = value85
                        pos66 = pos73
                    break
                buf4.append(value85)
                pos = pos73
                mode79, value91, pos79 = yield (3, _parse_Comma1, pos)
                if not mode79:
                    if mode79 is None:
                        mode66 = mode79
                        value77 = value91
                        pos66 = pos79
                    break
                pos = pos79
            mode66 = 1
            value77 = buf4
            pos66 = pos
        if not mode66:
            mode65 = mode66
            value76 = value77
            pos65 = pos66
        else:
            pos = pos66
            value93 = ')'
            if pos >= len(text):
                mode80 = False
                value92 = 139779327364512
                pos80 = pos
            else:
                token13 = text[pos]
                if token13.value == value93:
                    mode80 = 1
                    value92 = token13
                    pos80 = pos + 1
                else:
                    mode80 = False
                    value92 = 139779327364512
                    pos80 = pos
            if mode80:
                mode65 = 1
                value76 = value77
                pos65 = pos80
            else:
                mode65 = mode80
                value76 = value92
                pos65 = pos80
        if not mode65:
            mode62 = mode65
            value72 = value76
            pos62 = pos65
        else:
            pos = pos65
            while True:
                mode85, value98, pos85 = yield (3, _parse_Newline1, pos)
                if mode85:
                    pos = pos85
                else:
                    if mode85 is None:
                        mode84 = mode85
                        value97 = value98
                        pos84 = pos85
                    break
            mode84 = 1
            value97 = None
            pos84 = pos
            if not mode84:
                mode83 = mode84
                value96 = value97
                pos83 = pos84
            else:
                pos = pos84
                backtrack8 = pos
                value100 = '='
                if pos >= len(text):
                    mode86 = False
                    value99 = 139779327338312
                    pos86 = pos
                else:
                    token14 = text[pos]
                    if token14.value == value100:
                        mode86 = 1
                        value99 = token14
                        pos86 = pos + 1
                    else:
                        mode86 = False
                        value99 = 139779327338312
                        pos86 = pos
                if mode86 or mode86 is None:
                    mode83 = mode86
                    value96 = value99
                    pos83 = pos86
                else:
                    pos = backtrack8
                    value102 = ':'
                    if pos >= len(text):
                        mode87 = False
                        value101 = 139779327338256
                        pos87 = pos
                    else:
                        token15 = text[pos]
                        if token15.value == value102:
                            mode87 = 1
                            value101 = token15
                            pos87 = pos + 1
                        else:
                            mode87 = False
                            value101 = 139779327338256
                            pos87 = pos
                    if mode87 or mode87 is None:
                        mode83 = mode87
                        value96 = value101
                        pos83 = pos87
                    else:
                        pos = backtrack8
                        value104 = '=>'
                        if pos >= len(text):
                            mode88 = False
                            value103 = 139779327338648
                            pos88 = pos
                        else:
                            token16 = text[pos]
                            if token16.value == value104:
                                mode88 = 1
                                value103 = token16
                                pos88 = pos + 1
                            else:
                                mode88 = False
                                value103 = 139779327338648
                                pos88 = pos
                        if mode88 or mode88 is None:
                            mode83 = mode88
                            value96 = value103
                            pos83 = pos88
                        else:
                            pos = backtrack8
                            mode83 = False
                            value96 = 139779332159080
                            pos83 = pos
                            if pos83 < pos86:
                                mode83 = mode86
                                value96 = value99
                                pos83 = pos86
                            if pos83 < pos87:
                                mode83 = mode87
                                value96 = value101
                                pos83 = pos87
                            if pos83 < pos88:
                                mode83 = mode88
                                value96 = value103
                                pos83 = pos88
            if not mode83:
                mode82 = mode83
                value95 = value96
                pos82 = pos83
            else:
                pos = pos83
                while True:
                    mode90, value106, pos90 = yield (3, _parse_Newline1, pos)
                    if mode90:
                        pos = pos90
                    else:
                        if mode90 is None:
                            mode89 = mode90
                            value105 = value106
                            pos89 = pos90
                        break
                mode89 = 1
                value105 = None
                pos89 = pos
                if mode89:
                    mode82 = 1
                    value95 = value96
                    pos82 = pos89
                else:
                    mode82 = mode89
                    value95 = value105
                    pos82 = pos89
            if not mode82:
                mode81 = mode82
                value94 = value95
                pos81 = pos82
            else:
                pos = pos82
                mode81, value94, pos81 = yield (3, _parse_Expr1, pos)
            if not mode81:
                mode62 = mode81
                value72 = value94
                pos62 = pos81
            else:
                pos = pos81
                mode62 = 1
                value72 = TemplateDef(value73, value76, value94)
                pos62 = pos
    yield (mode62, value72, pos62)
    

def _parse_Def1(text, pos):
    backtrack9 = pos
    mode92, value108, pos92 = yield (3, _parse_TokenDef1, pos)
    if mode92 or mode92 is None:
        mode91 = mode92
        value107 = value108
        pos91 = pos92
    else:
        pos = backtrack9
        mode93, value109, pos93 = yield (3, _parse_ClassDef1, pos)
        if mode93 or mode93 is None:
            mode91 = mode93
            value107 = value109
            pos91 = pos93
        else:
            pos = backtrack9
            mode94, value110, pos94 = yield (3, _parse_TemplateDef1, pos)
            if mode94 or mode94 is None:
                mode91 = mode94
                value107 = value110
                pos91 = pos94
            else:
                pos = backtrack9
                mode95, value111, pos95 = yield (3, _parse_RuleDef1, pos)
                if mode95 or mode95 is None:
                    mode91 = mode95
                    value107 = value111
                    pos91 = pos95
                else:
                    pos = backtrack9
                    mode91 = False
                    value107 = 139779332159416
                    pos91 = pos
                    if pos91 < pos92:
                        mode91 = mode92
                        value107 = value108
                        pos91 = pos92
                    if pos91 < pos93:
                        mode91 = mode93
                        value107 = value109
                        pos91 = pos93
                    if pos91 < pos94:
                        mode91 = mode94
                        value107 = value110
                        pos91 = pos94
                    if pos91 < pos95:
                        mode91 = mode95
                        value107 = value111
                        pos91 = pos95
    yield (mode91, value107, pos91)
    

def _parse_Ref1(text, pos):
    mode97, value113, pos97 = yield (3, _parse_Word1, pos)
    if not mode97:
        mode96 = mode97
        value112 = value113
        pos96 = pos97
    else:
        pos = pos97
        mode96 = 1
        value112 = Ref(value113)
        pos96 = pos
    yield (mode96, value112, pos96)
    

def _parse_ListLiteral1(text, pos):
    value118 = '['
    if pos >= len(text):
        mode101 = False
        value117 = 139779327349872
        pos101 = pos
    else:
        token17 = text[pos]
        if token17.value == value118:
            mode101 = 1
            value117 = token17
            pos101 = pos + 1
        else:
            mode101 = False
            value117 = 139779327349872
            pos101 = pos
    if not mode101:
        mode100 = mode101
        value116 = value117
        pos100 = pos101
    else:
        pos = pos101
        buf5 = []
        pos100 = pos
        while True:
            while True:
                mode105, value122, pos105 = yield (3, _parse_Newline1, pos)
                if mode105:
                    pos = pos105
                else:
                    if mode105 is None:
                        mode104 = mode105
                        value121 = value122
                        pos104 = pos105
                    break
            mode104 = 1
            value121 = None
            pos104 = pos
            if not mode104:
                mode103 = mode104
                value120 = value121
                pos103 = pos104
            else:
                pos = pos104
                mode103, value120, pos103 = yield (3, _parse_Expr1, pos)
            if not mode103:
                mode102 = mode103
                value119 = value120
                pos102 = pos103
            else:
                pos = pos103
                while True:
                    mode107, value124, pos107 = yield (3, _parse_Newline1, pos)
                    if mode107:
                        pos = pos107
                    else:
                        if mode107 is None:
                            mode106 = mode107
                            value123 = value124
                            pos106 = pos107
                        break
                mode106 = 1
                value123 = None
                pos106 = pos
                if mode106:
                    mode102 = 1
                    value119 = value120
                    pos102 = pos106
                else:
                    mode102 = mode106
                    value119 = value123
                    pos102 = pos106
            if not mode102:
                if mode102 is None:
                    mode100 = mode102
                    value116 = value119
                    pos100 = pos102
                break
            buf5.append(value119)
            pos = pos102
            mode108, value125, pos108 = yield (3, _parse_Comma1, pos)
            if not mode108:
                if mode108 is None:
                    mode100 = mode108
                    value116 = value125
                    pos100 = pos108
                break
            pos = pos108
        mode100 = 1
        value116 = buf5
        pos100 = pos
    if not mode100:
        mode99 = mode100
        value115 = value116
        pos99 = pos100
    else:
        pos = pos100
        value127 = ']'
        if pos >= len(text):
            mode109 = False
            value126 = 139779327350376
            pos109 = pos
        else:
            token18 = text[pos]
            if token18.value == value127:
                mode109 = 1
                value126 = token18
                pos109 = pos + 1
            else:
                mode109 = False
                value126 = 139779327350376
                pos109 = pos
        if mode109:
            mode99 = 1
            value115 = value116
            pos99 = pos109
        else:
            mode99 = mode109
            value115 = value126
            pos99 = pos109
    if not mode99:
        mode98 = mode99
        value114 = value115
        pos98 = pos99
    else:
        pos = pos99
        mode98 = 1
        value114 = ListLiteral(value115)
        pos98 = pos
    yield (mode98, value114, pos98)
    

def _parse_Atom1(text, pos):
    backtrack10 = pos
    value132 = '('
    if pos >= len(text):
        mode113 = False
        value131 = 139779327351496
        pos113 = pos
    else:
        token19 = text[pos]
        if token19.value == value132:
            mode113 = 1
            value131 = token19
            pos113 = pos + 1
        else:
            mode113 = False
            value131 = 139779327351496
            pos113 = pos
    if not mode113:
        mode112 = mode113
        value130 = value131
        pos112 = pos113
    else:
        pos = pos113
        while True:
            mode116, value135, pos116 = yield (3, _parse_Newline1, pos)
            if mode116:
                pos = pos116
            else:
                if mode116 is None:
                    mode115 = mode116
                    value134 = value135
                    pos115 = pos116
                break
        mode115 = 1
        value134 = None
        pos115 = pos
        if not mode115:
            mode114 = mode115
            value133 = value134
            pos114 = pos115
        else:
            pos = pos115
            mode114, value133, pos114 = yield (3, _parse_Expr1, pos)
        if not mode114:
            mode112 = mode114
            value130 = value133
            pos112 = pos114
        else:
            pos = pos114
            while True:
                mode118, value137, pos118 = yield (3, _parse_Newline1, pos)
                if mode118:
                    pos = pos118
                else:
                    if mode118 is None:
                        mode117 = mode118
                        value136 = value137
                        pos117 = pos118
                    break
            mode117 = 1
            value136 = None
            pos117 = pos
            if mode117:
                mode112 = 1
                value130 = value133
                pos112 = pos117
            else:
                mode112 = mode117
                value130 = value136
                pos112 = pos117
    if not mode112:
        mode111 = mode112
        value129 = value130
        pos111 = pos112
    else:
        pos = pos112
        value139 = ')'
        if pos >= len(text):
            mode119 = False
            value138 = 139779327351328
            pos119 = pos
        else:
            token20 = text[pos]
            if token20.value == value139:
                mode119 = 1
                value138 = token20
                pos119 = pos + 1
            else:
                mode119 = False
                value138 = 139779327351328
                pos119 = pos
        if mode119:
            mode111 = 1
            value129 = value130
            pos111 = pos119
        else:
            mode111 = mode119
            value129 = value138
            pos111 = pos119
    if mode111 or mode111 is None:
        mode110 = mode111
        value128 = value129
        pos110 = pos111
    else:
        pos = backtrack10
        mode120, value140, pos120 = yield (3, _parse_Ref1, pos)
        if mode120 or mode120 is None:
            mode110 = mode120
            value128 = value140
            pos110 = pos120
        else:
            pos = backtrack10
            mode121, value141, pos121 = yield (3, _parse_StringLiteral1, pos)
            if mode121 or mode121 is None:
                mode110 = mode121
                value128 = value141
                pos110 = pos121
            else:
                pos = backtrack10
                mode122, value142, pos122 = yield (3, _parse_RegexLiteral1, pos)
                if mode122 or mode122 is None:
                    mode110 = mode122
                    value128 = value142
                    pos110 = pos122
                else:
                    pos = backtrack10
                    mode123, value143, pos123 = yield (3, _parse_ListLiteral1, pos)
                    if mode123 or mode123 is None:
                        mode110 = mode123
                        value128 = value143
                        pos110 = pos123
                    else:
                        pos = backtrack10
                        mode110 = False
                        value128 = 139779332160144
                        pos110 = pos
                        if pos110 < pos111:
                            mode110 = mode111
                            value128 = value129
                            pos110 = pos111
                        if pos110 < pos120:
                            mode110 = mode120
                            value128 = value140
                            pos110 = pos120
                        if pos110 < pos121:
                            mode110 = mode121
                            value128 = value141
                            pos110 = pos121
                        if pos110 < pos122:
                            mode110 = mode122
                            value128 = value142
                            pos110 = pos122
                        if pos110 < pos123:
                            mode110 = mode123
                            value128 = value143
                            pos110 = pos123
    yield (mode110, value128, pos110)
    

def _parse_KeywordArg1(text, pos):
    mode126, value146, pos126 = yield (3, _parse_Name1, pos)
    if not mode126:
        mode125 = mode126
        value145 = value146
        pos125 = pos126
    else:
        pos = pos126
        backtrack11 = pos
        value149 = '='
        if pos >= len(text):
            mode128 = False
            value148 = 139779327369344
            pos128 = pos
        else:
            token21 = text[pos]
            if token21.value == value149:
                mode128 = 1
                value148 = token21
                pos128 = pos + 1
            else:
                mode128 = False
                value148 = 139779327369344
                pos128 = pos
        if mode128 or mode128 is None:
            mode127 = mode128
            value147 = value148
            pos127 = pos128
        else:
            pos = backtrack11
            value151 = ':'
            if pos >= len(text):
                mode129 = False
                value150 = 139779327369904
                pos129 = pos
            else:
                token22 = text[pos]
                if token22.value == value151:
                    mode129 = 1
                    value150 = token22
                    pos129 = pos + 1
                else:
                    mode129 = False
                    value150 = 139779327369904
                    pos129 = pos
            if mode129 or mode129 is None:
                mode127 = mode129
                value147 = value150
                pos127 = pos129
            else:
                pos = backtrack11
                mode127 = False
                value147 = 139779332160648
                pos127 = pos
                if pos127 < pos128:
                    mode127 = mode128
                    value147 = value148
                    pos127 = pos128
                if pos127 < pos129:
                    mode127 = mode129
                    value147 = value150
                    pos127 = pos129
        if mode127:
            mode125 = 1
            value145 = value146
            pos125 = pos127
        else:
            mode125 = mode127
            value145 = value147
            pos125 = pos127
    if not mode125:
        mode124 = mode125
        value144 = value145
        pos124 = pos125
    else:
        pos = pos125
        mode130, value152, pos130 = yield (3, _parse_Expr1, pos)
        if not mode130:
            mode124 = mode130
            value144 = value152
            pos124 = pos130
        else:
            pos = pos130
            mode124 = 1
            value144 = KeywordArg(value145, value152)
            pos124 = pos
    yield (mode124, value144, pos124)
    

def _parse_ArgList1(text, pos):
    value157 = '('
    if pos >= len(text):
        mode134 = False
        value156 = 139779327370856
        pos134 = pos
    else:
        token23 = text[pos]
        if token23.value == value157:
            mode134 = 1
            value156 = token23
            pos134 = pos + 1
        else:
            mode134 = False
            value156 = 139779327370856
            pos134 = pos
    if not mode134:
        mode133 = mode134
        value155 = value156
        pos133 = pos134
    else:
        pos = pos134
        buf6 = []
        pos133 = pos
        while True:
            while True:
                mode138, value161, pos138 = yield (3, _parse_Newline1, pos)
                if mode138:
                    pos = pos138
                else:
                    if mode138 is None:
                        mode137 = mode138
                        value160 = value161
                        pos137 = pos138
                    break
            mode137 = 1
            value160 = None
            pos137 = pos
            if not mode137:
                mode136 = mode137
                value159 = value160
                pos136 = pos137
            else:
                pos = pos137
                backtrack12 = pos
                mode139, value162, pos139 = yield (3, _parse_KeywordArg1, pos)
                if mode139 or mode139 is None:
                    mode136 = mode139
                    value159 = value162
                    pos136 = pos139
                else:
                    pos = backtrack12
                    mode140, value163, pos140 = yield (3, _parse_Expr1, pos)
                    if mode140 or mode140 is None:
                        mode136 = mode140
                        value159 = value163
                        pos136 = pos140
                    else:
                        pos = backtrack12
                        mode136 = False
                        value159 = 139779332160984
                        pos136 = pos
                        if pos136 < pos139:
                            mode136 = mode139
                            value159 = value162
                            pos136 = pos139
                        if pos136 < pos140:
                            mode136 = mode140
                            value159 = value163
                            pos136 = pos140
            if not mode136:
                mode135 = mode136
                value158 = value159
                pos135 = pos136
            else:
                pos = pos136
                while True:
                    mode142, value165, pos142 = yield (3, _parse_Newline1, pos)
                    if mode142:
                        pos = pos142
                    else:
                        if mode142 is None:
                            mode141 = mode142
                            value164 = value165
                            pos141 = pos142
                        break
                mode141 = 1
                value164 = None
                pos141 = pos
                if mode141:
                    mode135 = 1
                    value158 = value159
                    pos135 = pos141
                else:
                    mode135 = mode141
                    value158 = value164
                    pos135 = pos141
            if not mode135:
                if mode135 is None:
                    mode133 = mode135
                    value155 = value158
                    pos133 = pos135
                break
            buf6.append(value158)
            pos = pos135
            mode143, value166, pos143 = yield (3, _parse_Comma1, pos)
            if not mode143:
                if mode143 is None:
                    mode133 = mode143
                    value155 = value166
                    pos133 = pos143
                break
            pos = pos143
        mode133 = 1
        value155 = buf6
        pos133 = pos
    if not mode133:
        mode132 = mode133
        value154 = value155
        pos132 = pos133
    else:
        pos = pos133
        value168 = ')'
        if pos >= len(text):
            mode144 = False
            value167 = 139779327371920
            pos144 = pos
        else:
            token24 = text[pos]
            if token24.value == value168:
                mode144 = 1
                value167 = token24
                pos144 = pos + 1
            else:
                mode144 = False
                value167 = 139779327371920
                pos144 = pos
        if mode144:
            mode132 = 1
            value154 = value155
            pos132 = pos144
        else:
            mode132 = mode144
            value154 = value167
            pos132 = pos144
    if not mode132:
        mode131 = mode132
        value153 = value154
        pos131 = pos132
    else:
        pos = pos132
        mode131 = 1
        value153 = ArgList(value154)
        pos131 = pos
    yield (mode131, value153, pos131)
    

def _parse_Expr1(text, pos):
    is_first1 = True
    while True:
        if not is_first1:
            while True:
                mode149, value173, pos149 = yield (3, _parse_Newline1, pos)
                if mode149:
                    pos = pos149
                else:
                    if mode149 is None:
                        mode148 = mode149
                        value172 = value173
                        pos148 = pos149
                    break
            mode148 = 1
            value172 = None
            pos148 = pos
            if not mode148:
                mode147 = mode148
                value171 = value172
                pos147 = pos148
            else:
                pos = pos148
                value174 = '|'
                if pos >= len(text):
                    mode147 = False
                    value171 = 139779327388248
                    pos147 = pos
                else:
                    token25 = text[pos]
                    if token25.value == value174:
                        mode147 = 1
                        value171 = token25
                        pos147 = pos + 1
                    else:
                        mode147 = False
                        value171 = 139779327388248
                        pos147 = pos
            if not mode147:
                mode146 = mode147
                value170 = value171
                pos146 = pos147
            else:
                pos = pos147
                while True:
                    mode151, value176, pos151 = yield (3, _parse_Newline1, pos)
                    if mode151:
                        pos = pos151
                    else:
                        if mode151 is None:
                            mode150 = mode151
                            value175 = value176
                            pos150 = pos151
                        break
                mode150 = 1
                value175 = None
                pos150 = pos
                if mode150:
                    mode146 = 1
                    value170 = value171
                    pos146 = pos150
                else:
                    mode146 = mode150
                    value170 = value175
                    pos146 = pos150
            if not mode146:
                if mode146 is None:
                    mode145 = mode146
                    value169 = value170
                    pos145 = pos146
                break
            pos = pos146
        is_first2 = True
        while True:
            if not is_first2:
                while True:
                    mode156, value181, pos156 = yield (3, _parse_Newline1, pos)
                    if mode156:
                        pos = pos156
                    else:
                        if mode156 is None:
                            mode155 = mode156
                            value180 = value181
                            pos155 = pos156
                        break
                mode155 = 1
                value180 = None
                pos155 = pos
                if not mode155:
                    mode154 = mode155
                    value179 = value180
                    pos154 = pos155
                else:
                    pos = pos155
                    backtrack13 = pos
                    value183 = '<<'
                    if pos >= len(text):
                        mode157 = False
                        value182 = 139779327386512
                        pos157 = pos
                    else:
                        token26 = text[pos]
                        if token26.value == value183:
                            mode157 = 1
                            value182 = token26
                            pos157 = pos + 1
                        else:
                            mode157 = False
                            value182 = 139779327386512
                            pos157 = pos
                    if mode157 or mode157 is None:
                        mode154 = mode157
                        value179 = value182
                        pos154 = pos157
                    else:
                        pos = backtrack13
                        value185 = '>>'
                        if pos >= len(text):
                            mode158 = False
                            value184 = 139779327386680
                            pos158 = pos
                        else:
                            token27 = text[pos]
                            if token27.value == value185:
                                mode158 = 1
                                value184 = token27
                                pos158 = pos + 1
                            else:
                                mode158 = False
                                value184 = 139779327386680
                                pos158 = pos
                        if mode158 or mode158 is None:
                            mode154 = mode158
                            value179 = value184
                            pos154 = pos158
                        else:
                            pos = backtrack13
                            value187 = '<<!'
                            if pos >= len(text):
                                mode159 = False
                                value186 = 139779327387632
                                pos159 = pos
                            else:
                                token28 = text[pos]
                                if token28.value == value187:
                                    mode159 = 1
                                    value186 = token28
                                    pos159 = pos + 1
                                else:
                                    mode159 = False
                                    value186 = 139779327387632
                                    pos159 = pos
                            if mode159 or mode159 is None:
                                mode154 = mode159
                                value179 = value186
                                pos154 = pos159
                            else:
                                pos = backtrack13
                                value189 = '!>>'
                                if pos >= len(text):
                                    mode160 = False
                                    value188 = 139779327385896
                                    pos160 = pos
                                else:
                                    token29 = text[pos]
                                    if token29.value == value189:
                                        mode160 = 1
                                        value188 = token29
                                        pos160 = pos + 1
                                    else:
                                        mode160 = False
                                        value188 = 139779327385896
                                        pos160 = pos
                                if mode160 or mode160 is None:
                                    mode154 = mode160
                                    value179 = value188
                                    pos154 = pos160
                                else:
                                    pos = backtrack13
                                    mode154 = False
                                    value179 = 139779332133440
                                    pos154 = pos
                                    if pos154 < pos157:
                                        mode154 = mode157
                                        value179 = value182
                                        pos154 = pos157
                                    if pos154 < pos158:
                                        mode154 = mode158
                                        value179 = value184
                                        pos154 = pos158
                                    if pos154 < pos159:
                                        mode154 = mode159
                                        value179 = value186
                                        pos154 = pos159
                                    if pos154 < pos160:
                                        mode154 = mode160
                                        value179 = value188
                                        pos154 = pos160
                if not mode154:
                    mode153 = mode154
                    value178 = value179
                    pos153 = pos154
                else:
                    pos = pos154
                    while True:
                        mode162, value191, pos162 = yield (3, _parse_Newline1, pos)
                        if mode162:
                            pos = pos162
                        else:
                            if mode162 is None:
                                mode161 = mode162
                                value190 = value191
                                pos161 = pos162
                            break
                    mode161 = 1
                    value190 = None
                    pos161 = pos
                    if mode161:
                        mode153 = 1
                        value178 = value179
                        pos153 = pos161
                    else:
                        mode153 = mode161
                        value178 = value190
                        pos153 = pos161
                if not mode153:
                    if mode153 is None:
                        mode152 = mode153
                        value177 = value178
                        pos152 = pos153
                    break
                pos = pos153
            is_first3 = True
            while True:
                if not is_first3:
                    while True:
                        mode167, value196, pos167 = yield (3, _parse_Newline1, pos)
                        if mode167:
                            pos = pos167
                        else:
                            if mode167 is None:
                                mode166 = mode167
                                value195 = value196
                                pos166 = pos167
                            break
                    mode166 = 1
                    value195 = None
                    pos166 = pos
                    if not mode166:
                        mode165 = mode166
                        value194 = value195
                        pos165 = pos166
                    else:
                        pos = pos166
                        backtrack14 = pos
                        value198 = '/'
                        if pos >= len(text):
                            mode168 = False
                            value197 = 139779327368048
                            pos168 = pos
                        else:
                            token30 = text[pos]
                            if token30.value == value198:
                                mode168 = 1
                                value197 = token30
                                pos168 = pos + 1
                            else:
                                mode168 = False
                                value197 = 139779327368048
                                pos168 = pos
                        if mode168 or mode168 is None:
                            mode165 = mode168
                            value194 = value197
                            pos165 = pos168
                        else:
                            pos = backtrack14
                            value200 = '//'
                            if pos >= len(text):
                                mode169 = False
                                value199 = 139779327368384
                                pos169 = pos
                            else:
                                token31 = text[pos]
                                if token31.value == value200:
                                    mode169 = 1
                                    value199 = token31
                                    pos169 = pos + 1
                                else:
                                    mode169 = False
                                    value199 = 139779327368384
                                    pos169 = pos
                            if mode169 or mode169 is None:
                                mode165 = mode169
                                value194 = value199
                                pos165 = pos169
                            else:
                                pos = backtrack14
                                mode165 = False
                                value194 = 139779332133104
                                pos165 = pos
                                if pos165 < pos168:
                                    mode165 = mode168
                                    value194 = value197
                                    pos165 = pos168
                                if pos165 < pos169:
                                    mode165 = mode169
                                    value194 = value199
                                    pos165 = pos169
                    if not mode165:
                        mode164 = mode165
                        value193 = value194
                        pos164 = pos165
                    else:
                        pos = pos165
                        while True:
                            mode171, value202, pos171 = yield (3, _parse_Newline1, pos)
                            if mode171:
                                pos = pos171
                            else:
                                if mode171 is None:
                                    mode170 = mode171
                                    value201 = value202
                                    pos170 = pos171
                                break
                        mode170 = 1
                        value201 = None
                        pos170 = pos
                        if mode170:
                            mode164 = 1
                            value193 = value194
                            pos164 = pos170
                        else:
                            mode164 = mode170
                            value193 = value201
                            pos164 = pos170
                    if not mode164:
                        if mode164 is None:
                            mode163 = mode164
                            value192 = value193
                            pos163 = pos164
                        break
                    pos = pos164
                mode174, value205, pos174 = yield (3, _parse_Atom1, pos)
                mode173 = mode174
                value204 = value205
                pos173 = pos174
                if mode174:
                    pos = pos174
                    while True:
                        mode175, value206, pos175 = yield (3, _parse_ArgList1, pos)
                        if not mode175:
                            if mode175 is None:
                                mode173 = mode175
                                value204 = value206
                                pos173 = pos175
                            else:
                                pos173 = pos
                            break
                        pos = pos175
                        value204 = Postfix(value204, value206)
                mode172 = mode173
                value203 = value204
                pos172 = pos173
                if mode173:
                    pos = pos173
                    while True:
                        backtrack15 = pos
                        value209 = '?'
                        if pos >= len(text):
                            mode177 = False
                            value208 = 139779327366032
                            pos177 = pos
                        else:
                            token32 = text[pos]
                            if token32.value == value209:
                                mode177 = 1
                                value208 = token32
                                pos177 = pos + 1
                            else:
                                mode177 = False
                                value208 = 139779327366032
                                pos177 = pos
                        if mode177 or mode177 is None:
                            mode176 = mode177
                            value207 = value208
                            pos176 = pos177
                        else:
                            pos = backtrack15
                            value211 = '*'
                            if pos >= len(text):
                                mode178 = False
                                value210 = 139779327366480
                                pos178 = pos
                            else:
                                token33 = text[pos]
                                if token33.value == value211:
                                    mode178 = 1
                                    value210 = token33
                                    pos178 = pos + 1
                                else:
                                    mode178 = False
                                    value210 = 139779327366480
                                    pos178 = pos
                            if mode178 or mode178 is None:
                                mode176 = mode178
                                value207 = value210
                                pos176 = pos178
                            else:
                                pos = backtrack15
                                value213 = '+'
                                if pos >= len(text):
                                    mode179 = False
                                    value212 = 139779327365864
                                    pos179 = pos
                                else:
                                    token34 = text[pos]
                                    if token34.value == value213:
                                        mode179 = 1
                                        value212 = token34
                                        pos179 = pos + 1
                                    else:
                                        mode179 = False
                                        value212 = 139779327365864
                                        pos179 = pos
                                if mode179 or mode179 is None:
                                    mode176 = mode179
                                    value207 = value212
                                    pos176 = pos179
                                else:
                                    pos = backtrack15
                                    value215 = '!'
                                    if pos >= len(text):
                                        mode180 = False
                                        value214 = 139779327366984
                                        pos180 = pos
                                    else:
                                        token35 = text[pos]
                                        if token35.value == value215:
                                            mode180 = 1
                                            value214 = token35
                                            pos180 = pos + 1
                                        else:
                                            mode180 = False
                                            value214 = 139779327366984
                                            pos180 = pos
                                    if mode180 or mode180 is None:
                                        mode176 = mode180
                                        value207 = value214
                                        pos176 = pos180
                                    else:
                                        pos = backtrack15
                                        mode176 = False
                                        value207 = 139779332132936
                                        pos176 = pos
                                        if pos176 < pos177:
                                            mode176 = mode177
                                            value207 = value208
                                            pos176 = pos177
                                        if pos176 < pos178:
                                            mode176 = mode178
                                            value207 = value210
                                            pos176 = pos178
                                        if pos176 < pos179:
                                            mode176 = mode179
                                            value207 = value212
                                            pos176 = pos179
                                        if pos176 < pos180:
                                            mode176 = mode180
                                            value207 = value214
                                            pos176 = pos180
                        if not mode176:
                            if mode176 is None:
                                mode172 = mode176
                                value203 = value207
                                pos172 = pos176
                            else:
                                pos172 = pos
                            break
                        pos = pos176
                        value203 = Postfix(value203, value207)
                if not mode172:
                    if is_first3 or mode172 is None:
                        mode163 = mode172
                        value192 = value203
                        pos163 = pos172
                    break
                pos = pos163 = pos172
                if is_first3:
                    is_first3 = False
                    value192 = value203
                    mode163 = 1
                else:
                    value192 = Infix(value192, value193, value203)
            if not mode163:
                if is_first2 or mode163 is None:
                    mode152 = mode163
                    value177 = value192
                    pos152 = pos163
                break
            pos = pos152 = pos163
            if is_first2:
                is_first2 = False
                value177 = value192
                mode152 = 1
            else:
                value177 = Infix(value177, value178, value192)
        if not mode152:
            if is_first1 or mode152 is None:
                mode145 = mode152
                value169 = value177
                pos145 = pos152
            break
        pos = pos145 = pos152
        if is_first1:
            is_first1 = False
            value169 = value177
            mode145 = 1
        else:
            value169 = Infix(value169, value170, value177)
    yield (mode145, value169, pos145)
    

def _parse_start1(text, pos):
    while True:
        mode183, value218, pos183 = yield (3, _parse_Newline1, pos)
        if mode183:
            pos = pos183
        else:
            if mode183 is None:
                mode182 = mode183
                value217 = value218
                pos182 = pos183
            break
    mode182 = 1
    value217 = None
    pos182 = pos
    if not mode182:
        mode181 = mode182
        value216 = value217
        pos181 = pos182
    else:
        pos = pos182
        buf7 = []
        pos181 = pos
        while True:
            mode184, value219, pos184 = yield (3, _parse_Def1, pos)
            if not mode184:
                if mode184 is None:
                    mode181 = mode184
                    value216 = value219
                    pos181 = pos184
                break
            buf7.append(value219)
            pos = pos184
            mode185, value220, pos185 = yield (3, _parse_Sep1, pos)
            if not mode185:
                if mode185 is None:
                    mode181 = mode185
                    value216 = value220
                    pos181 = pos185
                break
            pos = pos185
        mode181 = 1
        value216 = buf7
        pos181 = pos
    yield (mode181, value216, pos181)
    

def _parse_Space1(text, pos):
    if pos < len(text):
        value222 = text[pos]
        if isinstance(value222, Space):
            mode186 = 2
            value221 = None
            pos186 = pos + 1
        else:
            mode186 = False
            value221 = 139779335188552
            pos186 = pos
    else:
        mode186 = False
        value221 = 139779335188552
        pos186 = pos
    yield (mode186, value221, pos186)
    

def _parse_Word1(text, pos):
    if pos < len(text):
        value224 = text[pos]
        if isinstance(value224, Word):
            mode187 = 1
            value223 = value224
            pos187 = pos + 1
        else:
            mode187 = False
            value223 = 139779327388360
            pos187 = pos
    else:
        mode187 = False
        value223 = 139779327388360
        pos187 = pos
    yield (mode187, value223, pos187)
    

def _parse_Symbol1(text, pos):
    if pos < len(text):
        value226 = text[pos]
        if isinstance(value226, Symbol):
            mode188 = 1
            value225 = value226
            pos188 = pos + 1
        else:
            mode188 = False
            value225 = 139779327388472
            pos188 = pos
    else:
        mode188 = False
        value225 = 139779327388472
        pos188 = pos
    yield (mode188, value225, pos188)
    

def _parse_StringLiteral1(text, pos):
    if pos < len(text):
        value228 = text[pos]
        if isinstance(value228, StringLiteral):
            mode189 = 1
            value227 = value228
            pos189 = pos + 1
        else:
            mode189 = False
            value227 = 139779327388528
            pos189 = pos
    else:
        mode189 = False
        value227 = 139779327388528
        pos189 = pos
    yield (mode189, value227, pos189)
    

def _parse_RegexLiteral1(text, pos):
    if pos < len(text):
        value230 = text[pos]
        if isinstance(value230, RegexLiteral):
            mode190 = 1
            value229 = value230
            pos190 = pos + 1
        else:
            mode190 = False
            value229 = 139779327388640
            pos190 = pos
    else:
        mode190 = False
        value229 = 139779327388640
        pos190 = pos
    yield (mode190, value229, pos190)
    

def _parse_Newline1(text, pos):
    if pos < len(text):
        value232 = text[pos]
        if isinstance(value232, Newline):
            mode191 = 1
            value231 = value232
            pos191 = pos + 1
        else:
            mode191 = False
            value231 = 139779327388584
            pos191 = pos
    else:
        mode191 = False
        value231 = 139779327388584
        pos191 = pos
    yield (mode191, value231, pos191)
    

def _parse_Comment1(text, pos):
    if pos < len(text):
        value234 = text[pos]
        if isinstance(value234, Comment):
            mode192 = 2
            value233 = None
            pos192 = pos + 1
        else:
            mode192 = False
            value233 = 139779327388752
            pos192 = pos
    else:
        mode192 = False
        value233 = 139779327388752
        pos192 = pos
    yield (mode192, value233, pos192)
    

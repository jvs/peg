# Generated by ../generate_metasyntax.py
import re

class Node:
    _fields = ()

    def __eq__(self, other):
        if not isinstance(other, self.__class__):
            return False
        for field in self._fields:
            if getattr(self, field) != getattr(other, field):
                return False
        return True

    def _asdict(self):
        return {k: getattr(self, k) for k in self._fields}

    def _replace(self, **kw):
        for field in self._fields:
            if field not in kw:
                kw[field] = getattr(self, field)
        return self.__class__(**kw)


class Token(Node):
    _fields = ('value',)

    def __init__(self, value):
        self.value = value

    def __repr__(self):
        return f'{self.__class__.__name__}({self.value!r})'


class Space(Token): pass
pattern1 = re.compile('[ \\t]+')

class Word(Token): pass
pattern2 = re.compile('[_a-zA-Z][_a-zA-Z0-9]*')

class Symbol(Token): pass
pattern3 = re.compile('<\\||\\|>|<<\\!|\\!>>|<<|>>|=>|\\/\\/|[=;,:\\|\\/\\*\\+\\?\\!\\(\\)\\[\\]\\{\\}]')

class StringLiteral(Token): pass
pattern4 = re.compile('(?s)("""([^\\\\]|\\\\.)*?""")')
pattern5 = re.compile("(?s)('\\''([^\\\\]|\\\\.)*?'\\'')")
pattern6 = re.compile('("([^"\\\\]|\\\\.)*")')
pattern7 = re.compile("('([^'\\\\]|\\\\.)*')")

class RegexLiteral(Token): pass
pattern8 = re.compile('\\@\\/([^\\/\\\\]|\\\\.)*\\/')

class Newline(Token): pass
pattern9 = re.compile('[\\r\\n][\\s]*')

class PythonSection(Token): pass
pattern10 = re.compile('(?s)```.*?```')

class PythonExpression(Token): pass
pattern11 = re.compile('`[^`\\n]*`')

class Comment(Token): pass
pattern12 = re.compile('#[^\\r\\n]*')

class RuleDef(Node):
    _fields = ('is_ignored', 'name', 'expr')
    value = 'RuleDef'

    def __init__(self, is_ignored, name, expr):
        self.is_ignored = is_ignored
        self.name = name
        self.expr = expr

    def __repr__(self):
        return f'RuleDef(is_ignored={self.is_ignored!r}, name={self.name!r}, expr={self.expr!r})'


class ClassDef(Node):
    _fields = ('name', 'fields')
    value = 'ClassDef'

    def __init__(self, name, fields):
        self.name = name
        self.fields = fields

    def __repr__(self):
        return f'ClassDef(name={self.name!r}, fields={self.fields!r})'


class TokenDef(Node):
    _fields = ('is_ignored', 'child')
    value = 'TokenDef'

    def __init__(self, is_ignored, child):
        self.is_ignored = is_ignored
        self.child = child

    def __repr__(self):
        return f'TokenDef(is_ignored={self.is_ignored!r}, child={self.child!r})'


class TemplateDef(Node):
    _fields = ('name', 'params', 'expr')
    value = 'TemplateDef'

    def __init__(self, name, params, expr):
        self.name = name
        self.params = params
        self.expr = expr

    def __repr__(self):
        return f'TemplateDef(name={self.name!r}, params={self.params!r}, expr={self.expr!r})'


class Ref(Node):
    _fields = ('name',)
    value = 'Ref'

    def __init__(self, name):
        self.name = name

    def __repr__(self):
        return f'Ref(name={self.name!r})'


class ListLiteral(Node):
    _fields = ('elements',)
    value = 'ListLiteral'

    def __init__(self, elements):
        self.elements = elements

    def __repr__(self):
        return f'ListLiteral(elements={self.elements!r})'


class KeywordArg(Node):
    _fields = ('name', 'expr')
    value = 'KeywordArg'

    def __init__(self, name, expr):
        self.name = name
        self.expr = expr

    def __repr__(self):
        return f'KeywordArg(name={self.name!r}, expr={self.expr!r})'


class ArgList(Node):
    _fields = ('args',)
    value = 'ArgList'

    def __init__(self, args):
        self.args = args

    def __repr__(self):
        return f'ArgList(args={self.args!r})'


class ParseError(Exception):
    def __init__(self, mode, expr_code, pos):
        self.is_error = (mode is None)
        self.expr_code = expr_code
        self.pos = pos



class Infix(Node):
    _fields = ('left', 'operator', 'right')

    def __init__(self, left, operator, right):
        self.left = left
        self.operator = operator
        self.right = right

    def __repr__(self):
        return f'Infix({self.left!r}, {self.operator!r}, {self.right!r})'


class Postfix(Node):
    _fields = ('left', 'operator')

    def __init__(self, left, operator):
        self.left = left
        self.operator = operator

    def __repr__(self):
        return f'Postfix({self.left!r}, {self.operator!r})'


class Prefix(Node):
    _fields = ('operator', 'right')

    def __init__(self, operator, right):
        self.operator = operator
        self.right = right

    def __repr__(self):
        return f'Prefix({self.operator!r}, {self.right!r})'


def parse(text, pos=0):
    text = _run(text, pos, _tokenize)
    pos = 0
    return _run(text, pos, _parse_start1)


def _run(text, pos, start):
    memo = {}
    result = None

    key = (3, start, pos)
    gtor = start(text, pos)
    stack = [(key, gtor)]

    while stack:
        key, gtor = stack[-1]
        result = gtor.send(result)

        if result[0] != 3:
            stack.pop()
            memo[key] = result
        elif result in memo:
            result = memo[result]
        else:
            gtor = result[1](text, result[2])
            stack.append((result, gtor))
            result = None

    if result[0]:
        return result[1]
    else:
        raise ParseError(*result)


def visit(node):
    if isinstance(node, list):
        yield from node

    elif isinstance(node, Node):
        yield node

        if hasattr(node, '_fields'):
            for field in node._fields:
                yield from visit(getattr(node, field))


def transform(node, *callbacks):
    if not callbacks:
        return node

    if len(callbacks) == 1:
        callback = callbacks[0]
    else:
        def callback(node):
            for f in callbacks:
                node = f(node)
            return node

    return _transform(node, callback)


def _transform(node, callback):
    if isinstance(node, list):
        return [_transform(x, callback) for x in node]

    if not isinstance(node, Node):
        return node

    updates = {}
    for field in node._fields:
        was = getattr(node, field)
        now = _transform(was, callback)
        if was is not now:
            updates[field] = now

    if updates:
        node = node._replace(**updates)

    return callback(node)


def _tokenize(text, pos):
    buf1 = []
    while True:
        backtrack1 = pos
        match1 = pattern1.match(text, pos)
        if match1:
            mode4 = 1
            value4 = match1.group(0)
            pos4 = match1.end()
        else:
            mode4 = False
            value4 = 139668461569976
            pos4 = pos
        if mode4:
            mode3 = 2
            value3 = None
            pos3 = pos4
        else:
            mode3 = mode4
            value3 = value4
            pos3 = pos4
        if mode3 or mode3 is None:
            mode2 = mode3
            value2 = value3
            pos2 = pos3
        else:
            pos = backtrack1
            match2 = pattern2.match(text, pos)
            if match2:
                mode6 = 1
                value6 = match2.group(0)
                pos6 = match2.end()
            else:
                mode6 = False
                value6 = 139668461571376
                pos6 = pos
            if mode6:
                mode5 = 1
                value5 = Word(value6)
                pos5 = pos6
            else:
                mode5 = mode6
                value5 = value6
                pos5 = pos6
            if mode5 or mode5 is None:
                mode2 = mode5
                value2 = value5
                pos2 = pos5
            else:
                pos = backtrack1
                match3 = pattern3.match(text, pos)
                if match3:
                    mode8 = 1
                    value8 = match3.group(0)
                    pos8 = match3.end()
                else:
                    mode8 = False
                    value8 = 139668461571488
                    pos8 = pos
                if mode8:
                    mode7 = 1
                    value7 = Symbol(value8)
                    pos7 = pos8
                else:
                    mode7 = mode8
                    value7 = value8
                    pos7 = pos8
                if mode7 or mode7 is None:
                    mode2 = mode7
                    value2 = value7
                    pos2 = pos7
                else:
                    pos = backtrack1
                    backtrack2 = pos
                    match4 = pattern4.match(text, pos)
                    if match4:
                        mode11 = 1
                        value11 = match4.group(0)
                        pos11 = match4.end()
                    else:
                        mode11 = False
                        value11 = 139668461571936
                        pos11 = pos
                    if mode11 or mode11 is None:
                        mode10 = mode11
                        value10 = value11
                        pos10 = pos11
                    else:
                        pos = backtrack2
                        match5 = pattern5.match(text, pos)
                        if match5:
                            mode12 = 1
                            value12 = match5.group(0)
                            pos12 = match5.end()
                        else:
                            mode12 = False
                            value12 = 139668461539456
                            pos12 = pos
                        if mode12 or mode12 is None:
                            mode10 = mode12
                            value10 = value12
                            pos10 = pos12
                        else:
                            pos = backtrack2
                            match6 = pattern6.match(text, pos)
                            if match6:
                                mode13 = 1
                                value13 = match6.group(0)
                                pos13 = match6.end()
                            else:
                                mode13 = False
                                value13 = 139668461571992
                                pos13 = pos
                            if mode13 or mode13 is None:
                                mode10 = mode13
                                value10 = value13
                                pos10 = pos13
                            else:
                                pos = backtrack2
                                match7 = pattern7.match(text, pos)
                                if match7:
                                    mode14 = 1
                                    value14 = match7.group(0)
                                    pos14 = match7.end()
                                else:
                                    mode14 = False
                                    value14 = 139668461571824
                                    pos14 = pos
                                if mode14 or mode14 is None:
                                    mode10 = mode14
                                    value10 = value14
                                    pos10 = pos14
                                else:
                                    pos = backtrack2
                                    mode10 = False
                                    value10 = 139668461682024
                                    pos10 = pos
                                    if pos10 < pos11:
                                        mode10 = mode11
                                        value10 = value11
                                        pos10 = pos11
                                    if pos10 < pos12:
                                        mode10 = mode12
                                        value10 = value12
                                        pos10 = pos12
                                    if pos10 < pos13:
                                        mode10 = mode13
                                        value10 = value13
                                        pos10 = pos13
                                    if pos10 < pos14:
                                        mode10 = mode14
                                        value10 = value14
                                        pos10 = pos14
                    if mode10:
                        mode9 = 1
                        value9 = StringLiteral(value10)
                        pos9 = pos10
                    else:
                        mode9 = mode10
                        value9 = value10
                        pos9 = pos10
                    if mode9 or mode9 is None:
                        mode2 = mode9
                        value2 = value9
                        pos2 = pos9
                    else:
                        pos = backtrack1
                        match8 = pattern8.match(text, pos)
                        if match8:
                            mode16 = 1
                            value16 = match8.group(0)
                            pos16 = match8.end()
                        else:
                            mode16 = False
                            value16 = 139668461539568
                            pos16 = pos
                        if mode16:
                            mode15 = 1
                            value15 = RegexLiteral(value16)
                            pos15 = pos16
                        else:
                            mode15 = mode16
                            value15 = value16
                            pos15 = pos16
                        if mode15 or mode15 is None:
                            mode2 = mode15
                            value2 = value15
                            pos2 = pos15
                        else:
                            pos = backtrack1
                            match9 = pattern9.match(text, pos)
                            if match9:
                                mode18 = 1
                                value18 = match9.group(0)
                                pos18 = match9.end()
                            else:
                                mode18 = False
                                value18 = 139668461539680
                                pos18 = pos
                            if mode18:
                                mode17 = 1
                                value17 = Newline(value18)
                                pos17 = pos18
                            else:
                                mode17 = mode18
                                value17 = value18
                                pos17 = pos18
                            if mode17 or mode17 is None:
                                mode2 = mode17
                                value2 = value17
                                pos2 = pos17
                            else:
                                pos = backtrack1
                                match10 = pattern10.match(text, pos)
                                if match10:
                                    mode20 = 1
                                    value20 = match10.group(0)
                                    pos20 = match10.end()
                                else:
                                    mode20 = False
                                    value20 = 139668461539904
                                    pos20 = pos
                                if mode20:
                                    mode19 = 1
                                    value19 = PythonSection(value20)
                                    pos19 = pos20
                                else:
                                    mode19 = mode20
                                    value19 = value20
                                    pos19 = pos20
                                if mode19 or mode19 is None:
                                    mode2 = mode19
                                    value2 = value19
                                    pos2 = pos19
                                else:
                                    pos = backtrack1
                                    match11 = pattern11.match(text, pos)
                                    if match11:
                                        mode22 = 1
                                        value22 = match11.group(0)
                                        pos22 = match11.end()
                                    else:
                                        mode22 = False
                                        value22 = 139668461540016
                                        pos22 = pos
                                    if mode22:
                                        mode21 = 1
                                        value21 = PythonExpression(value22)
                                        pos21 = pos22
                                    else:
                                        mode21 = mode22
                                        value21 = value22
                                        pos21 = pos22
                                    if mode21 or mode21 is None:
                                        mode2 = mode21
                                        value2 = value21
                                        pos2 = pos21
                                    else:
                                        pos = backtrack1
                                        match12 = pattern12.match(text, pos)
                                        if match12:
                                            mode24 = 1
                                            value24 = match12.group(0)
                                            pos24 = match12.end()
                                        else:
                                            mode24 = False
                                            value24 = 139668461540128
                                            pos24 = pos
                                        if mode24:
                                            mode23 = 2
                                            value23 = None
                                            pos23 = pos24
                                        else:
                                            mode23 = mode24
                                            value23 = value24
                                            pos23 = pos24
                                        if mode23 or mode23 is None:
                                            mode2 = mode23
                                            value2 = value23
                                            pos2 = pos23
                                        else:
                                            pos = backtrack1
                                            mode2 = False
                                            value2 = 139668461571544
                                            pos2 = pos
                                            if pos2 < pos3:
                                                mode2 = mode3
                                                value2 = value3
                                                pos2 = pos3
                                            if pos2 < pos5:
                                                mode2 = mode5
                                                value2 = value5
                                                pos2 = pos5
                                            if pos2 < pos7:
                                                mode2 = mode7
                                                value2 = value7
                                                pos2 = pos7
                                            if pos2 < pos9:
                                                mode2 = mode9
                                                value2 = value9
                                                pos2 = pos9
                                            if pos2 < pos15:
                                                mode2 = mode15
                                                value2 = value15
                                                pos2 = pos15
                                            if pos2 < pos17:
                                                mode2 = mode17
                                                value2 = value17
                                                pos2 = pos17
                                            if pos2 < pos19:
                                                mode2 = mode19
                                                value2 = value19
                                                pos2 = pos19
                                            if pos2 < pos21:
                                                mode2 = mode21
                                                value2 = value21
                                                pos2 = pos21
                                            if pos2 < pos23:
                                                mode2 = mode23
                                                value2 = value23
                                                pos2 = pos23
        if not mode2:
            if mode2 is None:
                mode1 = mode2
                value1 = value2
                pos1 = pos2
            break
        if mode2 != 2:
            buf1.append(value2)
        pos = pos2
    mode1 = 1
    value1 = buf1
    pos1 = pos
    yield (mode1, value1, pos1)
    

def tokenize(text, pos=0):
    return _run(text, pos, _tokenize)


def _parse_Sep1(text, pos):
    buf2 = []
    while True:
        backtrack3 = pos
        mode27, value27, pos27 = yield (3, _parse_Newline1, pos)
        if mode27 or mode27 is None:
            mode26 = mode27
            value26 = value27
            pos26 = pos27
        else:
            pos = backtrack3
            value29 = ';'
            if pos >= len(text):
                mode28 = False
                value28 = 139668461540968
                pos28 = pos
            else:
                token1 = text[pos]
                if token1.value == value29:
                    mode28 = 1
                    value28 = token1
                    pos28 = pos + 1
                else:
                    mode28 = False
                    value28 = 139668461540968
                    pos28 = pos
            if mode28 or mode28 is None:
                mode26 = mode28
                value26 = value28
                pos26 = pos28
            else:
                pos = backtrack3
                mode26 = False
                value26 = 139668461695048
                pos26 = pos
                if pos26 < pos27:
                    mode26 = mode27
                    value26 = value27
                    pos26 = pos27
                if pos26 < pos28:
                    mode26 = mode28
                    value26 = value28
                    pos26 = pos28
        if not mode26:
            if mode26 is None:
                mode25 = mode26
                value25 = value26
                pos25 = pos26
            break
        if mode26 != 2:
            buf2.append(value26)
        pos = pos26
    if not buf2:
        mode25 = False
        value25 = 139668461695216
        pos25 = pos
    else:
        mode25 = 1
        value25 = buf2
        pos25 = pos
    yield (mode25, value25, pos25)
    

def _parse_Name1(text, pos):
    mode29, value30, pos29 = yield (3, _parse_Word1, pos)
    yield (mode29, value30, pos29)
    

def _parse_Comma1(text, pos):
    while True:
        mode33, value34, pos33 = yield (3, _parse_Newline1, pos)
        if mode33:
            pos = pos33
        else:
            if mode33 is None:
                mode32 = mode33
                value33 = value34
                pos32 = pos33
            break
    mode32 = 1
    value33 = None
    pos32 = pos
    if not mode32:
        mode31 = mode32
        value32 = value33
        pos31 = pos32
    else:
        pos = pos32
        value35 = ','
        if pos >= len(text):
            mode31 = False
            value32 = 139668461542032
            pos31 = pos
        else:
            token2 = text[pos]
            if token2.value == value35:
                mode31 = 1
                value32 = token2
                pos31 = pos + 1
            else:
                mode31 = False
                value32 = 139668461542032
                pos31 = pos
    if not mode31:
        mode30 = mode31
        value31 = value32
        pos30 = pos31
    else:
        pos = pos31
        while True:
            mode35, value37, pos35 = yield (3, _parse_Newline1, pos)
            if mode35:
                pos = pos35
            else:
                if mode35 is None:
                    mode34 = mode35
                    value36 = value37
                    pos34 = pos35
                break
        mode34 = 1
        value36 = None
        pos34 = pos
        if mode34:
            mode30 = 1
            value31 = value32
            pos30 = pos34
        else:
            mode30 = mode34
            value31 = value36
            pos30 = pos34
    yield (mode30, value31, pos30)
    

def _parse_RuleDef1(text, pos):
    backtrack4 = pos
    backtrack5 = pos
    value42 = 'ignore'
    if pos >= len(text):
        mode39 = False
        value41 = 139668461542424
        pos39 = pos
    else:
        token3 = text[pos]
        if token3.value == value42:
            mode39 = 1
            value41 = token3
            pos39 = pos + 1
        else:
            mode39 = False
            value41 = 139668461542424
            pos39 = pos
    if mode39 or mode39 is None:
        mode38 = mode39
        value40 = value41
        pos38 = pos39
    else:
        pos = backtrack5
        value44 = 'ignored'
        if pos >= len(text):
            mode40 = False
            value43 = 139668461542536
            pos40 = pos
        else:
            token4 = text[pos]
            if token4.value == value44:
                mode40 = 1
                value43 = token4
                pos40 = pos + 1
            else:
                mode40 = False
                value43 = 139668461542536
                pos40 = pos
        if mode40 or mode40 is None:
            mode38 = mode40
            value40 = value43
            pos38 = pos40
        else:
            pos = backtrack5
            mode38 = False
            value40 = 139668466930744
            pos38 = pos
            if pos38 < pos39:
                mode38 = mode39
                value40 = value41
                pos38 = pos39
            if pos38 < pos40:
                mode38 = mode40
                value40 = value43
                pos38 = pos40
    if mode38 or mode38 is None:
        mode37 = mode38
        value39 = value40
        pos37 = pos38
    else:
        mode37 = 1
        value39 = None
        pos37 = backtrack4
    if not mode37:
        mode36 = mode37
        value38 = value39
        pos36 = pos37
    else:
        pos = pos37
        mode42, value46, pos42 = yield (3, _parse_Name1, pos)
        if not mode42:
            mode41 = mode42
            value45 = value46
            pos41 = pos42
        else:
            pos = pos42
            backtrack6 = pos
            value49 = '='
            if pos >= len(text):
                mode44 = False
                value48 = 139668461543096
                pos44 = pos
            else:
                token5 = text[pos]
                if token5.value == value49:
                    mode44 = 1
                    value48 = token5
                    pos44 = pos + 1
                else:
                    mode44 = False
                    value48 = 139668461543096
                    pos44 = pos
            if mode44 or mode44 is None:
                mode43 = mode44
                value47 = value48
                pos43 = pos44
            else:
                pos = backtrack6
                value51 = ':'
                if pos >= len(text):
                    mode45 = False
                    value50 = 139668461542872
                    pos45 = pos
                else:
                    token6 = text[pos]
                    if token6.value == value51:
                        mode45 = 1
                        value50 = token6
                        pos45 = pos + 1
                    else:
                        mode45 = False
                        value50 = 139668461542872
                        pos45 = pos
                if mode45 or mode45 is None:
                    mode43 = mode45
                    value47 = value50
                    pos43 = pos45
                else:
                    pos = backtrack6
                    mode43 = False
                    value47 = 139668466930912
                    pos43 = pos
                    if pos43 < pos44:
                        mode43 = mode44
                        value47 = value48
                        pos43 = pos44
                    if pos43 < pos45:
                        mode43 = mode45
                        value47 = value50
                        pos43 = pos45
            if mode43:
                mode41 = 1
                value45 = value46
                pos41 = pos43
            else:
                mode41 = mode43
                value45 = value47
                pos41 = pos43
        if not mode41:
            mode36 = mode41
            value38 = value45
            pos36 = pos41
        else:
            pos = pos41
            mode46, value52, pos46 = yield (3, _parse_Expr1, pos)
            if not mode46:
                mode36 = mode46
                value38 = value52
                pos36 = pos46
            else:
                pos = pos46
                mode36 = 1
                value38 = RuleDef(value39, value45, value52)
                pos36 = pos
    yield (mode36, value38, pos36)
    

def _parse_ClassDef1(text, pos):
    value56 = 'class'
    if pos >= len(text):
        mode49 = False
        value55 = 139668461556568
        pos49 = pos
    else:
        token7 = text[pos]
        if token7.value == value56:
            mode49 = 1
            value55 = token7
            pos49 = pos + 1
        else:
            mode49 = False
            value55 = 139668461556568
            pos49 = pos
    if not mode49:
        mode48 = mode49
        value54 = value55
        pos48 = pos49
    else:
        pos = pos49
        mode48, value54, pos48 = yield (3, _parse_Name1, pos)
    if not mode48:
        mode47 = mode48
        value53 = value54
        pos47 = pos48
    else:
        pos = pos48
        while True:
            mode55, value62, pos55 = yield (3, _parse_Newline1, pos)
            if mode55:
                pos = pos55
            else:
                if mode55 is None:
                    mode54 = mode55
                    value61 = value62
                    pos54 = pos55
                break
        mode54 = 1
        value61 = None
        pos54 = pos
        if not mode54:
            mode53 = mode54
            value60 = value61
            pos53 = pos54
        else:
            pos = pos54
            value63 = '{'
            if pos >= len(text):
                mode53 = False
                value60 = 139668461558304
                pos53 = pos
            else:
                token8 = text[pos]
                if token8.value == value63:
                    mode53 = 1
                    value60 = token8
                    pos53 = pos + 1
                else:
                    mode53 = False
                    value60 = 139668461558304
                    pos53 = pos
        if not mode53:
            mode52 = mode53
            value59 = value60
            pos52 = pos53
        else:
            pos = pos53
            while True:
                mode57, value65, pos57 = yield (3, _parse_Newline1, pos)
                if mode57:
                    pos = pos57
                else:
                    if mode57 is None:
                        mode56 = mode57
                        value64 = value65
                        pos56 = pos57
                    break
            mode56 = 1
            value64 = None
            pos56 = pos
            if mode56:
                mode52 = 1
                value59 = value60
                pos52 = pos56
            else:
                mode52 = mode56
                value59 = value64
                pos52 = pos56
        if not mode52:
            mode51 = mode52
            value58 = value59
            pos51 = pos52
        else:
            pos = pos52
            buf3 = []
            pos51 = pos
            while True:
                mode58, value66, pos58 = yield (3, _parse_RuleDef1, pos)
                if not mode58:
                    if mode58 is None:
                        mode51 = mode58
                        value58 = value66
                        pos51 = pos58
                    break
                buf3.append(value66)
                pos = pos58
                mode59, value67, pos59 = yield (3, _parse_Sep1, pos)
                if not mode59:
                    if mode59 is None:
                        mode51 = mode59
                        value58 = value67
                        pos51 = pos59
                    break
                pos = pos59
            mode51 = 1
            value58 = buf3
            pos51 = pos
        if not mode51:
            mode50 = mode51
            value57 = value58
            pos50 = pos51
        else:
            pos = pos51
            value69 = '}'
            if pos >= len(text):
                mode60 = False
                value68 = 139668461558640
                pos60 = pos
            else:
                token9 = text[pos]
                if token9.value == value69:
                    mode60 = 1
                    value68 = token9
                    pos60 = pos + 1
                else:
                    mode60 = False
                    value68 = 139668461558640
                    pos60 = pos
            if mode60:
                mode50 = 1
                value57 = value58
                pos50 = pos60
            else:
                mode50 = mode60
                value57 = value68
                pos50 = pos60
        if not mode50:
            mode47 = mode50
            value53 = value57
            pos47 = pos50
        else:
            pos = pos50
            mode47 = 1
            value53 = ClassDef(value54, value57)
            pos47 = pos
    yield (mode47, value53, pos47)
    

def _parse_TokenDef1(text, pos):
    backtrack7 = pos
    backtrack8 = pos
    value74 = 'ignore'
    if pos >= len(text):
        mode64 = False
        value73 = 139668461558976
        pos64 = pos
    else:
        token10 = text[pos]
        if token10.value == value74:
            mode64 = 1
            value73 = token10
            pos64 = pos + 1
        else:
            mode64 = False
            value73 = 139668461558976
            pos64 = pos
    if mode64 or mode64 is None:
        mode63 = mode64
        value72 = value73
        pos63 = pos64
    else:
        pos = backtrack8
        value76 = 'ignored'
        if pos >= len(text):
            mode65 = False
            value75 = 139668461559368
            pos65 = pos
        else:
            token11 = text[pos]
            if token11.value == value76:
                mode65 = 1
                value75 = token11
                pos65 = pos + 1
            else:
                mode65 = False
                value75 = 139668461559368
                pos65 = pos
        if mode65 or mode65 is None:
            mode63 = mode65
            value72 = value75
            pos63 = pos65
        else:
            pos = backtrack8
            mode63 = False
            value72 = 139668466931808
            pos63 = pos
            if pos63 < pos64:
                mode63 = mode64
                value72 = value73
                pos63 = pos64
            if pos63 < pos65:
                mode63 = mode65
                value72 = value75
                pos63 = pos65
    if mode63 or mode63 is None:
        mode62 = mode63
        value71 = value72
        pos62 = pos63
    else:
        mode62 = 1
        value71 = None
        pos62 = backtrack7
    if not mode62:
        mode61 = mode62
        value70 = value71
        pos61 = pos62
    else:
        pos = pos62
        value79 = 'token'
        if pos >= len(text):
            mode67 = False
            value78 = 139668461531600
            pos67 = pos
        else:
            token12 = text[pos]
            if token12.value == value79:
                mode67 = 1
                value78 = token12
                pos67 = pos + 1
            else:
                mode67 = False
                value78 = 139668461531600
                pos67 = pos
        if not mode67:
            mode66 = mode67
            value77 = value78
            pos66 = pos67
        else:
            pos = pos67
            backtrack9 = pos
            mode68, value80, pos68 = yield (3, _parse_ClassDef1, pos)
            if mode68 or mode68 is None:
                mode66 = mode68
                value77 = value80
                pos66 = pos68
            else:
                pos = backtrack9
                mode69, value81, pos69 = yield (3, _parse_RuleDef1, pos)
                if mode69 or mode69 is None:
                    mode66 = mode69
                    value77 = value81
                    pos66 = pos69
                else:
                    pos = backtrack9
                    mode66 = False
                    value77 = 139668466931976
                    pos66 = pos
                    if pos66 < pos68:
                        mode66 = mode68
                        value77 = value80
                        pos66 = pos68
                    if pos66 < pos69:
                        mode66 = mode69
                        value77 = value81
                        pos66 = pos69
        if not mode66:
            mode61 = mode66
            value70 = value77
            pos61 = pos66
        else:
            pos = pos66
            mode61 = 1
            value70 = TokenDef(value71, value77)
            pos61 = pos
    yield (mode61, value70, pos61)
    

def _parse_TemplateDef1(text, pos):
    value85 = 'template'
    if pos >= len(text):
        mode72 = False
        value84 = 139668461532496
        pos72 = pos
    else:
        token13 = text[pos]
        if token13.value == value85:
            mode72 = 1
            value84 = token13
            pos72 = pos + 1
        else:
            mode72 = False
            value84 = 139668461532496
            pos72 = pos
    if not mode72:
        mode71 = mode72
        value83 = value84
        pos71 = pos72
    else:
        pos = pos72
        mode71, value83, pos71 = yield (3, _parse_Name1, pos)
    if not mode71:
        mode70 = mode71
        value82 = value83
        pos70 = pos71
    else:
        pos = pos71
        while True:
            mode78, value91, pos78 = yield (3, _parse_Newline1, pos)
            if mode78:
                pos = pos78
            else:
                if mode78 is None:
                    mode77 = mode78
                    value90 = value91
                    pos77 = pos78
                break
        mode77 = 1
        value90 = None
        pos77 = pos
        if not mode77:
            mode76 = mode77
            value89 = value90
            pos76 = pos77
        else:
            pos = pos77
            value92 = '('
            if pos >= len(text):
                mode76 = False
                value89 = 139668461534736
                pos76 = pos
            else:
                token14 = text[pos]
                if token14.value == value92:
                    mode76 = 1
                    value89 = token14
                    pos76 = pos + 1
                else:
                    mode76 = False
                    value89 = 139668461534736
                    pos76 = pos
        if not mode76:
            mode75 = mode76
            value88 = value89
            pos75 = pos76
        else:
            pos = pos76
            while True:
                mode80, value94, pos80 = yield (3, _parse_Newline1, pos)
                if mode80:
                    pos = pos80
                else:
                    if mode80 is None:
                        mode79 = mode80
                        value93 = value94
                        pos79 = pos80
                    break
            mode79 = 1
            value93 = None
            pos79 = pos
            if mode79:
                mode75 = 1
                value88 = value89
                pos75 = pos79
            else:
                mode75 = mode79
                value88 = value93
                pos75 = pos79
        if not mode75:
            mode74 = mode75
            value87 = value88
            pos74 = pos75
        else:
            pos = pos75
            buf4 = []
            pos74 = pos
            while True:
                while True:
                    mode84, value98, pos84 = yield (3, _parse_Newline1, pos)
                    if mode84:
                        pos = pos84
                    else:
                        if mode84 is None:
                            mode83 = mode84
                            value97 = value98
                            pos83 = pos84
                        break
                mode83 = 1
                value97 = None
                pos83 = pos
                if not mode83:
                    mode82 = mode83
                    value96 = value97
                    pos82 = pos83
                else:
                    pos = pos83
                    mode82, value96, pos82 = yield (3, _parse_Name1, pos)
                if not mode82:
                    mode81 = mode82
                    value95 = value96
                    pos81 = pos82
                else:
                    pos = pos82
                    while True:
                        mode86, value100, pos86 = yield (3, _parse_Newline1, pos)
                        if mode86:
                            pos = pos86
                        else:
                            if mode86 is None:
                                mode85 = mode86
                                value99 = value100
                                pos85 = pos86
                            break
                    mode85 = 1
                    value99 = None
                    pos85 = pos
                    if mode85:
                        mode81 = 1
                        value95 = value96
                        pos81 = pos85
                    else:
                        mode81 = mode85
                        value95 = value99
                        pos81 = pos85
                if not mode81:
                    if mode81 is None:
                        mode74 = mode81
                        value87 = value95
                        pos74 = pos81
                    break
                buf4.append(value95)
                pos = pos81
                mode87, value101, pos87 = yield (3, _parse_Comma1, pos)
                if not mode87:
                    if mode87 is None:
                        mode74 = mode87
                        value87 = value101
                        pos74 = pos87
                    break
                pos = pos87
            mode74 = 1
            value87 = buf4
            pos74 = pos
        if not mode74:
            mode73 = mode74
            value86 = value87
            pos73 = pos74
        else:
            pos = pos74
            value103 = ')'
            if pos >= len(text):
                mode88 = False
                value102 = 139668461534848
                pos88 = pos
            else:
                token15 = text[pos]
                if token15.value == value103:
                    mode88 = 1
                    value102 = token15
                    pos88 = pos + 1
                else:
                    mode88 = False
                    value102 = 139668461534848
                    pos88 = pos
            if mode88:
                mode73 = 1
                value86 = value87
                pos73 = pos88
            else:
                mode73 = mode88
                value86 = value102
                pos73 = pos88
        if not mode73:
            mode70 = mode73
            value82 = value86
            pos70 = pos73
        else:
            pos = pos73
            while True:
                mode93, value108, pos93 = yield (3, _parse_Newline1, pos)
                if mode93:
                    pos = pos93
                else:
                    if mode93 is None:
                        mode92 = mode93
                        value107 = value108
                        pos92 = pos93
                    break
            mode92 = 1
            value107 = None
            pos92 = pos
            if not mode92:
                mode91 = mode92
                value106 = value107
                pos91 = pos92
            else:
                pos = pos92
                backtrack10 = pos
                value110 = '='
                if pos >= len(text):
                    mode94 = False
                    value109 = 139668461683936
                    pos94 = pos
                else:
                    token16 = text[pos]
                    if token16.value == value110:
                        mode94 = 1
                        value109 = token16
                        pos94 = pos + 1
                    else:
                        mode94 = False
                        value109 = 139668461683936
                        pos94 = pos
                if mode94 or mode94 is None:
                    mode91 = mode94
                    value106 = value109
                    pos91 = pos94
                else:
                    pos = backtrack10
                    value112 = ':'
                    if pos >= len(text):
                        mode95 = False
                        value111 = 139668461684048
                        pos95 = pos
                    else:
                        token17 = text[pos]
                        if token17.value == value112:
                            mode95 = 1
                            value111 = token17
                            pos95 = pos + 1
                        else:
                            mode95 = False
                            value111 = 139668461684048
                            pos95 = pos
                    if mode95 or mode95 is None:
                        mode91 = mode95
                        value106 = value111
                        pos91 = pos95
                    else:
                        pos = backtrack10
                        value114 = '=>'
                        if pos >= len(text):
                            mode96 = False
                            value113 = 139668461684216
                            pos96 = pos
                        else:
                            token18 = text[pos]
                            if token18.value == value114:
                                mode96 = 1
                                value113 = token18
                                pos96 = pos + 1
                            else:
                                mode96 = False
                                value113 = 139668461684216
                                pos96 = pos
                        if mode96 or mode96 is None:
                            mode91 = mode96
                            value106 = value113
                            pos91 = pos96
                        else:
                            pos = backtrack10
                            mode91 = False
                            value106 = 139668466933040
                            pos91 = pos
                            if pos91 < pos94:
                                mode91 = mode94
                                value106 = value109
                                pos91 = pos94
                            if pos91 < pos95:
                                mode91 = mode95
                                value106 = value111
                                pos91 = pos95
                            if pos91 < pos96:
                                mode91 = mode96
                                value106 = value113
                                pos91 = pos96
            if not mode91:
                mode90 = mode91
                value105 = value106
                pos90 = pos91
            else:
                pos = pos91
                while True:
                    mode98, value116, pos98 = yield (3, _parse_Newline1, pos)
                    if mode98:
                        pos = pos98
                    else:
                        if mode98 is None:
                            mode97 = mode98
                            value115 = value116
                            pos97 = pos98
                        break
                mode97 = 1
                value115 = None
                pos97 = pos
                if mode97:
                    mode90 = 1
                    value105 = value106
                    pos90 = pos97
                else:
                    mode90 = mode97
                    value105 = value115
                    pos90 = pos97
            if not mode90:
                mode89 = mode90
                value104 = value105
                pos89 = pos90
            else:
                pos = pos90
                mode89, value104, pos89 = yield (3, _parse_Expr1, pos)
            if not mode89:
                mode70 = mode89
                value82 = value104
                pos70 = pos89
            else:
                pos = pos89
                mode70 = 1
                value82 = TemplateDef(value83, value86, value104)
                pos70 = pos
    yield (mode70, value82, pos70)
    

def _parse_Stmt1(text, pos):
    backtrack11 = pos
    mode100, value118, pos100 = yield (3, _parse_TokenDef1, pos)
    if mode100 or mode100 is None:
        mode99 = mode100
        value117 = value118
        pos99 = pos100
    else:
        pos = backtrack11
        mode101, value119, pos101 = yield (3, _parse_ClassDef1, pos)
        if mode101 or mode101 is None:
            mode99 = mode101
            value117 = value119
            pos99 = pos101
        else:
            pos = backtrack11
            mode102, value120, pos102 = yield (3, _parse_TemplateDef1, pos)
            if mode102 or mode102 is None:
                mode99 = mode102
                value117 = value120
                pos99 = pos102
            else:
                pos = backtrack11
                mode103, value121, pos103 = yield (3, _parse_RuleDef1, pos)
                if mode103 or mode103 is None:
                    mode99 = mode103
                    value117 = value121
                    pos99 = pos103
                else:
                    pos = backtrack11
                    mode104, value122, pos104 = yield (3, _parse_PythonSection1, pos)
                    if mode104 or mode104 is None:
                        mode99 = mode104
                        value117 = value122
                        pos99 = pos104
                    else:
                        pos = backtrack11
                        mode105, value123, pos105 = yield (3, _parse_PythonExpression1, pos)
                        if mode105 or mode105 is None:
                            mode99 = mode105
                            value117 = value123
                            pos99 = pos105
                        else:
                            pos = backtrack11
                            mode99 = False
                            value117 = 139668466933376
                            pos99 = pos
                            if pos99 < pos100:
                                mode99 = mode100
                                value117 = value118
                                pos99 = pos100
                            if pos99 < pos101:
                                mode99 = mode101
                                value117 = value119
                                pos99 = pos101
                            if pos99 < pos102:
                                mode99 = mode102
                                value117 = value120
                                pos99 = pos102
                            if pos99 < pos103:
                                mode99 = mode103
                                value117 = value121
                                pos99 = pos103
                            if pos99 < pos104:
                                mode99 = mode104
                                value117 = value122
                                pos99 = pos104
                            if pos99 < pos105:
                                mode99 = mode105
                                value117 = value123
                                pos99 = pos105
    yield (mode99, value117, pos99)
    

def _parse_Ref1(text, pos):
    mode107, value125, pos107 = yield (3, _parse_Word1, pos)
    if not mode107:
        mode106 = mode107
        value124 = value125
        pos106 = pos107
    else:
        pos = pos107
        mode106 = 1
        value124 = Ref(value125)
        pos106 = pos
    yield (mode106, value124, pos106)
    

def _parse_ListLiteral1(text, pos):
    value130 = '['
    if pos >= len(text):
        mode111 = False
        value129 = 139668461686680
        pos111 = pos
    else:
        token19 = text[pos]
        if token19.value == value130:
            mode111 = 1
            value129 = token19
            pos111 = pos + 1
        else:
            mode111 = False
            value129 = 139668461686680
            pos111 = pos
    if not mode111:
        mode110 = mode111
        value128 = value129
        pos110 = pos111
    else:
        pos = pos111
        buf5 = []
        pos110 = pos
        while True:
            while True:
                mode115, value134, pos115 = yield (3, _parse_Newline1, pos)
                if mode115:
                    pos = pos115
                else:
                    if mode115 is None:
                        mode114 = mode115
                        value133 = value134
                        pos114 = pos115
                    break
            mode114 = 1
            value133 = None
            pos114 = pos
            if not mode114:
                mode113 = mode114
                value132 = value133
                pos113 = pos114
            else:
                pos = pos114
                mode113, value132, pos113 = yield (3, _parse_Expr1, pos)
            if not mode113:
                mode112 = mode113
                value131 = value132
                pos112 = pos113
            else:
                pos = pos113
                while True:
                    mode117, value136, pos117 = yield (3, _parse_Newline1, pos)
                    if mode117:
                        pos = pos117
                    else:
                        if mode117 is None:
                            mode116 = mode117
                            value135 = value136
                            pos116 = pos117
                        break
                mode116 = 1
                value135 = None
                pos116 = pos
                if mode116:
                    mode112 = 1
                    value131 = value132
                    pos112 = pos116
                else:
                    mode112 = mode116
                    value131 = value135
                    pos112 = pos116
            if not mode112:
                if mode112 is None:
                    mode110 = mode112
                    value128 = value131
                    pos110 = pos112
                break
            buf5.append(value131)
            pos = pos112
            mode118, value137, pos118 = yield (3, _parse_Comma1, pos)
            if not mode118:
                if mode118 is None:
                    mode110 = mode118
                    value128 = value137
                    pos110 = pos118
                break
            pos = pos118
        mode110 = 1
        value128 = buf5
        pos110 = pos
    if not mode110:
        mode109 = mode110
        value127 = value128
        pos109 = pos110
    else:
        pos = pos110
        value139 = ']'
        if pos >= len(text):
            mode119 = False
            value138 = 139668461686232
            pos119 = pos
        else:
            token20 = text[pos]
            if token20.value == value139:
                mode119 = 1
                value138 = token20
                pos119 = pos + 1
            else:
                mode119 = False
                value138 = 139668461686232
                pos119 = pos
        if mode119:
            mode109 = 1
            value127 = value128
            pos109 = pos119
        else:
            mode109 = mode119
            value127 = value138
            pos109 = pos119
    if not mode109:
        mode108 = mode109
        value126 = value127
        pos108 = pos109
    else:
        pos = pos109
        mode108 = 1
        value126 = ListLiteral(value127)
        pos108 = pos
    yield (mode108, value126, pos108)
    

def _parse_Atom1(text, pos):
    backtrack12 = pos
    value144 = '('
    if pos >= len(text):
        mode123 = False
        value143 = 139668461582600
        pos123 = pos
    else:
        token21 = text[pos]
        if token21.value == value144:
            mode123 = 1
            value143 = token21
            pos123 = pos + 1
        else:
            mode123 = False
            value143 = 139668461582600
            pos123 = pos
    if not mode123:
        mode122 = mode123
        value142 = value143
        pos122 = pos123
    else:
        pos = pos123
        while True:
            mode126, value147, pos126 = yield (3, _parse_Newline1, pos)
            if mode126:
                pos = pos126
            else:
                if mode126 is None:
                    mode125 = mode126
                    value146 = value147
                    pos125 = pos126
                break
        mode125 = 1
        value146 = None
        pos125 = pos
        if not mode125:
            mode124 = mode125
            value145 = value146
            pos124 = pos125
        else:
            pos = pos125
            mode124, value145, pos124 = yield (3, _parse_Expr1, pos)
        if not mode124:
            mode122 = mode124
            value142 = value145
            pos122 = pos124
        else:
            pos = pos124
            while True:
                mode128, value149, pos128 = yield (3, _parse_Newline1, pos)
                if mode128:
                    pos = pos128
                else:
                    if mode128 is None:
                        mode127 = mode128
                        value148 = value149
                        pos127 = pos128
                    break
            mode127 = 1
            value148 = None
            pos127 = pos
            if mode127:
                mode122 = 1
                value142 = value145
                pos122 = pos127
            else:
                mode122 = mode127
                value142 = value148
                pos122 = pos127
    if not mode122:
        mode121 = mode122
        value141 = value142
        pos121 = pos122
    else:
        pos = pos122
        value151 = ')'
        if pos >= len(text):
            mode129 = False
            value150 = 139668461582656
            pos129 = pos
        else:
            token22 = text[pos]
            if token22.value == value151:
                mode129 = 1
                value150 = token22
                pos129 = pos + 1
            else:
                mode129 = False
                value150 = 139668461582656
                pos129 = pos
        if mode129:
            mode121 = 1
            value141 = value142
            pos121 = pos129
        else:
            mode121 = mode129
            value141 = value150
            pos121 = pos129
    if mode121 or mode121 is None:
        mode120 = mode121
        value140 = value141
        pos120 = pos121
    else:
        pos = backtrack12
        mode130, value152, pos130 = yield (3, _parse_Ref1, pos)
        if mode130 or mode130 is None:
            mode120 = mode130
            value140 = value152
            pos120 = pos130
        else:
            pos = backtrack12
            mode131, value153, pos131 = yield (3, _parse_StringLiteral1, pos)
            if mode131 or mode131 is None:
                mode120 = mode131
                value140 = value153
                pos120 = pos131
            else:
                pos = backtrack12
                mode132, value154, pos132 = yield (3, _parse_RegexLiteral1, pos)
                if mode132 or mode132 is None:
                    mode120 = mode132
                    value140 = value154
                    pos120 = pos132
                else:
                    pos = backtrack12
                    mode133, value155, pos133 = yield (3, _parse_ListLiteral1, pos)
                    if mode133 or mode133 is None:
                        mode120 = mode133
                        value140 = value155
                        pos120 = pos133
                    else:
                        pos = backtrack12
                        mode134, value156, pos134 = yield (3, _parse_PythonExpression1, pos)
                        if mode134 or mode134 is None:
                            mode120 = mode134
                            value140 = value156
                            pos120 = pos134
                        else:
                            pos = backtrack12
                            mode120 = False
                            value140 = 139668466979224
                            pos120 = pos
                            if pos120 < pos121:
                                mode120 = mode121
                                value140 = value141
                                pos120 = pos121
                            if pos120 < pos130:
                                mode120 = mode130
                                value140 = value152
                                pos120 = pos130
                            if pos120 < pos131:
                                mode120 = mode131
                                value140 = value153
                                pos120 = pos131
                            if pos120 < pos132:
                                mode120 = mode132
                                value140 = value154
                                pos120 = pos132
                            if pos120 < pos133:
                                mode120 = mode133
                                value140 = value155
                                pos120 = pos133
                            if pos120 < pos134:
                                mode120 = mode134
                                value140 = value156
                                pos120 = pos134
    yield (mode120, value140, pos120)
    

def _parse_KeywordArg1(text, pos):
    mode137, value159, pos137 = yield (3, _parse_Name1, pos)
    if not mode137:
        mode136 = mode137
        value158 = value159
        pos136 = pos137
    else:
        pos = pos137
        backtrack13 = pos
        value162 = '='
        if pos >= len(text):
            mode139 = False
            value161 = 139668461583776
            pos139 = pos
        else:
            token23 = text[pos]
            if token23.value == value162:
                mode139 = 1
                value161 = token23
                pos139 = pos + 1
            else:
                mode139 = False
                value161 = 139668461583776
                pos139 = pos
        if mode139 or mode139 is None:
            mode138 = mode139
            value160 = value161
            pos138 = pos139
        else:
            pos = backtrack13
            value164 = ':'
            if pos >= len(text):
                mode140 = False
                value163 = 139668461583944
                pos140 = pos
            else:
                token24 = text[pos]
                if token24.value == value164:
                    mode140 = 1
                    value163 = token24
                    pos140 = pos + 1
                else:
                    mode140 = False
                    value163 = 139668461583944
                    pos140 = pos
            if mode140 or mode140 is None:
                mode138 = mode140
                value160 = value163
                pos138 = pos140
            else:
                pos = backtrack13
                mode138 = False
                value160 = 139668466979728
                pos138 = pos
                if pos138 < pos139:
                    mode138 = mode139
                    value160 = value161
                    pos138 = pos139
                if pos138 < pos140:
                    mode138 = mode140
                    value160 = value163
                    pos138 = pos140
        if mode138:
            mode136 = 1
            value158 = value159
            pos136 = pos138
        else:
            mode136 = mode138
            value158 = value160
            pos136 = pos138
    if not mode136:
        mode135 = mode136
        value157 = value158
        pos135 = pos136
    else:
        pos = pos136
        mode141, value165, pos141 = yield (3, _parse_Expr1, pos)
        if not mode141:
            mode135 = mode141
            value157 = value165
            pos135 = pos141
        else:
            pos = pos141
            mode135 = 1
            value157 = KeywordArg(value158, value165)
            pos135 = pos
    yield (mode135, value157, pos135)
    

def _parse_ArgList1(text, pos):
    value170 = '('
    if pos >= len(text):
        mode145 = False
        value169 = 139668461659080
        pos145 = pos
    else:
        token25 = text[pos]
        if token25.value == value170:
            mode145 = 1
            value169 = token25
            pos145 = pos + 1
        else:
            mode145 = False
            value169 = 139668461659080
            pos145 = pos
    if not mode145:
        mode144 = mode145
        value168 = value169
        pos144 = pos145
    else:
        pos = pos145
        buf6 = []
        pos144 = pos
        while True:
            while True:
                mode149, value174, pos149 = yield (3, _parse_Newline1, pos)
                if mode149:
                    pos = pos149
                else:
                    if mode149 is None:
                        mode148 = mode149
                        value173 = value174
                        pos148 = pos149
                    break
            mode148 = 1
            value173 = None
            pos148 = pos
            if not mode148:
                mode147 = mode148
                value172 = value173
                pos147 = pos148
            else:
                pos = pos148
                backtrack14 = pos
                mode150, value175, pos150 = yield (3, _parse_KeywordArg1, pos)
                if mode150 or mode150 is None:
                    mode147 = mode150
                    value172 = value175
                    pos147 = pos150
                else:
                    pos = backtrack14
                    mode151, value176, pos151 = yield (3, _parse_Expr1, pos)
                    if mode151 or mode151 is None:
                        mode147 = mode151
                        value172 = value176
                        pos147 = pos151
                    else:
                        pos = backtrack14
                        mode147 = False
                        value172 = 139668466980064
                        pos147 = pos
                        if pos147 < pos150:
                            mode147 = mode150
                            value172 = value175
                            pos147 = pos150
                        if pos147 < pos151:
                            mode147 = mode151
                            value172 = value176
                            pos147 = pos151
            if not mode147:
                mode146 = mode147
                value171 = value172
                pos146 = pos147
            else:
                pos = pos147
                while True:
                    mode153, value178, pos153 = yield (3, _parse_Newline1, pos)
                    if mode153:
                        pos = pos153
                    else:
                        if mode153 is None:
                            mode152 = mode153
                            value177 = value178
                            pos152 = pos153
                        break
                mode152 = 1
                value177 = None
                pos152 = pos
                if mode152:
                    mode146 = 1
                    value171 = value172
                    pos146 = pos152
                else:
                    mode146 = mode152
                    value171 = value177
                    pos146 = pos152
            if not mode146:
                if mode146 is None:
                    mode144 = mode146
                    value168 = value171
                    pos144 = pos146
                break
            buf6.append(value171)
            pos = pos146
            mode154, value179, pos154 = yield (3, _parse_Comma1, pos)
            if not mode154:
                if mode154 is None:
                    mode144 = mode154
                    value168 = value179
                    pos144 = pos154
                break
            pos = pos154
        mode144 = 1
        value168 = buf6
        pos144 = pos
    if not mode144:
        mode143 = mode144
        value167 = value168
        pos143 = pos144
    else:
        pos = pos144
        value181 = ')'
        if pos >= len(text):
            mode155 = False
            value180 = 139668461660200
            pos155 = pos
        else:
            token26 = text[pos]
            if token26.value == value181:
                mode155 = 1
                value180 = token26
                pos155 = pos + 1
            else:
                mode155 = False
                value180 = 139668461660200
                pos155 = pos
        if mode155:
            mode143 = 1
            value167 = value168
            pos143 = pos155
        else:
            mode143 = mode155
            value167 = value180
            pos143 = pos155
    if not mode143:
        mode142 = mode143
        value166 = value167
        pos142 = pos143
    else:
        pos = pos143
        mode142 = 1
        value166 = ArgList(value167)
        pos142 = pos
    yield (mode142, value166, pos142)
    

def _parse_Expr1(text, pos):
    is_first1 = True
    while True:
        if not is_first1:
            while True:
                mode160, value186, pos160 = yield (3, _parse_Newline1, pos)
                if mode160:
                    pos = pos160
                else:
                    if mode160 is None:
                        mode159 = mode160
                        value185 = value186
                        pos159 = pos160
                    break
            mode159 = 1
            value185 = None
            pos159 = pos
            if not mode159:
                mode158 = mode159
                value184 = value185
                pos158 = pos159
            else:
                pos = pos159
                value187 = '|'
                if pos >= len(text):
                    mode158 = False
                    value184 = 139668461681856
                    pos158 = pos
                else:
                    token27 = text[pos]
                    if token27.value == value187:
                        mode158 = 1
                        value184 = token27
                        pos158 = pos + 1
                    else:
                        mode158 = False
                        value184 = 139668461681856
                        pos158 = pos
            if not mode158:
                mode157 = mode158
                value183 = value184
                pos157 = pos158
            else:
                pos = pos158
                while True:
                    mode162, value189, pos162 = yield (3, _parse_Newline1, pos)
                    if mode162:
                        pos = pos162
                    else:
                        if mode162 is None:
                            mode161 = mode162
                            value188 = value189
                            pos161 = pos162
                        break
                mode161 = 1
                value188 = None
                pos161 = pos
                if mode161:
                    mode157 = 1
                    value183 = value184
                    pos157 = pos161
                else:
                    mode157 = mode161
                    value183 = value188
                    pos157 = pos161
            if not mode157:
                if mode157 is None:
                    mode156 = mode157
                    value182 = value183
                    pos156 = pos157
                break
            pos = pos157
        is_first2 = True
        while True:
            if not is_first2:
                while True:
                    mode167, value194, pos167 = yield (3, _parse_Newline1, pos)
                    if mode167:
                        pos = pos167
                    else:
                        if mode167 is None:
                            mode166 = mode167
                            value193 = value194
                            pos166 = pos167
                        break
                mode166 = 1
                value193 = None
                pos166 = pos
                if not mode166:
                    mode165 = mode166
                    value192 = value193
                    pos165 = pos166
                else:
                    pos = pos166
                    backtrack15 = pos
                    value196 = '<<'
                    if pos >= len(text):
                        mode168 = False
                        value195 = 139668461679112
                        pos168 = pos
                    else:
                        token28 = text[pos]
                        if token28.value == value196:
                            mode168 = 1
                            value195 = token28
                            pos168 = pos + 1
                        else:
                            mode168 = False
                            value195 = 139668461679112
                            pos168 = pos
                    if mode168 or mode168 is None:
                        mode165 = mode168
                        value192 = value195
                        pos165 = pos168
                    else:
                        pos = backtrack15
                        value198 = '>>'
                        if pos >= len(text):
                            mode169 = False
                            value197 = 139668461679448
                            pos169 = pos
                        else:
                            token29 = text[pos]
                            if token29.value == value198:
                                mode169 = 1
                                value197 = token29
                                pos169 = pos + 1
                            else:
                                mode169 = False
                                value197 = 139668461679448
                                pos169 = pos
                        if mode169 or mode169 is None:
                            mode165 = mode169
                            value192 = value197
                            pos165 = pos169
                        else:
                            pos = backtrack15
                            value200 = '<<!'
                            if pos >= len(text):
                                mode170 = False
                                value199 = 139668461679896
                                pos170 = pos
                            else:
                                token30 = text[pos]
                                if token30.value == value200:
                                    mode170 = 1
                                    value199 = token30
                                    pos170 = pos + 1
                                else:
                                    mode170 = False
                                    value199 = 139668461679896
                                    pos170 = pos
                            if mode170 or mode170 is None:
                                mode165 = mode170
                                value192 = value199
                                pos165 = pos170
                            else:
                                pos = backtrack15
                                value202 = '!>>'
                                if pos >= len(text):
                                    mode171 = False
                                    value201 = 139668461679840
                                    pos171 = pos
                                else:
                                    token31 = text[pos]
                                    if token31.value == value202:
                                        mode171 = 1
                                        value201 = token31
                                        pos171 = pos + 1
                                    else:
                                        mode171 = False
                                        value201 = 139668461679840
                                        pos171 = pos
                                if mode171 or mode171 is None:
                                    mode165 = mode171
                                    value192 = value201
                                    pos165 = pos171
                                else:
                                    pos = backtrack15
                                    value204 = '<|'
                                    if pos >= len(text):
                                        mode172 = False
                                        value203 = 139668461680064
                                        pos172 = pos
                                    else:
                                        token32 = text[pos]
                                        if token32.value == value204:
                                            mode172 = 1
                                            value203 = token32
                                            pos172 = pos + 1
                                        else:
                                            mode172 = False
                                            value203 = 139668461680064
                                            pos172 = pos
                                    if mode172 or mode172 is None:
                                        mode165 = mode172
                                        value192 = value203
                                        pos165 = pos172
                                    else:
                                        pos = backtrack15
                                        value206 = '|>'
                                        if pos >= len(text):
                                            mode173 = False
                                            value205 = 139668461681240
                                            pos173 = pos
                                        else:
                                            token33 = text[pos]
                                            if token33.value == value206:
                                                mode173 = 1
                                                value205 = token33
                                                pos173 = pos + 1
                                            else:
                                                mode173 = False
                                                value205 = 139668461681240
                                                pos173 = pos
                                        if mode173 or mode173 is None:
                                            mode165 = mode173
                                            value192 = value205
                                            pos165 = pos173
                                        else:
                                            pos = backtrack15
                                            mode165 = False
                                            value192 = 139668466981128
                                            pos165 = pos
                                            if pos165 < pos168:
                                                mode165 = mode168
                                                value192 = value195
                                                pos165 = pos168
                                            if pos165 < pos169:
                                                mode165 = mode169
                                                value192 = value197
                                                pos165 = pos169
                                            if pos165 < pos170:
                                                mode165 = mode170
                                                value192 = value199
                                                pos165 = pos170
                                            if pos165 < pos171:
                                                mode165 = mode171
                                                value192 = value201
                                                pos165 = pos171
                                            if pos165 < pos172:
                                                mode165 = mode172
                                                value192 = value203
                                                pos165 = pos172
                                            if pos165 < pos173:
                                                mode165 = mode173
                                                value192 = value205
                                                pos165 = pos173
                if not mode165:
                    mode164 = mode165
                    value191 = value192
                    pos164 = pos165
                else:
                    pos = pos165
                    while True:
                        mode175, value208, pos175 = yield (3, _parse_Newline1, pos)
                        if mode175:
                            pos = pos175
                        else:
                            if mode175 is None:
                                mode174 = mode175
                                value207 = value208
                                pos174 = pos175
                            break
                    mode174 = 1
                    value207 = None
                    pos174 = pos
                    if mode174:
                        mode164 = 1
                        value191 = value192
                        pos164 = pos174
                    else:
                        mode164 = mode174
                        value191 = value207
                        pos164 = pos174
                if not mode164:
                    if mode164 is None:
                        mode163 = mode164
                        value190 = value191
                        pos163 = pos164
                    break
                pos = pos164
            is_first3 = True
            while True:
                if not is_first3:
                    while True:
                        mode180, value213, pos180 = yield (3, _parse_Newline1, pos)
                        if mode180:
                            pos = pos180
                        else:
                            if mode180 is None:
                                mode179 = mode180
                                value212 = value213
                                pos179 = pos180
                            break
                    mode179 = 1
                    value212 = None
                    pos179 = pos
                    if not mode179:
                        mode178 = mode179
                        value211 = value212
                        pos178 = pos179
                    else:
                        pos = pos179
                        backtrack16 = pos
                        value215 = '/'
                        if pos >= len(text):
                            mode181 = False
                            value214 = 139668461652568
                            pos181 = pos
                        else:
                            token34 = text[pos]
                            if token34.value == value215:
                                mode181 = 1
                                value214 = token34
                                pos181 = pos + 1
                            else:
                                mode181 = False
                                value214 = 139668461652568
                                pos181 = pos
                        if mode181 or mode181 is None:
                            mode178 = mode181
                            value211 = value214
                            pos178 = pos181
                        else:
                            pos = backtrack16
                            value217 = '//'
                            if pos >= len(text):
                                mode182 = False
                                value216 = 139668461652736
                                pos182 = pos
                            else:
                                token35 = text[pos]
                                if token35.value == value217:
                                    mode182 = 1
                                    value216 = token35
                                    pos182 = pos + 1
                                else:
                                    mode182 = False
                                    value216 = 139668461652736
                                    pos182 = pos
                            if mode182 or mode182 is None:
                                mode178 = mode182
                                value211 = value216
                                pos178 = pos182
                            else:
                                pos = backtrack16
                                mode178 = False
                                value211 = 139668466980792
                                pos178 = pos
                                if pos178 < pos181:
                                    mode178 = mode181
                                    value211 = value214
                                    pos178 = pos181
                                if pos178 < pos182:
                                    mode178 = mode182
                                    value211 = value216
                                    pos178 = pos182
                    if not mode178:
                        mode177 = mode178
                        value210 = value211
                        pos177 = pos178
                    else:
                        pos = pos178
                        while True:
                            mode184, value219, pos184 = yield (3, _parse_Newline1, pos)
                            if mode184:
                                pos = pos184
                            else:
                                if mode184 is None:
                                    mode183 = mode184
                                    value218 = value219
                                    pos183 = pos184
                                break
                        mode183 = 1
                        value218 = None
                        pos183 = pos
                        if mode183:
                            mode177 = 1
                            value210 = value211
                            pos177 = pos183
                        else:
                            mode177 = mode183
                            value210 = value218
                            pos177 = pos183
                    if not mode177:
                        if mode177 is None:
                            mode176 = mode177
                            value209 = value210
                            pos176 = pos177
                        break
                    pos = pos177
                mode187, value222, pos187 = yield (3, _parse_Atom1, pos)
                mode186 = mode187
                value221 = value222
                pos186 = pos187
                if mode187:
                    pos = pos187
                    while True:
                        mode188, value223, pos188 = yield (3, _parse_ArgList1, pos)
                        if not mode188:
                            if mode188 is None:
                                mode186 = mode188
                                value221 = value223
                                pos186 = pos188
                            else:
                                pos186 = pos
                            break
                        pos = pos188
                        value221 = Postfix(value221, value223)
                mode185 = mode186
                value220 = value221
                pos185 = pos186
                if mode186:
                    pos = pos186
                    while True:
                        backtrack17 = pos
                        value226 = '?'
                        if pos >= len(text):
                            mode190 = False
                            value225 = 139668461650608
                            pos190 = pos
                        else:
                            token36 = text[pos]
                            if token36.value == value226:
                                mode190 = 1
                                value225 = token36
                                pos190 = pos + 1
                            else:
                                mode190 = False
                                value225 = 139668461650608
                                pos190 = pos
                        if mode190 or mode190 is None:
                            mode189 = mode190
                            value224 = value225
                            pos189 = pos190
                        else:
                            pos = backtrack17
                            value228 = '*'
                            if pos >= len(text):
                                mode191 = False
                                value227 = 139668461650720
                                pos191 = pos
                            else:
                                token37 = text[pos]
                                if token37.value == value228:
                                    mode191 = 1
                                    value227 = token37
                                    pos191 = pos + 1
                                else:
                                    mode191 = False
                                    value227 = 139668461650720
                                    pos191 = pos
                            if mode191 or mode191 is None:
                                mode189 = mode191
                                value224 = value227
                                pos189 = pos191
                            else:
                                pos = backtrack17
                                value230 = '+'
                                if pos >= len(text):
                                    mode192 = False
                                    value229 = 139668461650496
                                    pos192 = pos
                                else:
                                    token38 = text[pos]
                                    if token38.value == value230:
                                        mode192 = 1
                                        value229 = token38
                                        pos192 = pos + 1
                                    else:
                                        mode192 = False
                                        value229 = 139668461650496
                                        pos192 = pos
                                if mode192 or mode192 is None:
                                    mode189 = mode192
                                    value224 = value229
                                    pos189 = pos192
                                else:
                                    pos = backtrack17
                                    value232 = '!'
                                    if pos >= len(text):
                                        mode193 = False
                                        value231 = 139668461650888
                                        pos193 = pos
                                    else:
                                        token39 = text[pos]
                                        if token39.value == value232:
                                            mode193 = 1
                                            value231 = token39
                                            pos193 = pos + 1
                                        else:
                                            mode193 = False
                                            value231 = 139668461650888
                                            pos193 = pos
                                    if mode193 or mode193 is None:
                                        mode189 = mode193
                                        value224 = value231
                                        pos189 = pos193
                                    else:
                                        pos = backtrack17
                                        mode189 = False
                                        value224 = 139668466980624
                                        pos189 = pos
                                        if pos189 < pos190:
                                            mode189 = mode190
                                            value224 = value225
                                            pos189 = pos190
                                        if pos189 < pos191:
                                            mode189 = mode191
                                            value224 = value227
                                            pos189 = pos191
                                        if pos189 < pos192:
                                            mode189 = mode192
                                            value224 = value229
                                            pos189 = pos192
                                        if pos189 < pos193:
                                            mode189 = mode193
                                            value224 = value231
                                            pos189 = pos193
                        if not mode189:
                            if mode189 is None:
                                mode185 = mode189
                                value220 = value224
                                pos185 = pos189
                            else:
                                pos185 = pos
                            break
                        pos = pos189
                        value220 = Postfix(value220, value224)
                if not mode185:
                    if is_first3 or mode185 is None:
                        mode176 = mode185
                        value209 = value220
                        pos176 = pos185
                    break
                pos = pos176 = pos185
                if is_first3:
                    is_first3 = False
                    value209 = value220
                    mode176 = 1
                else:
                    value209 = Infix(value209, value210, value220)
            if not mode176:
                if is_first2 or mode176 is None:
                    mode163 = mode176
                    value190 = value209
                    pos163 = pos176
                break
            pos = pos163 = pos176
            if is_first2:
                is_first2 = False
                value190 = value209
                mode163 = 1
            else:
                value190 = Infix(value190, value191, value209)
        if not mode163:
            if is_first1 or mode163 is None:
                mode156 = mode163
                value182 = value190
                pos156 = pos163
            break
        pos = pos156 = pos163
        if is_first1:
            is_first1 = False
            value182 = value190
            mode156 = 1
        else:
            value182 = Infix(value182, value183, value190)
    yield (mode156, value182, pos156)
    

def _parse_start1(text, pos):
    while True:
        mode196, value235, pos196 = yield (3, _parse_Newline1, pos)
        if mode196:
            pos = pos196
        else:
            if mode196 is None:
                mode195 = mode196
                value234 = value235
                pos195 = pos196
            break
    mode195 = 1
    value234 = None
    pos195 = pos
    if not mode195:
        mode194 = mode195
        value233 = value234
        pos194 = pos195
    else:
        pos = pos195
        buf7 = []
        pos194 = pos
        while True:
            mode197, value236, pos197 = yield (3, _parse_Stmt1, pos)
            if not mode197:
                if mode197 is None:
                    mode194 = mode197
                    value233 = value236
                    pos194 = pos197
                break
            buf7.append(value236)
            pos = pos197
            mode198, value237, pos198 = yield (3, _parse_Sep1, pos)
            if not mode198:
                if mode198 is None:
                    mode194 = mode198
                    value233 = value237
                    pos194 = pos198
                break
            pos = pos198
        mode194 = 1
        value233 = buf7
        pos194 = pos
    yield (mode194, value233, pos194)
    

def _parse_Space1(text, pos):
    if pos < len(text):
        value239 = text[pos]
        if isinstance(value239, Space):
            mode199 = 2
            value238 = None
            pos199 = pos + 1
        else:
            mode199 = False
            value238 = 139668461571880
            pos199 = pos
    else:
        mode199 = False
        value238 = 139668461571880
        pos199 = pos
    yield (mode199, value238, pos199)
    

def _parse_Word1(text, pos):
    if pos < len(text):
        value241 = text[pos]
        if isinstance(value241, Word):
            mode200 = 1
            value240 = value241
            pos200 = pos + 1
        else:
            mode200 = False
            value240 = 139668461681968
            pos200 = pos
    else:
        mode200 = False
        value240 = 139668461681968
        pos200 = pos
    yield (mode200, value240, pos200)
    

def _parse_Symbol1(text, pos):
    if pos < len(text):
        value243 = text[pos]
        if isinstance(value243, Symbol):
            mode201 = 1
            value242 = value243
            pos201 = pos + 1
        else:
            mode201 = False
            value242 = 139668461682080
            pos201 = pos
    else:
        mode201 = False
        value242 = 139668461682080
        pos201 = pos
    yield (mode201, value242, pos201)
    

def _parse_StringLiteral1(text, pos):
    if pos < len(text):
        value245 = text[pos]
        if isinstance(value245, StringLiteral):
            mode202 = 1
            value244 = value245
            pos202 = pos + 1
        else:
            mode202 = False
            value244 = 139668461682136
            pos202 = pos
    else:
        mode202 = False
        value244 = 139668461682136
        pos202 = pos
    yield (mode202, value244, pos202)
    

def _parse_RegexLiteral1(text, pos):
    if pos < len(text):
        value247 = text[pos]
        if isinstance(value247, RegexLiteral):
            mode203 = 1
            value246 = value247
            pos203 = pos + 1
        else:
            mode203 = False
            value246 = 139668461682248
            pos203 = pos
    else:
        mode203 = False
        value246 = 139668461682248
        pos203 = pos
    yield (mode203, value246, pos203)
    

def _parse_Newline1(text, pos):
    if pos < len(text):
        value249 = text[pos]
        if isinstance(value249, Newline):
            mode204 = 1
            value248 = value249
            pos204 = pos + 1
        else:
            mode204 = False
            value248 = 139668461682192
            pos204 = pos
    else:
        mode204 = False
        value248 = 139668461682192
        pos204 = pos
    yield (mode204, value248, pos204)
    

def _parse_PythonSection1(text, pos):
    if pos < len(text):
        value251 = text[pos]
        if isinstance(value251, PythonSection):
            mode205 = 1
            value250 = value251
            pos205 = pos + 1
        else:
            mode205 = False
            value250 = 139668461682360
            pos205 = pos
    else:
        mode205 = False
        value250 = 139668461682360
        pos205 = pos
    yield (mode205, value250, pos205)
    

def _parse_PythonExpression1(text, pos):
    if pos < len(text):
        value253 = text[pos]
        if isinstance(value253, PythonExpression):
            mode206 = 1
            value252 = value253
            pos206 = pos + 1
        else:
            mode206 = False
            value252 = 139668461682304
            pos206 = pos
    else:
        mode206 = False
        value252 = 139668461682304
        pos206 = pos
    yield (mode206, value252, pos206)
    

def _parse_Comment1(text, pos):
    if pos < len(text):
        value255 = text[pos]
        if isinstance(value255, Comment):
            mode207 = 2
            value254 = None
            pos207 = pos + 1
        else:
            mode207 = False
            value254 = 139668461682528
            pos207 = pos
    else:
        mode207 = False
        value254 = 139668461682528
        pos207 = pos
    yield (mode207, value254, pos207)
    

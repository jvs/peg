# Generated by ../generate_metasyntax.py
import re

class Node:
    _fields = ()

    def __eq__(self, other):
        if not isinstance(other, self.__class__):
            return False
        for field in self._fields:
            if getattr(self, field) != getattr(other, field):
                return False
        return True

    def _asdict(self):
        return {k: getattr(self, k) for k in self._fields}

    def _replace(self, **kw):
        for field in self._fields:
            if field not in kw:
                kw[field] = getattr(self, field)
        return self.__class__(**kw)


class Token(Node):
    _fields = ('value',)

    def __init__(self, value):
        self.value = value

    def __repr__(self):
        return f'{self.__class__.__name__}({self.value!r})'


class Space(Token): pass
pattern1 = re.compile('[ \\t]+')

class Word(Token): pass
pattern2 = re.compile('[_a-zA-Z][_a-zA-Z0-9]*')

class Symbol(Token): pass
pattern3 = re.compile('<<\\!|\\!>>|<<|>>|=>|\\/\\/|[=;,:\\|\\/\\*\\+\\?\\!\\(\\)\\[\\]\\{\\}]')

class StringLiteral(Token): pass
pattern4 = re.compile('("([^"\\\\]|\\\\.)*")')
pattern5 = re.compile("('([^'\\\\]|\\\\.)*')")
pattern6 = re.compile('("""([^\\\\]|\\\\.)*?""")')
pattern7 = re.compile("('\\''([^\\\\]|\\\\.)*?'\\'')")

class RegexLiteral(Token): pass
pattern8 = re.compile('\\`([^\\`\\\\]|\\\\.)*\\`')

class Newline(Token): pass
pattern9 = re.compile('[\\r\\n][\\s]*')

class Comment(Token): pass
pattern10 = re.compile('#[^\\r\\n]*')

class RuleDef(Node):
    _fields = ('name', 'expr')
    value = 'RuleDef'

    def __init__(self, name, expr):
        self.name = name
        self.expr = expr

    def __repr__(self):
        return f'RuleDef(name={self.name!r}, expr={self.expr!r})'


class ClassDef(Node):
    _fields = ('name', 'fields')
    value = 'ClassDef'

    def __init__(self, name, fields):
        self.name = name
        self.fields = fields

    def __repr__(self):
        return f'ClassDef(name={self.name!r}, fields={self.fields!r})'


class TokenDef(Node):
    _fields = ('is_ignored', 'child')
    value = 'TokenDef'

    def __init__(self, is_ignored, child):
        self.is_ignored = is_ignored
        self.child = child

    def __repr__(self):
        return f'TokenDef(is_ignored={self.is_ignored!r}, child={self.child!r})'


class TemplateDef(Node):
    _fields = ('name', 'params', 'expr')
    value = 'TemplateDef'

    def __init__(self, name, params, expr):
        self.name = name
        self.params = params
        self.expr = expr

    def __repr__(self):
        return f'TemplateDef(name={self.name!r}, params={self.params!r}, expr={self.expr!r})'


class Ref(Node):
    _fields = ('name',)
    value = 'Ref'

    def __init__(self, name):
        self.name = name

    def __repr__(self):
        return f'Ref(name={self.name!r})'


class ListLiteral(Node):
    _fields = ('elements',)
    value = 'ListLiteral'

    def __init__(self, elements):
        self.elements = elements

    def __repr__(self):
        return f'ListLiteral(elements={self.elements!r})'


class KeywordArg(Node):
    _fields = ('name', 'expr')
    value = 'KeywordArg'

    def __init__(self, name, expr):
        self.name = name
        self.expr = expr

    def __repr__(self):
        return f'KeywordArg(name={self.name!r}, expr={self.expr!r})'


class ArgList(Node):
    _fields = ('args',)
    value = 'ArgList'

    def __init__(self, args):
        self.args = args

    def __repr__(self):
        return f'ArgList(args={self.args!r})'


class ParseError(Exception):
    def __init__(self, mode, expr_code, pos):
        self.is_error = (mode is None)
        self.expr_code = expr_code
        self.pos = pos



class Infix(Node):
    _fields = ('left', 'operator', 'right')

    def __init__(self, left, operator, right):
        self.left = left
        self.operator = operator
        self.right = right

    def __repr__(self):
        return f'Infix({self.left!r}, {self.operator!r}, {self.right!r})'


class Postfix(Node):
    _fields = ('left', 'operator')

    def __init__(self, left, operator):
        self.left = left
        self.operator = operator

    def __repr__(self):
        return f'Postfix({self.left!r}, {self.operator!r})'


class Prefix(Node):
    _fields = ('operator', 'right')

    def __init__(self, operator, right):
        self.operator = operator
        self.right = right

    def __repr__(self):
        return f'Prefix({self.operator!r}, {self.right!r})'


def parse(text, pos=0):
    text = _run(text, pos, _tokenize)
    pos = 0
    return _run(text, pos, _parse_start1)


def _run(text, pos, start):
    memo = {}
    result = None

    key = (3, start, pos)
    gtor = start(text, pos)
    stack = [(key, gtor)]

    while stack:
        key, gtor = stack[-1]
        result = gtor.send(result)

        if result[0] != 3:
            stack.pop()
            memo[key] = result
        elif result in memo:
            result = memo[result]
        else:
            gtor = result[1](text, result[2])
            stack.append((result, gtor))
            result = None

    if result[0]:
        return result[1]
    else:
        raise ParseError(*result)


def visit(node):
    if isinstance(node, list):
        yield from node

    elif isinstance(node, Node):
        yield node

        if hasattr(node, '_fields'):
            for field in node._fields:
                yield from visit(getattr(node, field))


def transform(node, *callbacks):
    if not callbacks:
        return node

    if len(callbacks) == 1:
        callback = callbacks[0]
    else:
        def callback(node):
            for f in callbacks:
                node = f(node)
            return node

    return _transform(node, callback)


def _transform(node, callback):
    if isinstance(node, list):
        return [_transform(x, callback) for x in node]

    if not isinstance(node, Node):
        return node

    updates = {}
    for field in node._fields:
        was = getattr(node, field)
        now = _transform(was, callback)
        if was is not now:
            updates[field] = now

    if updates:
        node = node._replace(**updates)

    return callback(node)


def _tokenize(text, pos):
    buf1 = []
    while True:
        backtrack1 = pos
        match1 = pattern1.match(text, pos)
        if match1:
            mode4 = 1
            value4 = match1.group(0)
            pos4 = match1.end()
        else:
            mode4 = False
            value4 = 4374506296
            pos4 = pos
        if mode4:
            mode3 = 2
            value3 = None
            pos3 = pos4
        else:
            mode3 = mode4
            value3 = value4
            pos3 = pos4
        if mode3 or mode3 is None:
            mode2 = mode3
            value2 = value3
            pos2 = pos3
        else:
            pos = backtrack1
            match2 = pattern2.match(text, pos)
            if match2:
                mode6 = 1
                value6 = match2.group(0)
                pos6 = match2.end()
            else:
                mode6 = False
                value6 = 4374506408
                pos6 = pos
            if mode6:
                mode5 = 1
                value5 = Word(value6)
                pos5 = pos6
            else:
                mode5 = mode6
                value5 = value6
                pos5 = pos6
            if mode5 or mode5 is None:
                mode2 = mode5
                value2 = value5
                pos2 = pos5
            else:
                pos = backtrack1
                match3 = pattern3.match(text, pos)
                if match3:
                    mode8 = 1
                    value8 = match3.group(0)
                    pos8 = match3.end()
                else:
                    mode8 = False
                    value8 = 4374506520
                    pos8 = pos
                if mode8:
                    mode7 = 1
                    value7 = Symbol(value8)
                    pos7 = pos8
                else:
                    mode7 = mode8
                    value7 = value8
                    pos7 = pos8
                if mode7 or mode7 is None:
                    mode2 = mode7
                    value2 = value7
                    pos2 = pos7
                else:
                    pos = backtrack1
                    backtrack2 = pos
                    match4 = pattern4.match(text, pos)
                    if match4:
                        mode11 = 1
                        value11 = match4.group(0)
                        pos11 = match4.end()
                    else:
                        mode11 = False
                        value11 = 4374506968
                        pos11 = pos
                    if mode11 or mode11 is None:
                        mode10 = mode11
                        value10 = value11
                        pos10 = pos11
                    else:
                        pos = backtrack2
                        match5 = pattern5.match(text, pos)
                        if match5:
                            mode12 = 1
                            value12 = match5.group(0)
                            pos12 = match5.end()
                        else:
                            mode12 = False
                            value12 = 4374507192
                            pos12 = pos
                        if mode12 or mode12 is None:
                            mode10 = mode12
                            value10 = value12
                            pos10 = pos12
                        else:
                            pos = backtrack2
                            match6 = pattern6.match(text, pos)
                            if match6:
                                mode13 = 1
                                value13 = match6.group(0)
                                pos13 = match6.end()
                            else:
                                mode13 = False
                                value13 = 4374507024
                                pos13 = pos
                            if mode13 or mode13 is None:
                                mode10 = mode13
                                value10 = value13
                                pos10 = pos13
                            else:
                                pos = backtrack2
                                match7 = pattern7.match(text, pos)
                                if match7:
                                    mode14 = 1
                                    value14 = match7.group(0)
                                    pos14 = match7.end()
                                else:
                                    mode14 = False
                                    value14 = 4374507360
                                    pos14 = pos
                                if mode14 or mode14 is None:
                                    mode10 = mode14
                                    value10 = value14
                                    pos10 = pos14
                                else:
                                    pos = backtrack2
                                    mode10 = False
                                    value10 = 4374565608
                                    pos10 = pos
                                    if pos10 < pos11:
                                        mode10 = mode11
                                        value10 = value11
                                        pos10 = pos11
                                    if pos10 < pos12:
                                        mode10 = mode12
                                        value10 = value12
                                        pos10 = pos12
                                    if pos10 < pos13:
                                        mode10 = mode13
                                        value10 = value13
                                        pos10 = pos13
                                    if pos10 < pos14:
                                        mode10 = mode14
                                        value10 = value14
                                        pos10 = pos14
                    if mode10:
                        mode9 = 1
                        value9 = StringLiteral(value10)
                        pos9 = pos10
                    else:
                        mode9 = mode10
                        value9 = value10
                        pos9 = pos10
                    if mode9 or mode9 is None:
                        mode2 = mode9
                        value2 = value9
                        pos2 = pos9
                    else:
                        pos = backtrack1
                        match8 = pattern8.match(text, pos)
                        if match8:
                            mode16 = 1
                            value16 = match8.group(0)
                            pos16 = match8.end()
                        else:
                            mode16 = False
                            value16 = 4374506912
                            pos16 = pos
                        if mode16:
                            mode15 = 1
                            value15 = RegexLiteral(value16)
                            pos15 = pos16
                        else:
                            mode15 = mode16
                            value15 = value16
                            pos15 = pos16
                        if mode15 or mode15 is None:
                            mode2 = mode15
                            value2 = value15
                            pos2 = pos15
                        else:
                            pos = backtrack1
                            match9 = pattern9.match(text, pos)
                            if match9:
                                mode18 = 1
                                value18 = match9.group(0)
                                pos18 = match9.end()
                            else:
                                mode18 = False
                                value18 = 4374507416
                                pos18 = pos
                            if mode18:
                                mode17 = 1
                                value17 = Newline(value18)
                                pos17 = pos18
                            else:
                                mode17 = mode18
                                value17 = value18
                                pos17 = pos18
                            if mode17 or mode17 is None:
                                mode2 = mode17
                                value2 = value17
                                pos2 = pos17
                            else:
                                pos = backtrack1
                                match10 = pattern10.match(text, pos)
                                if match10:
                                    mode20 = 1
                                    value20 = match10.group(0)
                                    pos20 = match10.end()
                                else:
                                    mode20 = False
                                    value20 = 4374487224
                                    pos20 = pos
                                if mode20:
                                    mode19 = 2
                                    value19 = None
                                    pos19 = pos20
                                else:
                                    mode19 = mode20
                                    value19 = value20
                                    pos19 = pos20
                                if mode19 or mode19 is None:
                                    mode2 = mode19
                                    value2 = value19
                                    pos2 = pos19
                                else:
                                    pos = backtrack1
                                    mode2 = False
                                    value2 = 4374506464
                                    pos2 = pos
                                    if pos2 < pos3:
                                        mode2 = mode3
                                        value2 = value3
                                        pos2 = pos3
                                    if pos2 < pos5:
                                        mode2 = mode5
                                        value2 = value5
                                        pos2 = pos5
                                    if pos2 < pos7:
                                        mode2 = mode7
                                        value2 = value7
                                        pos2 = pos7
                                    if pos2 < pos9:
                                        mode2 = mode9
                                        value2 = value9
                                        pos2 = pos9
                                    if pos2 < pos15:
                                        mode2 = mode15
                                        value2 = value15
                                        pos2 = pos15
                                    if pos2 < pos17:
                                        mode2 = mode17
                                        value2 = value17
                                        pos2 = pos17
                                    if pos2 < pos19:
                                        mode2 = mode19
                                        value2 = value19
                                        pos2 = pos19
        if not mode2:
            if mode2 is None:
                mode1 = mode2
                value1 = value2
                pos1 = pos2
            break
        if mode2 != 2:
            buf1.append(value2)
        pos = pos2
    mode1 = 1
    value1 = buf1
    pos1 = pos
    yield (mode1, value1, pos1)
    

def tokenize(text, pos=0):
    return _run(text, pos, _tokenize)


def _parse_Sep1(text, pos):
    buf2 = []
    while True:
        backtrack3 = pos
        mode23, value23, pos23 = yield (3, _parse_Newline1, pos)
        if mode23 or mode23 is None:
            mode22 = mode23
            value22 = value23
            pos22 = pos23
        else:
            pos = backtrack3
            value25 = ';'
            if pos >= len(text):
                mode24 = False
                value24 = 4374488120
                pos24 = pos
            else:
                token1 = text[pos]
                if token1.value == value25:
                    mode24 = 1
                    value24 = token1
                    pos24 = pos + 1
                else:
                    mode24 = False
                    value24 = 4374488120
                    pos24 = pos
            if mode24 or mode24 is None:
                mode22 = mode24
                value22 = value24
                pos22 = pos24
            else:
                pos = backtrack3
                mode22 = False
                value22 = 4374566000
                pos22 = pos
                if pos22 < pos23:
                    mode22 = mode23
                    value22 = value23
                    pos22 = pos23
                if pos22 < pos24:
                    mode22 = mode24
                    value22 = value24
                    pos22 = pos24
        if not mode22:
            if mode22 is None:
                mode21 = mode22
                value21 = value22
                pos21 = pos22
            break
        if mode22 != 2:
            buf2.append(value22)
        pos = pos22
    if not buf2:
        mode21 = False
        value21 = 4374566168
        pos21 = pos
    else:
        mode21 = 1
        value21 = buf2
        pos21 = pos
    yield (mode21, value21, pos21)
    

def _parse_Name1(text, pos):
    mode25, value26, pos25 = yield (3, _parse_Word1, pos)
    yield (mode25, value26, pos25)
    

def _parse_Comma1(text, pos):
    while True:
        mode29, value30, pos29 = yield (3, _parse_Newline1, pos)
        if mode29:
            pos = pos29
        else:
            if mode29 is None:
                mode28 = mode29
                value29 = value30
                pos28 = pos29
            break
    mode28 = 1
    value29 = None
    pos28 = pos
    if not mode28:
        mode27 = mode28
        value28 = value29
        pos27 = pos28
    else:
        pos = pos28
        value32 = ','
        if pos >= len(text):
            mode30 = False
            value31 = 4374489128
            pos30 = pos
        else:
            token2 = text[pos]
            if token2.value == value32:
                mode30 = 1
                value31 = token2
                pos30 = pos + 1
            else:
                mode30 = False
                value31 = 4374489128
                pos30 = pos
        mode27 = mode30
        value28 = value31
        pos27 = pos30
    if not mode27:
        mode26 = mode27
        value27 = value28
        pos26 = pos27
    else:
        pos = pos27
        while True:
            mode32, value34, pos32 = yield (3, _parse_Newline1, pos)
            if mode32:
                pos = pos32
            else:
                if mode32 is None:
                    mode31 = mode32
                    value33 = value34
                    pos31 = pos32
                break
        mode31 = 1
        value33 = None
        pos31 = pos
        if mode31:
            mode26 = 1
            value27 = value28
            pos26 = pos31
        else:
            mode26 = mode31
            value27 = value33
            pos26 = pos31
    yield (mode26, value27, pos26)
    

def _parse_RuleDef1(text, pos):
    mode35, value37, pos35 = yield (3, _parse_Name1, pos)
    if not mode35:
        mode34 = mode35
        value36 = value37
        pos34 = pos35
    else:
        pos = pos35
        backtrack4 = pos
        value40 = '='
        if pos >= len(text):
            mode37 = False
            value39 = 4374489856
            pos37 = pos
        else:
            token3 = text[pos]
            if token3.value == value40:
                mode37 = 1
                value39 = token3
                pos37 = pos + 1
            else:
                mode37 = False
                value39 = 4374489856
                pos37 = pos
        if mode37 or mode37 is None:
            mode36 = mode37
            value38 = value39
            pos36 = pos37
        else:
            pos = backtrack4
            value42 = ':'
            if pos >= len(text):
                mode38 = False
                value41 = 4374490192
                pos38 = pos
            else:
                token4 = text[pos]
                if token4.value == value42:
                    mode38 = 1
                    value41 = token4
                    pos38 = pos + 1
                else:
                    mode38 = False
                    value41 = 4374490192
                    pos38 = pos
            if mode38 or mode38 is None:
                mode36 = mode38
                value38 = value41
                pos36 = pos38
            else:
                pos = backtrack4
                mode36 = False
                value38 = 4374263176
                pos36 = pos
                if pos36 < pos37:
                    mode36 = mode37
                    value38 = value39
                    pos36 = pos37
                if pos36 < pos38:
                    mode36 = mode38
                    value38 = value41
                    pos36 = pos38
        if mode36:
            mode34 = 1
            value36 = value37
            pos34 = pos36
        else:
            mode34 = mode36
            value36 = value38
            pos34 = pos36
    if not mode34:
        mode33 = mode34
        value35 = value36
        pos33 = pos34
    else:
        pos = pos34
        mode39, value43, pos39 = yield (3, _parse_Expr1, pos)
        if not mode39:
            mode33 = mode39
            value35 = value43
            pos33 = pos39
        else:
            pos = pos39
            mode33 = 1
            value35 = RuleDef(value36, value43)
            pos33 = pos
    yield (mode33, value35, pos33)
    

def _parse_ClassDef1(text, pos):
    value47 = 'class'
    if pos >= len(text):
        mode42 = False
        value46 = 4374490752
        pos42 = pos
    else:
        token5 = text[pos]
        if token5.value == value47:
            mode42 = 1
            value46 = token5
            pos42 = pos + 1
        else:
            mode42 = False
            value46 = 4374490752
            pos42 = pos
    if not mode42:
        mode41 = mode42
        value45 = value46
        pos41 = pos42
    else:
        pos = pos42
        mode43, value48, pos43 = yield (3, _parse_Name1, pos)
        mode41 = mode43
        value45 = value48
        pos41 = pos43
    if not mode41:
        mode40 = mode41
        value44 = value45
        pos40 = pos41
    else:
        pos = pos41
        while True:
            mode49, value54, pos49 = yield (3, _parse_Newline1, pos)
            if mode49:
                pos = pos49
            else:
                if mode49 is None:
                    mode48 = mode49
                    value53 = value54
                    pos48 = pos49
                break
        mode48 = 1
        value53 = None
        pos48 = pos
        if not mode48:
            mode47 = mode48
            value52 = value53
            pos47 = pos48
        else:
            pos = pos48
            value56 = '{'
            if pos >= len(text):
                mode50 = False
                value55 = 4374476224
                pos50 = pos
            else:
                token6 = text[pos]
                if token6.value == value56:
                    mode50 = 1
                    value55 = token6
                    pos50 = pos + 1
                else:
                    mode50 = False
                    value55 = 4374476224
                    pos50 = pos
            mode47 = mode50
            value52 = value55
            pos47 = pos50
        if not mode47:
            mode46 = mode47
            value51 = value52
            pos46 = pos47
        else:
            pos = pos47
            while True:
                mode52, value58, pos52 = yield (3, _parse_Newline1, pos)
                if mode52:
                    pos = pos52
                else:
                    if mode52 is None:
                        mode51 = mode52
                        value57 = value58
                        pos51 = pos52
                    break
            mode51 = 1
            value57 = None
            pos51 = pos
            if mode51:
                mode46 = 1
                value51 = value52
                pos46 = pos51
            else:
                mode46 = mode51
                value51 = value57
                pos46 = pos51
        if not mode46:
            mode45 = mode46
            value50 = value51
            pos45 = pos46
        else:
            pos = pos46
            buf3 = []
            pos53 = pos
            while True:
                mode54, value60, pos54 = yield (3, _parse_RuleDef1, pos)
                if not mode54:
                    if mode54 is None:
                        mode53 = mode54
                        value59 = value60
                        pos53 = pos54
                    break
                buf3.append(value60)
                pos = pos54
                mode55, value61, pos55 = yield (3, _parse_Sep1, pos)
                if not mode55:
                    if mode55 is None:
                        mode53 = mode55
                        value59 = value61
                        pos53 = pos55
                    break
                pos = pos55
            mode53 = 1
            value59 = buf3
            pos53 = pos
            mode45 = mode53
            value50 = value59
            pos45 = pos53
        if not mode45:
            mode44 = mode45
            value49 = value50
            pos44 = pos45
        else:
            pos = pos45
            value63 = '}'
            if pos >= len(text):
                mode56 = False
                value62 = 4374476448
                pos56 = pos
            else:
                token7 = text[pos]
                if token7.value == value63:
                    mode56 = 1
                    value62 = token7
                    pos56 = pos + 1
                else:
                    mode56 = False
                    value62 = 4374476448
                    pos56 = pos
            if mode56:
                mode44 = 1
                value49 = value50
                pos44 = pos56
            else:
                mode44 = mode56
                value49 = value62
                pos44 = pos56
        if not mode44:
            mode40 = mode44
            value44 = value49
            pos40 = pos44
        else:
            pos = pos44
            mode40 = 1
            value44 = ClassDef(value45, value49)
            pos40 = pos
    yield (mode40, value44, pos40)
    

def _parse_TokenDef1(text, pos):
    backtrack5 = pos
    backtrack6 = pos
    value68 = 'ignore'
    if pos >= len(text):
        mode60 = False
        value67 = 4374477008
        pos60 = pos
    else:
        token8 = text[pos]
        if token8.value == value68:
            mode60 = 1
            value67 = token8
            pos60 = pos + 1
        else:
            mode60 = False
            value67 = 4374477008
            pos60 = pos
    if mode60 or mode60 is None:
        mode59 = mode60
        value66 = value67
        pos59 = pos60
    else:
        pos = backtrack6
        value70 = 'ignored'
        if pos >= len(text):
            mode61 = False
            value69 = 4374477680
            pos61 = pos
        else:
            token9 = text[pos]
            if token9.value == value70:
                mode61 = 1
                value69 = token9
                pos61 = pos + 1
            else:
                mode61 = False
                value69 = 4374477680
                pos61 = pos
        if mode61 or mode61 is None:
            mode59 = mode61
            value66 = value69
            pos59 = pos61
        else:
            pos = backtrack6
            mode59 = False
            value66 = 4374264072
            pos59 = pos
            if pos59 < pos60:
                mode59 = mode60
                value66 = value67
                pos59 = pos60
            if pos59 < pos61:
                mode59 = mode61
                value66 = value69
                pos59 = pos61
    if mode59 or mode59 is None:
        mode58 = mode59
        value65 = value66
        pos58 = pos59
    else:
        mode58 = 1
        value65 = None
        pos58 = backtrack5
    if not mode58:
        mode57 = mode58
        value64 = value65
        pos57 = pos58
    else:
        pos = pos58
        value73 = 'token'
        if pos >= len(text):
            mode63 = False
            value72 = 4374478240
            pos63 = pos
        else:
            token10 = text[pos]
            if token10.value == value73:
                mode63 = 1
                value72 = token10
                pos63 = pos + 1
            else:
                mode63 = False
                value72 = 4374478240
                pos63 = pos
        if not mode63:
            mode62 = mode63
            value71 = value72
            pos62 = pos63
        else:
            pos = pos63
            backtrack7 = pos
            mode65, value75, pos65 = yield (3, _parse_ClassDef1, pos)
            if mode65 or mode65 is None:
                mode64 = mode65
                value74 = value75
                pos64 = pos65
            else:
                pos = backtrack7
                mode66, value76, pos66 = yield (3, _parse_RuleDef1, pos)
                if mode66 or mode66 is None:
                    mode64 = mode66
                    value74 = value76
                    pos64 = pos66
                else:
                    pos = backtrack7
                    mode64 = False
                    value74 = 4374264240
                    pos64 = pos
                    if pos64 < pos65:
                        mode64 = mode65
                        value74 = value75
                        pos64 = pos65
                    if pos64 < pos66:
                        mode64 = mode66
                        value74 = value76
                        pos64 = pos66
            mode62 = mode64
            value71 = value74
            pos62 = pos64
        if not mode62:
            mode57 = mode62
            value64 = value71
            pos57 = pos62
        else:
            pos = pos62
            mode57 = 1
            value64 = TokenDef(value65, value71)
            pos57 = pos
    yield (mode57, value64, pos57)
    

def _parse_TemplateDef1(text, pos):
    value80 = 'template'
    if pos >= len(text):
        mode69 = False
        value79 = 4374467024
        pos69 = pos
    else:
        token11 = text[pos]
        if token11.value == value80:
            mode69 = 1
            value79 = token11
            pos69 = pos + 1
        else:
            mode69 = False
            value79 = 4374467024
            pos69 = pos
    if not mode69:
        mode68 = mode69
        value78 = value79
        pos68 = pos69
    else:
        pos = pos69
        mode70, value81, pos70 = yield (3, _parse_Name1, pos)
        mode68 = mode70
        value78 = value81
        pos68 = pos70
    if not mode68:
        mode67 = mode68
        value77 = value78
        pos67 = pos68
    else:
        pos = pos68
        while True:
            mode76, value87, pos76 = yield (3, _parse_Newline1, pos)
            if mode76:
                pos = pos76
            else:
                if mode76 is None:
                    mode75 = mode76
                    value86 = value87
                    pos75 = pos76
                break
        mode75 = 1
        value86 = None
        pos75 = pos
        if not mode75:
            mode74 = mode75
            value85 = value86
            pos74 = pos75
        else:
            pos = pos75
            value89 = '('
            if pos >= len(text):
                mode77 = False
                value88 = 4374468592
                pos77 = pos
            else:
                token12 = text[pos]
                if token12.value == value89:
                    mode77 = 1
                    value88 = token12
                    pos77 = pos + 1
                else:
                    mode77 = False
                    value88 = 4374468592
                    pos77 = pos
            mode74 = mode77
            value85 = value88
            pos74 = pos77
        if not mode74:
            mode73 = mode74
            value84 = value85
            pos73 = pos74
        else:
            pos = pos74
            while True:
                mode79, value91, pos79 = yield (3, _parse_Newline1, pos)
                if mode79:
                    pos = pos79
                else:
                    if mode79 is None:
                        mode78 = mode79
                        value90 = value91
                        pos78 = pos79
                    break
            mode78 = 1
            value90 = None
            pos78 = pos
            if mode78:
                mode73 = 1
                value84 = value85
                pos73 = pos78
            else:
                mode73 = mode78
                value84 = value90
                pos73 = pos78
        if not mode73:
            mode72 = mode73
            value83 = value84
            pos72 = pos73
        else:
            pos = pos73
            buf4 = []
            pos80 = pos
            while True:
                while True:
                    mode84, value96, pos84 = yield (3, _parse_Newline1, pos)
                    if mode84:
                        pos = pos84
                    else:
                        if mode84 is None:
                            mode83 = mode84
                            value95 = value96
                            pos83 = pos84
                        break
                mode83 = 1
                value95 = None
                pos83 = pos
                if not mode83:
                    mode82 = mode83
                    value94 = value95
                    pos82 = pos83
                else:
                    pos = pos83
                    mode85, value97, pos85 = yield (3, _parse_Name1, pos)
                    mode82 = mode85
                    value94 = value97
                    pos82 = pos85
                if not mode82:
                    mode81 = mode82
                    value93 = value94
                    pos81 = pos82
                else:
                    pos = pos82
                    while True:
                        mode87, value99, pos87 = yield (3, _parse_Newline1, pos)
                        if mode87:
                            pos = pos87
                        else:
                            if mode87 is None:
                                mode86 = mode87
                                value98 = value99
                                pos86 = pos87
                            break
                    mode86 = 1
                    value98 = None
                    pos86 = pos
                    if mode86:
                        mode81 = 1
                        value93 = value94
                        pos81 = pos86
                    else:
                        mode81 = mode86
                        value93 = value98
                        pos81 = pos86
                if not mode81:
                    if mode81 is None:
                        mode80 = mode81
                        value92 = value93
                        pos80 = pos81
                    break
                buf4.append(value93)
                pos = pos81
                mode88, value100, pos88 = yield (3, _parse_Comma1, pos)
                if not mode88:
                    if mode88 is None:
                        mode80 = mode88
                        value92 = value100
                        pos80 = pos88
                    break
                pos = pos88
            mode80 = 1
            value92 = buf4
            pos80 = pos
            mode72 = mode80
            value83 = value92
            pos72 = pos80
        if not mode72:
            mode71 = mode72
            value82 = value83
            pos71 = pos72
        else:
            pos = pos72
            value102 = ')'
            if pos >= len(text):
                mode89 = False
                value101 = 4374469040
                pos89 = pos
            else:
                token13 = text[pos]
                if token13.value == value102:
                    mode89 = 1
                    value101 = token13
                    pos89 = pos + 1
                else:
                    mode89 = False
                    value101 = 4374469040
                    pos89 = pos
            if mode89:
                mode71 = 1
                value82 = value83
                pos71 = pos89
            else:
                mode71 = mode89
                value82 = value101
                pos71 = pos89
        if not mode71:
            mode67 = mode71
            value77 = value82
            pos67 = pos71
        else:
            pos = pos71
            while True:
                mode94, value107, pos94 = yield (3, _parse_Newline1, pos)
                if mode94:
                    pos = pos94
                else:
                    if mode94 is None:
                        mode93 = mode94
                        value106 = value107
                        pos93 = pos94
                    break
            mode93 = 1
            value106 = None
            pos93 = pos
            if not mode93:
                mode92 = mode93
                value105 = value106
                pos92 = pos93
            else:
                pos = pos93
                backtrack8 = pos
                value110 = '='
                if pos >= len(text):
                    mode96 = False
                    value109 = 4374470216
                    pos96 = pos
                else:
                    token14 = text[pos]
                    if token14.value == value110:
                        mode96 = 1
                        value109 = token14
                        pos96 = pos + 1
                    else:
                        mode96 = False
                        value109 = 4374470216
                        pos96 = pos
                if mode96 or mode96 is None:
                    mode95 = mode96
                    value108 = value109
                    pos95 = pos96
                else:
                    pos = backtrack8
                    value112 = ':'
                    if pos >= len(text):
                        mode97 = False
                        value111 = 4374470384
                        pos97 = pos
                    else:
                        token15 = text[pos]
                        if token15.value == value112:
                            mode97 = 1
                            value111 = token15
                            pos97 = pos + 1
                        else:
                            mode97 = False
                            value111 = 4374470384
                            pos97 = pos
                    if mode97 or mode97 is None:
                        mode95 = mode97
                        value108 = value111
                        pos95 = pos97
                    else:
                        pos = backtrack8
                        value114 = '=>'
                        if pos >= len(text):
                            mode98 = False
                            value113 = 4374458720
                            pos98 = pos
                        else:
                            token16 = text[pos]
                            if token16.value == value114:
                                mode98 = 1
                                value113 = token16
                                pos98 = pos + 1
                            else:
                                mode98 = False
                                value113 = 4374458720
                                pos98 = pos
                        if mode98 or mode98 is None:
                            mode95 = mode98
                            value108 = value113
                            pos95 = pos98
                        else:
                            pos = backtrack8
                            mode95 = False
                            value108 = 4374265304
                            pos95 = pos
                            if pos95 < pos96:
                                mode95 = mode96
                                value108 = value109
                                pos95 = pos96
                            if pos95 < pos97:
                                mode95 = mode97
                                value108 = value111
                                pos95 = pos97
                            if pos95 < pos98:
                                mode95 = mode98
                                value108 = value113
                                pos95 = pos98
                mode92 = mode95
                value105 = value108
                pos92 = pos95
            if not mode92:
                mode91 = mode92
                value104 = value105
                pos91 = pos92
            else:
                pos = pos92
                while True:
                    mode100, value116, pos100 = yield (3, _parse_Newline1, pos)
                    if mode100:
                        pos = pos100
                    else:
                        if mode100 is None:
                            mode99 = mode100
                            value115 = value116
                            pos99 = pos100
                        break
                mode99 = 1
                value115 = None
                pos99 = pos
                if mode99:
                    mode91 = 1
                    value104 = value105
                    pos91 = pos99
                else:
                    mode91 = mode99
                    value104 = value115
                    pos91 = pos99
            if not mode91:
                mode90 = mode91
                value103 = value104
                pos90 = pos91
            else:
                pos = pos91
                mode101, value117, pos101 = yield (3, _parse_Expr1, pos)
                mode90 = mode101
                value103 = value117
                pos90 = pos101
            if not mode90:
                mode67 = mode90
                value77 = value103
                pos67 = pos90
            else:
                pos = pos90
                mode67 = 1
                value77 = TemplateDef(value78, value82, value103)
                pos67 = pos
    yield (mode67, value77, pos67)
    

def _parse_Def1(text, pos):
    backtrack9 = pos
    mode103, value119, pos103 = yield (3, _parse_TokenDef1, pos)
    if mode103 or mode103 is None:
        mode102 = mode103
        value118 = value119
        pos102 = pos103
    else:
        pos = backtrack9
        mode104, value120, pos104 = yield (3, _parse_ClassDef1, pos)
        if mode104 or mode104 is None:
            mode102 = mode104
            value118 = value120
            pos102 = pos104
        else:
            pos = backtrack9
            mode105, value121, pos105 = yield (3, _parse_TemplateDef1, pos)
            if mode105 or mode105 is None:
                mode102 = mode105
                value118 = value121
                pos102 = pos105
            else:
                pos = backtrack9
                mode106, value122, pos106 = yield (3, _parse_RuleDef1, pos)
                if mode106 or mode106 is None:
                    mode102 = mode106
                    value118 = value122
                    pos102 = pos106
                else:
                    pos = backtrack9
                    mode102 = False
                    value118 = 4374265640
                    pos102 = pos
                    if pos102 < pos103:
                        mode102 = mode103
                        value118 = value119
                        pos102 = pos103
                    if pos102 < pos104:
                        mode102 = mode104
                        value118 = value120
                        pos102 = pos104
                    if pos102 < pos105:
                        mode102 = mode105
                        value118 = value121
                        pos102 = pos105
                    if pos102 < pos106:
                        mode102 = mode106
                        value118 = value122
                        pos102 = pos106
    yield (mode102, value118, pos102)
    

def _parse_Ref1(text, pos):
    mode108, value124, pos108 = yield (3, _parse_Word1, pos)
    if not mode108:
        mode107 = mode108
        value123 = value124
        pos107 = pos108
    else:
        pos = pos108
        mode107 = 1
        value123 = Ref(value124)
        pos107 = pos
    yield (mode107, value123, pos107)
    

def _parse_ListLiteral1(text, pos):
    value129 = '['
    if pos >= len(text):
        mode112 = False
        value128 = 4374461464
        pos112 = pos
    else:
        token17 = text[pos]
        if token17.value == value129:
            mode112 = 1
            value128 = token17
            pos112 = pos + 1
        else:
            mode112 = False
            value128 = 4374461464
            pos112 = pos
    if not mode112:
        mode111 = mode112
        value127 = value128
        pos111 = pos112
    else:
        pos = pos112
        buf5 = []
        pos113 = pos
        while True:
            while True:
                mode117, value134, pos117 = yield (3, _parse_Newline1, pos)
                if mode117:
                    pos = pos117
                else:
                    if mode117 is None:
                        mode116 = mode117
                        value133 = value134
                        pos116 = pos117
                    break
            mode116 = 1
            value133 = None
            pos116 = pos
            if not mode116:
                mode115 = mode116
                value132 = value133
                pos115 = pos116
            else:
                pos = pos116
                mode118, value135, pos118 = yield (3, _parse_Expr1, pos)
                mode115 = mode118
                value132 = value135
                pos115 = pos118
            if not mode115:
                mode114 = mode115
                value131 = value132
                pos114 = pos115
            else:
                pos = pos115
                while True:
                    mode120, value137, pos120 = yield (3, _parse_Newline1, pos)
                    if mode120:
                        pos = pos120
                    else:
                        if mode120 is None:
                            mode119 = mode120
                            value136 = value137
                            pos119 = pos120
                        break
                mode119 = 1
                value136 = None
                pos119 = pos
                if mode119:
                    mode114 = 1
                    value131 = value132
                    pos114 = pos119
                else:
                    mode114 = mode119
                    value131 = value136
                    pos114 = pos119
            if not mode114:
                if mode114 is None:
                    mode113 = mode114
                    value130 = value131
                    pos113 = pos114
                break
            buf5.append(value131)
            pos = pos114
            mode121, value138, pos121 = yield (3, _parse_Comma1, pos)
            if not mode121:
                if mode121 is None:
                    mode113 = mode121
                    value130 = value138
                    pos113 = pos121
                break
            pos = pos121
        mode113 = 1
        value130 = buf5
        pos113 = pos
        mode111 = mode113
        value127 = value130
        pos111 = pos113
    if not mode111:
        mode110 = mode111
        value126 = value127
        pos110 = pos111
    else:
        pos = pos111
        value140 = ']'
        if pos >= len(text):
            mode122 = False
            value139 = 4374462024
            pos122 = pos
        else:
            token18 = text[pos]
            if token18.value == value140:
                mode122 = 1
                value139 = token18
                pos122 = pos + 1
            else:
                mode122 = False
                value139 = 4374462024
                pos122 = pos
        if mode122:
            mode110 = 1
            value126 = value127
            pos110 = pos122
        else:
            mode110 = mode122
            value126 = value139
            pos110 = pos122
    if not mode110:
        mode109 = mode110
        value125 = value126
        pos109 = pos110
    else:
        pos = pos110
        mode109 = 1
        value125 = ListLiteral(value126)
        pos109 = pos
    yield (mode109, value125, pos109)
    

def _parse_Atom1(text, pos):
    backtrack10 = pos
    value145 = '('
    if pos >= len(text):
        mode126 = False
        value144 = 4374577952
        pos126 = pos
    else:
        token19 = text[pos]
        if token19.value == value145:
            mode126 = 1
            value144 = token19
            pos126 = pos + 1
        else:
            mode126 = False
            value144 = 4374577952
            pos126 = pos
    if not mode126:
        mode125 = mode126
        value143 = value144
        pos125 = pos126
    else:
        pos = pos126
        while True:
            mode130, value149, pos130 = yield (3, _parse_Newline1, pos)
            if mode130:
                pos = pos130
            else:
                if mode130 is None:
                    mode129 = mode130
                    value148 = value149
                    pos129 = pos130
                break
        mode129 = 1
        value148 = None
        pos129 = pos
        if not mode129:
            mode128 = mode129
            value147 = value148
            pos128 = pos129
        else:
            pos = pos129
            mode131, value150, pos131 = yield (3, _parse_Expr1, pos)
            mode128 = mode131
            value147 = value150
            pos128 = pos131
        if not mode128:
            mode127 = mode128
            value146 = value147
            pos127 = pos128
        else:
            pos = pos128
            while True:
                mode133, value152, pos133 = yield (3, _parse_Newline1, pos)
                if mode133:
                    pos = pos133
                else:
                    if mode133 is None:
                        mode132 = mode133
                        value151 = value152
                        pos132 = pos133
                    break
            mode132 = 1
            value151 = None
            pos132 = pos
            if mode132:
                mode127 = 1
                value146 = value147
                pos127 = pos132
            else:
                mode127 = mode132
                value146 = value151
                pos127 = pos132
        mode125 = mode127
        value143 = value146
        pos125 = pos127
    if not mode125:
        mode124 = mode125
        value142 = value143
        pos124 = pos125
    else:
        pos = pos125
        value154 = ')'
        if pos >= len(text):
            mode134 = False
            value153 = 4374577728
            pos134 = pos
        else:
            token20 = text[pos]
            if token20.value == value154:
                mode134 = 1
                value153 = token20
                pos134 = pos + 1
            else:
                mode134 = False
                value153 = 4374577728
                pos134 = pos
        if mode134:
            mode124 = 1
            value142 = value143
            pos124 = pos134
        else:
            mode124 = mode134
            value142 = value153
            pos124 = pos134
    if mode124 or mode124 is None:
        mode123 = mode124
        value141 = value142
        pos123 = pos124
    else:
        pos = backtrack10
        mode135, value155, pos135 = yield (3, _parse_Ref1, pos)
        if mode135 or mode135 is None:
            mode123 = mode135
            value141 = value155
            pos123 = pos135
        else:
            pos = backtrack10
            mode136, value156, pos136 = yield (3, _parse_StringLiteral1, pos)
            if mode136 or mode136 is None:
                mode123 = mode136
                value141 = value156
                pos123 = pos136
            else:
                pos = backtrack10
                mode137, value157, pos137 = yield (3, _parse_RegexLiteral1, pos)
                if mode137 or mode137 is None:
                    mode123 = mode137
                    value141 = value157
                    pos123 = pos137
                else:
                    pos = backtrack10
                    mode138, value158, pos138 = yield (3, _parse_ListLiteral1, pos)
                    if mode138 or mode138 is None:
                        mode123 = mode138
                        value141 = value158
                        pos123 = pos138
                    else:
                        pos = backtrack10
                        mode123 = False
                        value141 = 4374295104
                        pos123 = pos
                        if pos123 < pos124:
                            mode123 = mode124
                            value141 = value142
                            pos123 = pos124
                        if pos123 < pos135:
                            mode123 = mode135
                            value141 = value155
                            pos123 = pos135
                        if pos123 < pos136:
                            mode123 = mode136
                            value141 = value156
                            pos123 = pos136
                        if pos123 < pos137:
                            mode123 = mode137
                            value141 = value157
                            pos123 = pos137
                        if pos123 < pos138:
                            mode123 = mode138
                            value141 = value158
                            pos123 = pos138
    yield (mode123, value141, pos123)
    

def _parse_KeywordArg1(text, pos):
    mode141, value161, pos141 = yield (3, _parse_Name1, pos)
    if not mode141:
        mode140 = mode141
        value160 = value161
        pos140 = pos141
    else:
        pos = pos141
        backtrack11 = pos
        value164 = '='
        if pos >= len(text):
            mode143 = False
            value163 = 4374579352
            pos143 = pos
        else:
            token21 = text[pos]
            if token21.value == value164:
                mode143 = 1
                value163 = token21
                pos143 = pos + 1
            else:
                mode143 = False
                value163 = 4374579352
                pos143 = pos
        if mode143 or mode143 is None:
            mode142 = mode143
            value162 = value163
            pos142 = pos143
        else:
            pos = backtrack11
            value166 = ':'
            if pos >= len(text):
                mode144 = False
                value165 = 4374579632
                pos144 = pos
            else:
                token22 = text[pos]
                if token22.value == value166:
                    mode144 = 1
                    value165 = token22
                    pos144 = pos + 1
                else:
                    mode144 = False
                    value165 = 4374579632
                    pos144 = pos
            if mode144 or mode144 is None:
                mode142 = mode144
                value162 = value165
                pos142 = pos144
            else:
                pos = backtrack11
                mode142 = False
                value162 = 4374295608
                pos142 = pos
                if pos142 < pos143:
                    mode142 = mode143
                    value162 = value163
                    pos142 = pos143
                if pos142 < pos144:
                    mode142 = mode144
                    value162 = value165
                    pos142 = pos144
        if mode142:
            mode140 = 1
            value160 = value161
            pos140 = pos142
        else:
            mode140 = mode142
            value160 = value162
            pos140 = pos142
    if not mode140:
        mode139 = mode140
        value159 = value160
        pos139 = pos140
    else:
        pos = pos140
        mode145, value167, pos145 = yield (3, _parse_Expr1, pos)
        if not mode145:
            mode139 = mode145
            value159 = value167
            pos139 = pos145
        else:
            pos = pos145
            mode139 = 1
            value159 = KeywordArg(value160, value167)
            pos139 = pos
    yield (mode139, value159, pos139)
    

def _parse_ArgList1(text, pos):
    value172 = '('
    if pos >= len(text):
        mode149 = False
        value171 = 4374580920
        pos149 = pos
    else:
        token23 = text[pos]
        if token23.value == value172:
            mode149 = 1
            value171 = token23
            pos149 = pos + 1
        else:
            mode149 = False
            value171 = 4374580920
            pos149 = pos
    if not mode149:
        mode148 = mode149
        value170 = value171
        pos148 = pos149
    else:
        pos = pos149
        buf6 = []
        pos150 = pos
        while True:
            while True:
                mode154, value177, pos154 = yield (3, _parse_Newline1, pos)
                if mode154:
                    pos = pos154
                else:
                    if mode154 is None:
                        mode153 = mode154
                        value176 = value177
                        pos153 = pos154
                    break
            mode153 = 1
            value176 = None
            pos153 = pos
            if not mode153:
                mode152 = mode153
                value175 = value176
                pos152 = pos153
            else:
                pos = pos153
                backtrack12 = pos
                mode156, value179, pos156 = yield (3, _parse_KeywordArg1, pos)
                if mode156 or mode156 is None:
                    mode155 = mode156
                    value178 = value179
                    pos155 = pos156
                else:
                    pos = backtrack12
                    mode157, value180, pos157 = yield (3, _parse_Expr1, pos)
                    if mode157 or mode157 is None:
                        mode155 = mode157
                        value178 = value180
                        pos155 = pos157
                    else:
                        pos = backtrack12
                        mode155 = False
                        value178 = 4374295944
                        pos155 = pos
                        if pos155 < pos156:
                            mode155 = mode156
                            value178 = value179
                            pos155 = pos156
                        if pos155 < pos157:
                            mode155 = mode157
                            value178 = value180
                            pos155 = pos157
                mode152 = mode155
                value175 = value178
                pos152 = pos155
            if not mode152:
                mode151 = mode152
                value174 = value175
                pos151 = pos152
            else:
                pos = pos152
                while True:
                    mode159, value182, pos159 = yield (3, _parse_Newline1, pos)
                    if mode159:
                        pos = pos159
                    else:
                        if mode159 is None:
                            mode158 = mode159
                            value181 = value182
                            pos158 = pos159
                        break
                mode158 = 1
                value181 = None
                pos158 = pos
                if mode158:
                    mode151 = 1
                    value174 = value175
                    pos151 = pos158
                else:
                    mode151 = mode158
                    value174 = value181
                    pos151 = pos158
            if not mode151:
                if mode151 is None:
                    mode150 = mode151
                    value173 = value174
                    pos150 = pos151
                break
            buf6.append(value174)
            pos = pos151
            mode160, value183, pos160 = yield (3, _parse_Comma1, pos)
            if not mode160:
                if mode160 is None:
                    mode150 = mode160
                    value173 = value183
                    pos150 = pos160
                break
            pos = pos160
        mode150 = 1
        value173 = buf6
        pos150 = pos
        mode148 = mode150
        value170 = value173
        pos148 = pos150
    if not mode148:
        mode147 = mode148
        value169 = value170
        pos147 = pos148
    else:
        pos = pos148
        value185 = ')'
        if pos >= len(text):
            mode161 = False
            value184 = 4374580640
            pos161 = pos
        else:
            token24 = text[pos]
            if token24.value == value185:
                mode161 = 1
                value184 = token24
                pos161 = pos + 1
            else:
                mode161 = False
                value184 = 4374580640
                pos161 = pos
        if mode161:
            mode147 = 1
            value169 = value170
            pos147 = pos161
        else:
            mode147 = mode161
            value169 = value184
            pos147 = pos161
    if not mode147:
        mode146 = mode147
        value168 = value169
        pos146 = pos147
    else:
        pos = pos147
        mode146 = 1
        value168 = ArgList(value169)
        pos146 = pos
    yield (mode146, value168, pos146)
    

def _parse_Expr1(text, pos):
    is_first1 = True
    while True:
        if not is_first1:
            while True:
                mode166, value190, pos166 = yield (3, _parse_Newline1, pos)
                if mode166:
                    pos = pos166
                else:
                    if mode166 is None:
                        mode165 = mode166
                        value189 = value190
                        pos165 = pos166
                    break
            mode165 = 1
            value189 = None
            pos165 = pos
            if not mode165:
                mode164 = mode165
                value188 = value189
                pos164 = pos165
            else:
                pos = pos165
                value192 = '|'
                if pos >= len(text):
                    mode167 = False
                    value191 = 4374565384
                    pos167 = pos
                else:
                    token25 = text[pos]
                    if token25.value == value192:
                        mode167 = 1
                        value191 = token25
                        pos167 = pos + 1
                    else:
                        mode167 = False
                        value191 = 4374565384
                        pos167 = pos
                mode164 = mode167
                value188 = value191
                pos164 = pos167
            if not mode164:
                mode163 = mode164
                value187 = value188
                pos163 = pos164
            else:
                pos = pos164
                while True:
                    mode169, value194, pos169 = yield (3, _parse_Newline1, pos)
                    if mode169:
                        pos = pos169
                    else:
                        if mode169 is None:
                            mode168 = mode169
                            value193 = value194
                            pos168 = pos169
                        break
                mode168 = 1
                value193 = None
                pos168 = pos
                if mode168:
                    mode163 = 1
                    value187 = value188
                    pos163 = pos168
                else:
                    mode163 = mode168
                    value187 = value193
                    pos163 = pos168
            if not mode163:
                if mode163 is None:
                    mode162 = mode163
                    value186 = value187
                    pos162 = pos163
                break
            pos = pos163
        is_first2 = True
        while True:
            if not is_first2:
                while True:
                    mode174, value199, pos174 = yield (3, _parse_Newline1, pos)
                    if mode174:
                        pos = pos174
                    else:
                        if mode174 is None:
                            mode173 = mode174
                            value198 = value199
                            pos173 = pos174
                        break
                mode173 = 1
                value198 = None
                pos173 = pos
                if not mode173:
                    mode172 = mode173
                    value197 = value198
                    pos172 = pos173
                else:
                    pos = pos173
                    backtrack13 = pos
                    value202 = '<<'
                    if pos >= len(text):
                        mode176 = False
                        value201 = 4374543104
                        pos176 = pos
                    else:
                        token26 = text[pos]
                        if token26.value == value202:
                            mode176 = 1
                            value201 = token26
                            pos176 = pos + 1
                        else:
                            mode176 = False
                            value201 = 4374543104
                            pos176 = pos
                    if mode176 or mode176 is None:
                        mode175 = mode176
                        value200 = value201
                        pos175 = pos176
                    else:
                        pos = backtrack13
                        value204 = '>>'
                        if pos >= len(text):
                            mode177 = False
                            value203 = 4374543328
                            pos177 = pos
                        else:
                            token27 = text[pos]
                            if token27.value == value204:
                                mode177 = 1
                                value203 = token27
                                pos177 = pos + 1
                            else:
                                mode177 = False
                                value203 = 4374543328
                                pos177 = pos
                        if mode177 or mode177 is None:
                            mode175 = mode177
                            value200 = value203
                            pos175 = pos177
                        else:
                            pos = backtrack13
                            value206 = '<<!'
                            if pos >= len(text):
                                mode178 = False
                                value205 = 4374544224
                                pos178 = pos
                            else:
                                token28 = text[pos]
                                if token28.value == value206:
                                    mode178 = 1
                                    value205 = token28
                                    pos178 = pos + 1
                                else:
                                    mode178 = False
                                    value205 = 4374544224
                                    pos178 = pos
                            if mode178 or mode178 is None:
                                mode175 = mode178
                                value200 = value205
                                pos175 = pos178
                            else:
                                pos = backtrack13
                                value208 = '!>>'
                                if pos >= len(text):
                                    mode179 = False
                                    value207 = 4374564992
                                    pos179 = pos
                                else:
                                    token29 = text[pos]
                                    if token29.value == value208:
                                        mode179 = 1
                                        value207 = token29
                                        pos179 = pos + 1
                                    else:
                                        mode179 = False
                                        value207 = 4374564992
                                        pos179 = pos
                                if mode179 or mode179 is None:
                                    mode175 = mode179
                                    value200 = value207
                                    pos175 = pos179
                                else:
                                    pos = backtrack13
                                    mode175 = False
                                    value200 = 4374297008
                                    pos175 = pos
                                    if pos175 < pos176:
                                        mode175 = mode176
                                        value200 = value201
                                        pos175 = pos176
                                    if pos175 < pos177:
                                        mode175 = mode177
                                        value200 = value203
                                        pos175 = pos177
                                    if pos175 < pos178:
                                        mode175 = mode178
                                        value200 = value205
                                        pos175 = pos178
                                    if pos175 < pos179:
                                        mode175 = mode179
                                        value200 = value207
                                        pos175 = pos179
                    mode172 = mode175
                    value197 = value200
                    pos172 = pos175
                if not mode172:
                    mode171 = mode172
                    value196 = value197
                    pos171 = pos172
                else:
                    pos = pos172
                    while True:
                        mode181, value210, pos181 = yield (3, _parse_Newline1, pos)
                        if mode181:
                            pos = pos181
                        else:
                            if mode181 is None:
                                mode180 = mode181
                                value209 = value210
                                pos180 = pos181
                            break
                    mode180 = 1
                    value209 = None
                    pos180 = pos
                    if mode180:
                        mode171 = 1
                        value196 = value197
                        pos171 = pos180
                    else:
                        mode171 = mode180
                        value196 = value209
                        pos171 = pos180
                if not mode171:
                    if mode171 is None:
                        mode170 = mode171
                        value195 = value196
                        pos170 = pos171
                    break
                pos = pos171
            is_first3 = True
            while True:
                if not is_first3:
                    while True:
                        mode186, value215, pos186 = yield (3, _parse_Newline1, pos)
                        if mode186:
                            pos = pos186
                        else:
                            if mode186 is None:
                                mode185 = mode186
                                value214 = value215
                                pos185 = pos186
                            break
                    mode185 = 1
                    value214 = None
                    pos185 = pos
                    if not mode185:
                        mode184 = mode185
                        value213 = value214
                        pos184 = pos185
                    else:
                        pos = pos185
                        backtrack14 = pos
                        value218 = '/'
                        if pos >= len(text):
                            mode188 = False
                            value217 = 4374541200
                            pos188 = pos
                        else:
                            token30 = text[pos]
                            if token30.value == value218:
                                mode188 = 1
                                value217 = token30
                                pos188 = pos + 1
                            else:
                                mode188 = False
                                value217 = 4374541200
                                pos188 = pos
                        if mode188 or mode188 is None:
                            mode187 = mode188
                            value216 = value217
                            pos187 = pos188
                        else:
                            pos = backtrack14
                            value220 = '//'
                            if pos >= len(text):
                                mode189 = False
                                value219 = 4374541424
                                pos189 = pos
                            else:
                                token31 = text[pos]
                                if token31.value == value220:
                                    mode189 = 1
                                    value219 = token31
                                    pos189 = pos + 1
                                else:
                                    mode189 = False
                                    value219 = 4374541424
                                    pos189 = pos
                            if mode189 or mode189 is None:
                                mode187 = mode189
                                value216 = value219
                                pos187 = pos189
                            else:
                                pos = backtrack14
                                mode187 = False
                                value216 = 4374296672
                                pos187 = pos
                                if pos187 < pos188:
                                    mode187 = mode188
                                    value216 = value217
                                    pos187 = pos188
                                if pos187 < pos189:
                                    mode187 = mode189
                                    value216 = value219
                                    pos187 = pos189
                        mode184 = mode187
                        value213 = value216
                        pos184 = pos187
                    if not mode184:
                        mode183 = mode184
                        value212 = value213
                        pos183 = pos184
                    else:
                        pos = pos184
                        while True:
                            mode191, value222, pos191 = yield (3, _parse_Newline1, pos)
                            if mode191:
                                pos = pos191
                            else:
                                if mode191 is None:
                                    mode190 = mode191
                                    value221 = value222
                                    pos190 = pos191
                                break
                        mode190 = 1
                        value221 = None
                        pos190 = pos
                        if mode190:
                            mode183 = 1
                            value212 = value213
                            pos183 = pos190
                        else:
                            mode183 = mode190
                            value212 = value221
                            pos183 = pos190
                    if not mode183:
                        if mode183 is None:
                            mode182 = mode183
                            value211 = value212
                            pos182 = pos183
                        break
                    pos = pos183
                mode194, value225, pos194 = yield (3, _parse_Atom1, pos)
                mode193 = mode194
                value224 = value225
                pos193 = pos194
                if mode194:
                    pos = pos194
                    while True:
                        mode195, value226, pos195 = yield (3, _parse_ArgList1, pos)
                        if not mode195:
                            if mode195 is None:
                                mode193 = mode195
                                value224 = value226
                                pos193 = pos195
                            else:
                                pos193 = pos
                            break
                        pos = pos195
                        value224 = Postfix(value224, value226)
                mode192 = mode193
                value223 = value224
                pos192 = pos193
                if mode193:
                    pos = pos193
                    while True:
                        backtrack15 = pos
                        value229 = '?'
                        if pos >= len(text):
                            mode197 = False
                            value228 = 4374563808
                            pos197 = pos
                        else:
                            token32 = text[pos]
                            if token32.value == value229:
                                mode197 = 1
                                value228 = token32
                                pos197 = pos + 1
                            else:
                                mode197 = False
                                value228 = 4374563808
                                pos197 = pos
                        if mode197 or mode197 is None:
                            mode196 = mode197
                            value227 = value228
                            pos196 = pos197
                        else:
                            pos = backtrack15
                            value231 = '*'
                            if pos >= len(text):
                                mode198 = False
                                value230 = 4374564256
                                pos198 = pos
                            else:
                                token33 = text[pos]
                                if token33.value == value231:
                                    mode198 = 1
                                    value230 = token33
                                    pos198 = pos + 1
                                else:
                                    mode198 = False
                                    value230 = 4374564256
                                    pos198 = pos
                            if mode198 or mode198 is None:
                                mode196 = mode198
                                value227 = value230
                                pos196 = pos198
                            else:
                                pos = backtrack15
                                value233 = '+'
                                if pos >= len(text):
                                    mode199 = False
                                    value232 = 4374563528
                                    pos199 = pos
                                else:
                                    token34 = text[pos]
                                    if token34.value == value233:
                                        mode199 = 1
                                        value232 = token34
                                        pos199 = pos + 1
                                    else:
                                        mode199 = False
                                        value232 = 4374563528
                                        pos199 = pos
                                if mode199 or mode199 is None:
                                    mode196 = mode199
                                    value227 = value232
                                    pos196 = pos199
                                else:
                                    pos = backtrack15
                                    value235 = '!'
                                    if pos >= len(text):
                                        mode200 = False
                                        value234 = 4374564816
                                        pos200 = pos
                                    else:
                                        token35 = text[pos]
                                        if token35.value == value235:
                                            mode200 = 1
                                            value234 = token35
                                            pos200 = pos + 1
                                        else:
                                            mode200 = False
                                            value234 = 4374564816
                                            pos200 = pos
                                    if mode200 or mode200 is None:
                                        mode196 = mode200
                                        value227 = value234
                                        pos196 = pos200
                                    else:
                                        pos = backtrack15
                                        mode196 = False
                                        value227 = 4374296504
                                        pos196 = pos
                                        if pos196 < pos197:
                                            mode196 = mode197
                                            value227 = value228
                                            pos196 = pos197
                                        if pos196 < pos198:
                                            mode196 = mode198
                                            value227 = value230
                                            pos196 = pos198
                                        if pos196 < pos199:
                                            mode196 = mode199
                                            value227 = value232
                                            pos196 = pos199
                                        if pos196 < pos200:
                                            mode196 = mode200
                                            value227 = value234
                                            pos196 = pos200
                        if not mode196:
                            if mode196 is None:
                                mode192 = mode196
                                value223 = value227
                                pos192 = pos196
                            else:
                                pos192 = pos
                            break
                        pos = pos196
                        value223 = Postfix(value223, value227)
                if not mode192:
                    if is_first3 or mode192 is None:
                        mode182 = mode192
                        value211 = value223
                        pos182 = pos192
                    break
                pos = pos182 = pos192
                if is_first3:
                    is_first3 = False
                    value211 = value223
                    mode182 = 1
                else:
                    value211 = Infix(value211, value212, value223)
            if not mode182:
                if is_first2 or mode182 is None:
                    mode170 = mode182
                    value195 = value211
                    pos170 = pos182
                break
            pos = pos170 = pos182
            if is_first2:
                is_first2 = False
                value195 = value211
                mode170 = 1
            else:
                value195 = Infix(value195, value196, value211)
        if not mode170:
            if is_first1 or mode170 is None:
                mode162 = mode170
                value186 = value195
                pos162 = pos170
            break
        pos = pos162 = pos170
        if is_first1:
            is_first1 = False
            value186 = value195
            mode162 = 1
        else:
            value186 = Infix(value186, value187, value195)
    yield (mode162, value186, pos162)
    

def _parse_start1(text, pos):
    while True:
        mode203, value238, pos203 = yield (3, _parse_Newline1, pos)
        if mode203:
            pos = pos203
        else:
            if mode203 is None:
                mode202 = mode203
                value237 = value238
                pos202 = pos203
            break
    mode202 = 1
    value237 = None
    pos202 = pos
    if not mode202:
        mode201 = mode202
        value236 = value237
        pos201 = pos202
    else:
        pos = pos202
        buf7 = []
        pos204 = pos
        while True:
            mode205, value240, pos205 = yield (3, _parse_Def1, pos)
            if not mode205:
                if mode205 is None:
                    mode204 = mode205
                    value239 = value240
                    pos204 = pos205
                break
            buf7.append(value240)
            pos = pos205
            mode206, value241, pos206 = yield (3, _parse_Sep1, pos)
            if not mode206:
                if mode206 is None:
                    mode204 = mode206
                    value239 = value241
                    pos204 = pos206
                break
            pos = pos206
        mode204 = 1
        value239 = buf7
        pos204 = pos
        mode201 = mode204
        value236 = value239
        pos201 = pos204
    yield (mode201, value236, pos201)
    

def _parse_Space1(text, pos):
    if pos < len(text):
        value243 = text[pos]
        if isinstance(value243, Space):
            mode207 = 2
            value242 = None
            pos207 = pos + 1
        else:
            mode207 = False
            value242 = 4367883960
            pos207 = pos
    else:
        mode207 = False
        value242 = 4367883960
        pos207 = pos
    yield (mode207, value242, pos207)
    

def _parse_Word1(text, pos):
    if pos < len(text):
        value245 = text[pos]
        if isinstance(value245, Word):
            mode208 = 1
            value244 = value245
            pos208 = pos + 1
        else:
            mode208 = False
            value244 = 4374565552
            pos208 = pos
    else:
        mode208 = False
        value244 = 4374565552
        pos208 = pos
    yield (mode208, value244, pos208)
    

def _parse_Symbol1(text, pos):
    if pos < len(text):
        value247 = text[pos]
        if isinstance(value247, Symbol):
            mode209 = 1
            value246 = value247
            pos209 = pos + 1
        else:
            mode209 = False
            value246 = 4374565496
            pos209 = pos
    else:
        mode209 = False
        value246 = 4374565496
        pos209 = pos
    yield (mode209, value246, pos209)
    

def _parse_StringLiteral1(text, pos):
    if pos < len(text):
        value249 = text[pos]
        if isinstance(value249, StringLiteral):
            mode210 = 1
            value248 = value249
            pos210 = pos + 1
        else:
            mode210 = False
            value248 = 4374565720
            pos210 = pos
    else:
        mode210 = False
        value248 = 4374565720
        pos210 = pos
    yield (mode210, value248, pos210)
    

def _parse_RegexLiteral1(text, pos):
    if pos < len(text):
        value251 = text[pos]
        if isinstance(value251, RegexLiteral):
            mode211 = 1
            value250 = value251
            pos211 = pos + 1
        else:
            mode211 = False
            value250 = 4374565664
            pos211 = pos
    else:
        mode211 = False
        value250 = 4374565664
        pos211 = pos
    yield (mode211, value250, pos211)
    

def _parse_Newline1(text, pos):
    if pos < len(text):
        value253 = text[pos]
        if isinstance(value253, Newline):
            mode212 = 1
            value252 = value253
            pos212 = pos + 1
        else:
            mode212 = False
            value252 = 4374565832
            pos212 = pos
    else:
        mode212 = False
        value252 = 4374565832
        pos212 = pos
    yield (mode212, value252, pos212)
    

def _parse_Comment1(text, pos):
    if pos < len(text):
        value255 = text[pos]
        if isinstance(value255, Comment):
            mode213 = 2
            value254 = None
            pos213 = pos + 1
        else:
            mode213 = False
            value254 = 4374565776
            pos213 = pos
    else:
        mode213 = False
        value254 = 4374565776
        pos213 = pos
    yield (mode213, value254, pos213)
    

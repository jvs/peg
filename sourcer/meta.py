# Generated by ../generate_metasyntax.py
import re

class Node:
    _fields = ()

    def __eq__(self, other):
        if not isinstance(other, self.__class__):
            return False
        for field in self._fields:
            if getattr(self, field) != getattr(other, field):
                return False
        return True

    def _replace(self, **kw):
        for field in self._fields:
            if field not in kw:
                kw[field] = getattr(self, field)
        return self.__class__(**kw)


class Token(Node):
    _fields = ('value',)

    def __init__(self, value):
        self.value = value

    def __repr__(self):
        return f'{self.__class__.__name__}({self.value!r})'

class Space(Token): pass
pattern1 = re.compile('[ \\t]+')
class Word(Token): pass
pattern2 = re.compile('[_a-zA-Z][_a-zA-Z0-9]*')
class Symbol(Token): pass
pattern3 = re.compile('<<\\!|\\!>>|<<|>>|=>|\\/\\/|[=;,:\\|\\/\\*\\+\\?\\!\\(\\)\\[\\]\\{\\}]')
class StringLiteral(Token): pass
pattern4 = re.compile('("([^"\\\\]|\\\\.)*")')
pattern5 = re.compile("('([^'\\\\]|\\\\.)*')")
pattern6 = re.compile('("""([^\\\\]|\\\\.)*?""")')
pattern7 = re.compile("('\\''([^\\\\]|\\\\.)*?'\\'')")
class RegexLiteral(Token): pass
pattern8 = re.compile('\\`([^\\`\\\\]|\\\\.)*\\`')
class Newline(Token): pass
pattern9 = re.compile('[\\r\\n][\\s]*')
class Comment(Token): pass
pattern10 = re.compile('#[^\\r\\n]*')

class RuleDef(Node):
    _fields = ('name', 'expr')

    def __init__(self, name, expr):
        self.name = name
        self.expr = expr

    def __repr__(self):
        return f'RuleDef(name={self.name!r}, expr={self.expr!r})'


class ClassDef(Node):
    _fields = ('name', 'fields')

    def __init__(self, name, fields):
        self.name = name
        self.fields = fields

    def __repr__(self):
        return f'ClassDef(name={self.name!r}, fields={self.fields!r})'


class TokenDef(Node):
    _fields = ('is_ignored', 'child')

    def __init__(self, is_ignored, child):
        self.is_ignored = is_ignored
        self.child = child

    def __repr__(self):
        return f'TokenDef(is_ignored={self.is_ignored!r}, child={self.child!r})'


class TemplateDef(Node):
    _fields = ('name', 'params', 'expr')

    def __init__(self, name, params, expr):
        self.name = name
        self.params = params
        self.expr = expr

    def __repr__(self):
        return f'TemplateDef(name={self.name!r}, params={self.params!r}, expr={self.expr!r})'


class Ref(Node):
    _fields = ('name',)

    def __init__(self, name):
        self.name = name

    def __repr__(self):
        return f'Ref(name={self.name!r})'


class ListLiteral(Node):
    _fields = ('elements',)

    def __init__(self, elements):
        self.elements = elements

    def __repr__(self):
        return f'ListLiteral(elements={self.elements!r})'


class KeywordArg(Node):
    _fields = ('name', 'expr')

    def __init__(self, name, expr):
        self.name = name
        self.expr = expr

    def __repr__(self):
        return f'KeywordArg(name={self.name!r}, expr={self.expr!r})'


class ArgList(Node):
    _fields = ('args',)

    def __init__(self, args):
        self.args = args

    def __repr__(self):
        return f'ArgList(args={self.args!r})'

pattern11 = re.compile('[ \\t]+')
pattern12 = re.compile('[_a-zA-Z][_a-zA-Z0-9]*')
pattern13 = re.compile('<<\\!|\\!>>|<<|>>|=>|\\/\\/|[=;,:\\|\\/\\*\\+\\?\\!\\(\\)\\[\\]\\{\\}]')
pattern14 = re.compile('("([^"\\\\]|\\\\.)*")')
pattern15 = re.compile("('([^'\\\\]|\\\\.)*')")
pattern16 = re.compile('("""([^\\\\]|\\\\.)*?""")')
pattern17 = re.compile("('\\''([^\\\\]|\\\\.)*?'\\'')")
pattern18 = re.compile('\\`([^\\`\\\\]|\\\\.)*\\`')
pattern19 = re.compile('[\\r\\n][\\s]*')
pattern20 = re.compile('#[^\\r\\n]*')

class ParseError(Exception):
    def __init__(self, mode, expr_code, pos):
        self.is_error = (mode is None)
        self.expr_code = expr_code
        self.pos = pos



class Infix(Node):
    _fields = ('left', 'operator', 'right')

    def __init__(self, left, operator, right):
        self.left = left
        self.operator = operator
        self.right = right

    def __repr__(self):
        return f'Infix({self.left!r}, {self.operator!r}, {self.right!r})'


class Postfix(Node):
    _fields = ('left', 'operator')

    def __init__(self, left, operator):
        self.left = left
        self.operator = operator

    def __repr__(self):
        return f'Postfix({self.left!r}, {self.operator!r})'


class Prefix(Node):
    _fields = ('operator', 'right')

    def __init__(self, operator, right):
        self.operator = operator
        self.right = right

    def __repr__(self):
        return f'Prefix({self.operator!r}, {self.right!r})'


def parse(text, pos=0):
    text = _run(text, pos, _tokenize)
    pos = 0
    return _run(text, pos, _parse_start1)


def _run(text, pos, start):
    memo = {}
    result = None

    key = (3, start, pos)
    gtor = start(text, pos)
    stack = [(key, gtor)]

    while stack:
        key, gtor = stack[-1]
        result = gtor.send(result)

        if result[0] != 3:
            stack.pop()
            memo[key] = result
        elif result in memo:
            result = memo[result]
        else:
            gtor = result[1](text, result[2])
            stack.append((result, gtor))
            result = None

    if result[0]:
        return result[1]
    else:
        raise ParseError(*result)


def visit(node):
    if isinstance(node, list):
        yield from node

    elif isinstance(node, Node):
        yield node

        if hasattr(node, '_fields'):
            for field in node._fields:
                yield from visit(getattr(node, field))


def transform(node, *callbacks):
    if not callbacks:
        return node

    if len(callbacks) == 1:
        callback = callbacks[0]
    else:
        def callback(node):
            for f in callbacks:
                node = f(node)
            return node

    return _transform(node, callback)


def _transform(node, callback):
    if isinstance(node, list):
        return [_transform(x, callback) for x in node]

    if not isinstance(node, Node):
        return node

    updates = {}
    for field in node._fields:
        was = getattr(node, field)
        now = _transform(was, callback)
        if was is not now:
            updates[field] = now

    if updates:
        node = node._replace(**updates)

    return callback(node)


def _tokenize(text, pos):
    buf1 = []
    while True:
        match1 = pattern1.match(text, pos)
        if match1:
            mode4 = 1
            value4 = match1.group(0)
            pos4 = match1.end()
        else:
            mode4 = False
            value4 = 4337053480
            pos4 = pos
        if mode4:
            mode3 = 2
            value3 = None
            pos3 = pos4
        else:
            mode3 = mode4
            value3 = value4
            pos3 = pos4
        if mode3 or mode3 is None:
            mode2 = mode3
            value2 = value3
            pos2 = pos3
        else:
            match2 = pattern2.match(text, pos)
            if match2:
                mode6 = 1
                value6 = match2.group(0)
                pos6 = match2.end()
            else:
                mode6 = False
                value6 = 4337053592
                pos6 = pos
            if mode6:
                mode5 = 1
                value5 = Word(value6)
                pos5 = pos6
            else:
                mode5 = mode6
                value5 = value6
                pos5 = pos6
            if mode5 or mode5 is None:
                mode2 = mode5
                value2 = value5
                pos2 = pos5
            else:
                match3 = pattern3.match(text, pos)
                if match3:
                    mode8 = 1
                    value8 = match3.group(0)
                    pos8 = match3.end()
                else:
                    mode8 = False
                    value8 = 4337102920
                    pos8 = pos
                if mode8:
                    mode7 = 1
                    value7 = Symbol(value8)
                    pos7 = pos8
                else:
                    mode7 = mode8
                    value7 = value8
                    pos7 = pos8
                if mode7 or mode7 is None:
                    mode2 = mode7
                    value2 = value7
                    pos2 = pos7
                else:
                    match4 = pattern4.match(text, pos)
                    if match4:
                        mode11 = 1
                        value11 = match4.group(0)
                        pos11 = match4.end()
                    else:
                        mode11 = False
                        value11 = 4337103368
                        pos11 = pos
                    if mode11 or mode11 is None:
                        mode10 = mode11
                        value10 = value11
                        pos10 = pos11
                    else:
                        match5 = pattern5.match(text, pos)
                        if match5:
                            mode12 = 1
                            value12 = match5.group(0)
                            pos12 = match5.end()
                        else:
                            mode12 = False
                            value12 = 4337103592
                            pos12 = pos
                        if mode12 or mode12 is None:
                            mode10 = mode12
                            value10 = value12
                            pos10 = pos12
                        else:
                            match6 = pattern6.match(text, pos)
                            if match6:
                                mode13 = 1
                                value13 = match6.group(0)
                                pos13 = match6.end()
                            else:
                                mode13 = False
                                value13 = 4337103424
                                pos13 = pos
                            if mode13 or mode13 is None:
                                mode10 = mode13
                                value10 = value13
                                pos10 = pos13
                            else:
                                match7 = pattern7.match(text, pos)
                                if match7:
                                    mode14 = 1
                                    value14 = match7.group(0)
                                    pos14 = match7.end()
                                else:
                                    mode14 = False
                                    value14 = 4337103760
                                    pos14 = pos
                                if mode14 or mode14 is None:
                                    mode10 = mode14
                                    value10 = value14
                                    pos10 = pos14
                                else:
                                    mode10 = False
                                    value10 = 4337174232
                                    pos10 = pos
                                    if pos10 < pos11:
                                        mode10 = mode11
                                        value10 = value11
                                        pos10 = pos11
                                    if pos10 < pos12:
                                        mode10 = mode12
                                        value10 = value12
                                        pos10 = pos12
                                    if pos10 < pos13:
                                        mode10 = mode13
                                        value10 = value13
                                        pos10 = pos13
                                    if pos10 < pos14:
                                        mode10 = mode14
                                        value10 = value14
                                        pos10 = pos14
                    if mode10:
                        mode9 = 1
                        value9 = StringLiteral(value10)
                        pos9 = pos10
                    else:
                        mode9 = mode10
                        value9 = value10
                        pos9 = pos10
                    if mode9 or mode9 is None:
                        mode2 = mode9
                        value2 = value9
                        pos2 = pos9
                    else:
                        match8 = pattern8.match(text, pos)
                        if match8:
                            mode16 = 1
                            value16 = match8.group(0)
                            pos16 = match8.end()
                        else:
                            mode16 = False
                            value16 = 4337103312
                            pos16 = pos
                        if mode16:
                            mode15 = 1
                            value15 = RegexLiteral(value16)
                            pos15 = pos16
                        else:
                            mode15 = mode16
                            value15 = value16
                            pos15 = pos16
                        if mode15 or mode15 is None:
                            mode2 = mode15
                            value2 = value15
                            pos2 = pos15
                        else:
                            match9 = pattern9.match(text, pos)
                            if match9:
                                mode18 = 1
                                value18 = match9.group(0)
                                pos18 = match9.end()
                            else:
                                mode18 = False
                                value18 = 4337103816
                                pos18 = pos
                            if mode18:
                                mode17 = 1
                                value17 = Newline(value18)
                                pos17 = pos18
                            else:
                                mode17 = mode18
                                value17 = value18
                                pos17 = pos18
                            if mode17 or mode17 is None:
                                mode2 = mode17
                                value2 = value17
                                pos2 = pos17
                            else:
                                match10 = pattern10.match(text, pos)
                                if match10:
                                    mode20 = 1
                                    value20 = match10.group(0)
                                    pos20 = match10.end()
                                else:
                                    mode20 = False
                                    value20 = 4337104040
                                    pos20 = pos
                                if mode20:
                                    mode19 = 2
                                    value19 = None
                                    pos19 = pos20
                                else:
                                    mode19 = mode20
                                    value19 = value20
                                    pos19 = pos20
                                if mode19 or mode19 is None:
                                    mode2 = mode19
                                    value2 = value19
                                    pos2 = pos19
                                else:
                                    mode2 = False
                                    value2 = 4337053648
                                    pos2 = pos
                                    if pos2 < pos3:
                                        mode2 = mode3
                                        value2 = value3
                                        pos2 = pos3
                                    if pos2 < pos5:
                                        mode2 = mode5
                                        value2 = value5
                                        pos2 = pos5
                                    if pos2 < pos7:
                                        mode2 = mode7
                                        value2 = value7
                                        pos2 = pos7
                                    if pos2 < pos9:
                                        mode2 = mode9
                                        value2 = value9
                                        pos2 = pos9
                                    if pos2 < pos15:
                                        mode2 = mode15
                                        value2 = value15
                                        pos2 = pos15
                                    if pos2 < pos17:
                                        mode2 = mode17
                                        value2 = value17
                                        pos2 = pos17
                                    if pos2 < pos19:
                                        mode2 = mode19
                                        value2 = value19
                                        pos2 = pos19
        if not mode2:
            if mode2 is None:
                mode1 = mode2
                value1 = value2
                pos1 = pos2
            break
        if mode2 != 2:
            buf1.append(value2)
        pos = pos2
    mode1 = 1
    value1 = buf1
    pos1 = pos
    yield (mode1, value1, pos1)
    

def tokenize(text, pos=0):
    return _run(text, pos, _tokenize)


def _parse_Sep1(text, pos):
    buf2 = []
    while True:
        mode23, value23, pos23 = yield (3, _parse_Newline1, pos)
        if mode23 or mode23 is None:
            mode22 = mode23
            value22 = value23
            pos22 = pos23
        else:
            value25 = ';'
            if pos >= len(text):
                mode24 = False
                value24 = 4337104936
                pos24 = pos
            else:
                value26 = text[pos]
                if value26.value == ';':
                    mode24 = 1
                    value24 = value26
                    pos24 = pos + 1
                else:
                    mode24 = False
                    value24 = 4337104936
                    pos24 = pos
            if mode24 or mode24 is None:
                mode22 = mode24
                value22 = value24
                pos22 = pos24
            else:
                mode22 = False
                value22 = 4337174624
                pos22 = pos
                if pos22 < pos23:
                    mode22 = mode23
                    value22 = value23
                    pos22 = pos23
                if pos22 < pos24:
                    mode22 = mode24
                    value22 = value24
                    pos22 = pos24
        if not mode22:
            if mode22 is None:
                mode21 = mode22
                value21 = value22
                pos21 = pos22
            break
        if mode22 != 2:
            buf2.append(value22)
        pos = pos22
    if not buf2:
        mode21 = False
        value21 = 4337174792
        pos21 = pos
    else:
        mode21 = 1
        value21 = buf2
        pos21 = pos
    yield (mode21, value21, pos21)
    

def _parse_Name1(text, pos):
    mode25, value27, pos25 = yield (3, _parse_Word1, pos)
    yield (mode25, value27, pos25)
    

def _parse_Comma1(text, pos):
    while True:
        mode29, value31, pos29 = yield (3, _parse_Newline1, pos)
        if mode29:
            pos = pos29
        else:
            if mode29 is None:
                mode28 = mode29
                value30 = value31
                pos28 = pos29
            break
    mode28 = 1
    value30 = None
    pos28 = pos
    if not mode28:
        mode27 = mode28
        value29 = value30
        pos27 = pos28
    else:
        pos = pos28
        value33 = ','
        if pos >= len(text):
            mode30 = False
            value32 = 4337105944
            pos30 = pos
        else:
            value34 = text[pos]
            if value34.value == ',':
                mode30 = 1
                value32 = value34
                pos30 = pos + 1
            else:
                mode30 = False
                value32 = 4337105944
                pos30 = pos
        mode27 = mode30
        value29 = value32
        pos27 = pos30
    if not mode27:
        mode26 = mode27
        value28 = value29
        pos26 = pos27
    else:
        pos = pos27
        while True:
            mode32, value36, pos32 = yield (3, _parse_Newline1, pos)
            if mode32:
                pos = pos32
            else:
                if mode32 is None:
                    mode31 = mode32
                    value35 = value36
                    pos31 = pos32
                break
        mode31 = 1
        value35 = None
        pos31 = pos
        if mode31:
            mode26 = 1
            value28 = value29
            pos26 = pos31
        else:
            mode26 = mode31
            value28 = value35
            pos26 = pos31
    yield (mode26, value28, pos26)
    

def _parse_RuleDef1(text, pos):
    mode35, value39, pos35 = yield (3, _parse_Name1, pos)
    if not mode35:
        mode34 = mode35
        value38 = value39
        pos34 = pos35
    else:
        pos = pos35
        value42 = '='
        if pos >= len(text):
            mode37 = False
            value41 = 4337106672
            pos37 = pos
        else:
            value43 = text[pos]
            if value43.value == '=':
                mode37 = 1
                value41 = value43
                pos37 = pos + 1
            else:
                mode37 = False
                value41 = 4337106672
                pos37 = pos
        if mode37 or mode37 is None:
            mode36 = mode37
            value40 = value41
            pos36 = pos37
        else:
            value45 = ':'
            if pos >= len(text):
                mode38 = False
                value44 = 4337106504
                pos38 = pos
            else:
                value46 = text[pos]
                if value46.value == ':':
                    mode38 = 1
                    value44 = value46
                    pos38 = pos + 1
                else:
                    mode38 = False
                    value44 = 4337106504
                    pos38 = pos
            if mode38 or mode38 is None:
                mode36 = mode38
                value40 = value44
                pos36 = pos38
            else:
                mode36 = False
                value40 = 4337629560
                pos36 = pos
                if pos36 < pos37:
                    mode36 = mode37
                    value40 = value41
                    pos36 = pos37
                if pos36 < pos38:
                    mode36 = mode38
                    value40 = value44
                    pos36 = pos38
        if mode36:
            mode34 = 1
            value38 = value39
            pos34 = pos36
        else:
            mode34 = mode36
            value38 = value40
            pos34 = pos36
    if not mode34:
        mode33 = mode34
        value37 = value38
        pos33 = pos34
    else:
        pos = pos34
        mode39, value47, pos39 = yield (3, _parse_Expr1, pos)
        if not mode39:
            mode33 = mode39
            value37 = value47
            pos33 = pos39
        else:
            pos = pos39
            mode33 = 1
            value37 = RuleDef(value38, value47)
            pos33 = pos
    yield (mode33, value37, pos33)
    

def _parse_ClassDef1(text, pos):
    value51 = 'class'
    if pos >= len(text):
        mode42 = False
        value50 = 4337115824
        pos42 = pos
    else:
        value52 = text[pos]
        if value52.value == 'class':
            mode42 = 1
            value50 = value52
            pos42 = pos + 1
        else:
            mode42 = False
            value50 = 4337115824
            pos42 = pos
    if not mode42:
        mode41 = mode42
        value49 = value50
        pos41 = pos42
    else:
        pos = pos42
        mode43, value53, pos43 = yield (3, _parse_Name1, pos)
        mode41 = mode43
        value49 = value53
        pos41 = pos43
    if not mode41:
        mode40 = mode41
        value48 = value49
        pos40 = pos41
    else:
        pos = pos41
        while True:
            mode49, value59, pos49 = yield (3, _parse_Newline1, pos)
            if mode49:
                pos = pos49
            else:
                if mode49 is None:
                    mode48 = mode49
                    value58 = value59
                    pos48 = pos49
                break
        mode48 = 1
        value58 = None
        pos48 = pos
        if not mode48:
            mode47 = mode48
            value57 = value58
            pos47 = pos48
        else:
            pos = pos48
            value61 = '{'
            if pos >= len(text):
                mode50 = False
                value60 = 4337117616
                pos50 = pos
            else:
                value62 = text[pos]
                if value62.value == '{':
                    mode50 = 1
                    value60 = value62
                    pos50 = pos + 1
                else:
                    mode50 = False
                    value60 = 4337117616
                    pos50 = pos
            mode47 = mode50
            value57 = value60
            pos47 = pos50
        if not mode47:
            mode46 = mode47
            value56 = value57
            pos46 = pos47
        else:
            pos = pos47
            while True:
                mode52, value64, pos52 = yield (3, _parse_Newline1, pos)
                if mode52:
                    pos = pos52
                else:
                    if mode52 is None:
                        mode51 = mode52
                        value63 = value64
                        pos51 = pos52
                    break
            mode51 = 1
            value63 = None
            pos51 = pos
            if mode51:
                mode46 = 1
                value56 = value57
                pos46 = pos51
            else:
                mode46 = mode51
                value56 = value63
                pos46 = pos51
        if not mode46:
            mode45 = mode46
            value55 = value56
            pos45 = pos46
        else:
            pos = pos46
            buf3 = []
            pos53 = pos
            while True:
                mode54, value66, pos54 = yield (3, _parse_RuleDef1, pos)
                if not mode54:
                    if mode54 is None:
                        mode53 = mode54
                        value65 = value66
                        pos53 = pos54
                    break
                buf3.append(value66)
                pos = pos54
                mode55, value67, pos55 = yield (3, _parse_Sep1, pos)
                if not mode55:
                    if mode55 is None:
                        mode53 = mode55
                        value65 = value67
                        pos53 = pos55
                    break
                pos = pos55
            mode53 = 1
            value65 = buf3
            pos53 = pos
            mode45 = mode53
            value55 = value65
            pos45 = pos53
        if not mode45:
            mode44 = mode45
            value54 = value55
            pos44 = pos45
        else:
            pos = pos45
            value69 = '}'
            if pos >= len(text):
                mode56 = False
                value68 = 4337117840
                pos56 = pos
            else:
                value70 = text[pos]
                if value70.value == '}':
                    mode56 = 1
                    value68 = value70
                    pos56 = pos + 1
                else:
                    mode56 = False
                    value68 = 4337117840
                    pos56 = pos
            if mode56:
                mode44 = 1
                value54 = value55
                pos44 = pos56
            else:
                mode44 = mode56
                value54 = value68
                pos44 = pos56
        if not mode44:
            mode40 = mode44
            value48 = value54
            pos40 = pos44
        else:
            pos = pos44
            mode40 = 1
            value48 = ClassDef(value49, value54)
            pos40 = pos
    yield (mode40, value48, pos40)
    

def _parse_TokenDef1(text, pos):
    value75 = 'ignore'
    if pos >= len(text):
        mode60 = False
        value74 = 4337118400
        pos60 = pos
    else:
        value76 = text[pos]
        if value76.value == 'ignore':
            mode60 = 1
            value74 = value76
            pos60 = pos + 1
        else:
            mode60 = False
            value74 = 4337118400
            pos60 = pos
    if mode60 or mode60 is None:
        mode59 = mode60
        value73 = value74
        pos59 = pos60
    else:
        value78 = 'ignored'
        if pos >= len(text):
            mode61 = False
            value77 = 4337123400
            pos61 = pos
        else:
            value79 = text[pos]
            if value79.value == 'ignored':
                mode61 = 1
                value77 = value79
                pos61 = pos + 1
            else:
                mode61 = False
                value77 = 4337123400
                pos61 = pos
        if mode61 or mode61 is None:
            mode59 = mode61
            value73 = value77
            pos59 = pos61
        else:
            mode59 = False
            value73 = 4337630456
            pos59 = pos
            if pos59 < pos60:
                mode59 = mode60
                value73 = value74
                pos59 = pos60
            if pos59 < pos61:
                mode59 = mode61
                value73 = value77
                pos59 = pos61
    if mode59 or mode59 is None:
        mode58 = mode59
        value72 = value73
        pos58 = pos59
    else:
        mode58 = 1
        value72 = None
        pos58 = pos
    if not mode58:
        mode57 = mode58
        value71 = value72
        pos57 = pos58
    else:
        pos = pos58
        value82 = 'token'
        if pos >= len(text):
            mode63 = False
            value81 = 4337123792
            pos63 = pos
        else:
            value83 = text[pos]
            if value83.value == 'token':
                mode63 = 1
                value81 = value83
                pos63 = pos + 1
            else:
                mode63 = False
                value81 = 4337123792
                pos63 = pos
        if not mode63:
            mode62 = mode63
            value80 = value81
            pos62 = pos63
        else:
            pos = pos63
            mode65, value85, pos65 = yield (3, _parse_ClassDef1, pos)
            if mode65 or mode65 is None:
                mode64 = mode65
                value84 = value85
                pos64 = pos65
            else:
                mode66, value86, pos66 = yield (3, _parse_RuleDef1, pos)
                if mode66 or mode66 is None:
                    mode64 = mode66
                    value84 = value86
                    pos64 = pos66
                else:
                    mode64 = False
                    value84 = 4337630624
                    pos64 = pos
                    if pos64 < pos65:
                        mode64 = mode65
                        value84 = value85
                        pos64 = pos65
                    if pos64 < pos66:
                        mode64 = mode66
                        value84 = value86
                        pos64 = pos66
            mode62 = mode64
            value80 = value84
            pos62 = pos64
        if not mode62:
            mode57 = mode62
            value71 = value80
            pos57 = pos62
        else:
            pos = pos62
            mode57 = 1
            value71 = TokenDef(value72, value80)
            pos57 = pos
    yield (mode57, value71, pos57)
    

def _parse_TemplateDef1(text, pos):
    value90 = 'template'
    if pos >= len(text):
        mode69 = False
        value89 = 4337124800
        pos69 = pos
    else:
        value91 = text[pos]
        if value91.value == 'template':
            mode69 = 1
            value89 = value91
            pos69 = pos + 1
        else:
            mode69 = False
            value89 = 4337124800
            pos69 = pos
    if not mode69:
        mode68 = mode69
        value88 = value89
        pos68 = pos69
    else:
        pos = pos69
        mode70, value92, pos70 = yield (3, _parse_Name1, pos)
        mode68 = mode70
        value88 = value92
        pos68 = pos70
    if not mode68:
        mode67 = mode68
        value87 = value88
        pos67 = pos68
    else:
        pos = pos68
        while True:
            mode76, value98, pos76 = yield (3, _parse_Newline1, pos)
            if mode76:
                pos = pos76
            else:
                if mode76 is None:
                    mode75 = mode76
                    value97 = value98
                    pos75 = pos76
                break
        mode75 = 1
        value97 = None
        pos75 = pos
        if not mode75:
            mode74 = mode75
            value96 = value97
            pos74 = pos75
        else:
            pos = pos75
            value100 = '('
            if pos >= len(text):
                mode77 = False
                value99 = 4337126368
                pos77 = pos
            else:
                value101 = text[pos]
                if value101.value == '(':
                    mode77 = 1
                    value99 = value101
                    pos77 = pos + 1
                else:
                    mode77 = False
                    value99 = 4337126368
                    pos77 = pos
            mode74 = mode77
            value96 = value99
            pos74 = pos77
        if not mode74:
            mode73 = mode74
            value95 = value96
            pos73 = pos74
        else:
            pos = pos74
            while True:
                mode79, value103, pos79 = yield (3, _parse_Newline1, pos)
                if mode79:
                    pos = pos79
                else:
                    if mode79 is None:
                        mode78 = mode79
                        value102 = value103
                        pos78 = pos79
                    break
            mode78 = 1
            value102 = None
            pos78 = pos
            if mode78:
                mode73 = 1
                value95 = value96
                pos73 = pos78
            else:
                mode73 = mode78
                value95 = value102
                pos73 = pos78
        if not mode73:
            mode72 = mode73
            value94 = value95
            pos72 = pos73
        else:
            pos = pos73
            buf4 = []
            pos80 = pos
            while True:
                while True:
                    mode84, value108, pos84 = yield (3, _parse_Newline1, pos)
                    if mode84:
                        pos = pos84
                    else:
                        if mode84 is None:
                            mode83 = mode84
                            value107 = value108
                            pos83 = pos84
                        break
                mode83 = 1
                value107 = None
                pos83 = pos
                if not mode83:
                    mode82 = mode83
                    value106 = value107
                    pos82 = pos83
                else:
                    pos = pos83
                    mode85, value109, pos85 = yield (3, _parse_Name1, pos)
                    mode82 = mode85
                    value106 = value109
                    pos82 = pos85
                if not mode82:
                    mode81 = mode82
                    value105 = value106
                    pos81 = pos82
                else:
                    pos = pos82
                    while True:
                        mode87, value111, pos87 = yield (3, _parse_Newline1, pos)
                        if mode87:
                            pos = pos87
                        else:
                            if mode87 is None:
                                mode86 = mode87
                                value110 = value111
                                pos86 = pos87
                            break
                    mode86 = 1
                    value110 = None
                    pos86 = pos
                    if mode86:
                        mode81 = 1
                        value105 = value106
                        pos81 = pos86
                    else:
                        mode81 = mode86
                        value105 = value110
                        pos81 = pos86
                if not mode81:
                    if mode81 is None:
                        mode80 = mode81
                        value104 = value105
                        pos80 = pos81
                    break
                buf4.append(value105)
                pos = pos81
                mode88, value112, pos88 = yield (3, _parse_Comma1, pos)
                if not mode88:
                    if mode88 is None:
                        mode80 = mode88
                        value104 = value112
                        pos80 = pos88
                    break
                pos = pos88
            mode80 = 1
            value104 = buf4
            pos80 = pos
            mode72 = mode80
            value94 = value104
            pos72 = pos80
        if not mode72:
            mode71 = mode72
            value93 = value94
            pos71 = pos72
        else:
            pos = pos72
            value114 = ')'
            if pos >= len(text):
                mode89 = False
                value113 = 4337126816
                pos89 = pos
            else:
                value115 = text[pos]
                if value115.value == ')':
                    mode89 = 1
                    value113 = value115
                    pos89 = pos + 1
                else:
                    mode89 = False
                    value113 = 4337126816
                    pos89 = pos
            if mode89:
                mode71 = 1
                value93 = value94
                pos71 = pos89
            else:
                mode71 = mode89
                value93 = value113
                pos71 = pos89
        if not mode71:
            mode67 = mode71
            value87 = value93
            pos67 = pos71
        else:
            pos = pos71
            while True:
                mode94, value120, pos94 = yield (3, _parse_Newline1, pos)
                if mode94:
                    pos = pos94
                else:
                    if mode94 is None:
                        mode93 = mode94
                        value119 = value120
                        pos93 = pos94
                    break
            mode93 = 1
            value119 = None
            pos93 = pos
            if not mode93:
                mode92 = mode93
                value118 = value119
                pos92 = pos93
            else:
                pos = pos93
                value123 = '='
                if pos >= len(text):
                    mode96 = False
                    value122 = 4337136248
                    pos96 = pos
                else:
                    value124 = text[pos]
                    if value124.value == '=':
                        mode96 = 1
                        value122 = value124
                        pos96 = pos + 1
                    else:
                        mode96 = False
                        value122 = 4337136248
                        pos96 = pos
                if mode96 or mode96 is None:
                    mode95 = mode96
                    value121 = value122
                    pos95 = pos96
                else:
                    value126 = ':'
                    if pos >= len(text):
                        mode97 = False
                        value125 = 4337136416
                        pos97 = pos
                    else:
                        value127 = text[pos]
                        if value127.value == ':':
                            mode97 = 1
                            value125 = value127
                            pos97 = pos + 1
                        else:
                            mode97 = False
                            value125 = 4337136416
                            pos97 = pos
                    if mode97 or mode97 is None:
                        mode95 = mode97
                        value121 = value125
                        pos95 = pos97
                    else:
                        value129 = '=>'
                        if pos >= len(text):
                            mode98 = False
                            value128 = 4337136976
                            pos98 = pos
                        else:
                            value130 = text[pos]
                            if value130.value == '=>':
                                mode98 = 1
                                value128 = value130
                                pos98 = pos + 1
                            else:
                                mode98 = False
                                value128 = 4337136976
                                pos98 = pos
                        if mode98 or mode98 is None:
                            mode95 = mode98
                            value121 = value128
                            pos95 = pos98
                        else:
                            mode95 = False
                            value121 = 4337668616
                            pos95 = pos
                            if pos95 < pos96:
                                mode95 = mode96
                                value121 = value122
                                pos95 = pos96
                            if pos95 < pos97:
                                mode95 = mode97
                                value121 = value125
                                pos95 = pos97
                            if pos95 < pos98:
                                mode95 = mode98
                                value121 = value128
                                pos95 = pos98
                mode92 = mode95
                value118 = value121
                pos92 = pos95
            if not mode92:
                mode91 = mode92
                value117 = value118
                pos91 = pos92
            else:
                pos = pos92
                while True:
                    mode100, value132, pos100 = yield (3, _parse_Newline1, pos)
                    if mode100:
                        pos = pos100
                    else:
                        if mode100 is None:
                            mode99 = mode100
                            value131 = value132
                            pos99 = pos100
                        break
                mode99 = 1
                value131 = None
                pos99 = pos
                if mode99:
                    mode91 = 1
                    value117 = value118
                    pos91 = pos99
                else:
                    mode91 = mode99
                    value117 = value131
                    pos91 = pos99
            if not mode91:
                mode90 = mode91
                value116 = value117
                pos90 = pos91
            else:
                pos = pos91
                mode101, value133, pos101 = yield (3, _parse_Expr1, pos)
                mode90 = mode101
                value116 = value133
                pos90 = pos101
            if not mode90:
                mode67 = mode90
                value87 = value116
                pos67 = pos90
            else:
                pos = pos90
                mode67 = 1
                value87 = TemplateDef(value88, value93, value116)
                pos67 = pos
    yield (mode67, value87, pos67)
    

def _parse_Def1(text, pos):
    mode103, value135, pos103 = yield (3, _parse_TokenDef1, pos)
    if mode103 or mode103 is None:
        mode102 = mode103
        value134 = value135
        pos102 = pos103
    else:
        mode104, value136, pos104 = yield (3, _parse_ClassDef1, pos)
        if mode104 or mode104 is None:
            mode102 = mode104
            value134 = value136
            pos102 = pos104
        else:
            mode105, value137, pos105 = yield (3, _parse_TemplateDef1, pos)
            if mode105 or mode105 is None:
                mode102 = mode105
                value134 = value137
                pos102 = pos105
            else:
                mode106, value138, pos106 = yield (3, _parse_RuleDef1, pos)
                if mode106 or mode106 is None:
                    mode102 = mode106
                    value134 = value138
                    pos102 = pos106
                else:
                    mode102 = False
                    value134 = 4337668952
                    pos102 = pos
                    if pos102 < pos103:
                        mode102 = mode103
                        value134 = value135
                        pos102 = pos103
                    if pos102 < pos104:
                        mode102 = mode104
                        value134 = value136
                        pos102 = pos104
                    if pos102 < pos105:
                        mode102 = mode105
                        value134 = value137
                        pos102 = pos105
                    if pos102 < pos106:
                        mode102 = mode106
                        value134 = value138
                        pos102 = pos106
    yield (mode102, value134, pos102)
    

def _parse_Ref1(text, pos):
    mode108, value140, pos108 = yield (3, _parse_Word1, pos)
    if not mode108:
        mode107 = mode108
        value139 = value140
        pos107 = pos108
    else:
        pos = pos108
        mode107 = 1
        value139 = Ref(value140)
        pos107 = pos
    yield (mode107, value139, pos107)
    

def _parse_ListLiteral1(text, pos):
    value145 = '['
    if pos >= len(text):
        mode112 = False
        value144 = 4337139608
        pos112 = pos
    else:
        value146 = text[pos]
        if value146.value == '[':
            mode112 = 1
            value144 = value146
            pos112 = pos + 1
        else:
            mode112 = False
            value144 = 4337139608
            pos112 = pos
    if not mode112:
        mode111 = mode112
        value143 = value144
        pos111 = pos112
    else:
        pos = pos112
        buf5 = []
        pos113 = pos
        while True:
            while True:
                mode117, value151, pos117 = yield (3, _parse_Newline1, pos)
                if mode117:
                    pos = pos117
                else:
                    if mode117 is None:
                        mode116 = mode117
                        value150 = value151
                        pos116 = pos117
                    break
            mode116 = 1
            value150 = None
            pos116 = pos
            if not mode116:
                mode115 = mode116
                value149 = value150
                pos115 = pos116
            else:
                pos = pos116
                mode118, value152, pos118 = yield (3, _parse_Expr1, pos)
                mode115 = mode118
                value149 = value152
                pos115 = pos118
            if not mode115:
                mode114 = mode115
                value148 = value149
                pos114 = pos115
            else:
                pos = pos115
                while True:
                    mode120, value154, pos120 = yield (3, _parse_Newline1, pos)
                    if mode120:
                        pos = pos120
                    else:
                        if mode120 is None:
                            mode119 = mode120
                            value153 = value154
                            pos119 = pos120
                        break
                mode119 = 1
                value153 = None
                pos119 = pos
                if mode119:
                    mode114 = 1
                    value148 = value149
                    pos114 = pos119
                else:
                    mode114 = mode119
                    value148 = value153
                    pos114 = pos119
            if not mode114:
                if mode114 is None:
                    mode113 = mode114
                    value147 = value148
                    pos113 = pos114
                break
            buf5.append(value148)
            pos = pos114
            mode121, value155, pos121 = yield (3, _parse_Comma1, pos)
            if not mode121:
                if mode121 is None:
                    mode113 = mode121
                    value147 = value155
                    pos113 = pos121
                break
            pos = pos121
        mode113 = 1
        value147 = buf5
        pos113 = pos
        mode111 = mode113
        value143 = value147
        pos111 = pos113
    if not mode111:
        mode110 = mode111
        value142 = value143
        pos110 = pos111
    else:
        pos = pos111
        value157 = ']'
        if pos >= len(text):
            mode122 = False
            value156 = 4337139664
            pos122 = pos
        else:
            value158 = text[pos]
            if value158.value == ']':
                mode122 = 1
                value156 = value158
                pos122 = pos + 1
            else:
                mode122 = False
                value156 = 4337139664
                pos122 = pos
        if mode122:
            mode110 = 1
            value142 = value143
            pos110 = pos122
        else:
            mode110 = mode122
            value142 = value156
            pos110 = pos122
    if not mode110:
        mode109 = mode110
        value141 = value142
        pos109 = pos110
    else:
        pos = pos110
        mode109 = 1
        value141 = ListLiteral(value142)
        pos109 = pos
    yield (mode109, value141, pos109)
    

def _parse_Atom1(text, pos):
    value163 = '('
    if pos >= len(text):
        mode126 = False
        value162 = 4337145616
        pos126 = pos
    else:
        value164 = text[pos]
        if value164.value == '(':
            mode126 = 1
            value162 = value164
            pos126 = pos + 1
        else:
            mode126 = False
            value162 = 4337145616
            pos126 = pos
    if not mode126:
        mode125 = mode126
        value161 = value162
        pos125 = pos126
    else:
        pos = pos126
        while True:
            mode130, value168, pos130 = yield (3, _parse_Newline1, pos)
            if mode130:
                pos = pos130
            else:
                if mode130 is None:
                    mode129 = mode130
                    value167 = value168
                    pos129 = pos130
                break
        mode129 = 1
        value167 = None
        pos129 = pos
        if not mode129:
            mode128 = mode129
            value166 = value167
            pos128 = pos129
        else:
            pos = pos129
            mode131, value169, pos131 = yield (3, _parse_Expr1, pos)
            mode128 = mode131
            value166 = value169
            pos128 = pos131
        if not mode128:
            mode127 = mode128
            value165 = value166
            pos127 = pos128
        else:
            pos = pos128
            while True:
                mode133, value171, pos133 = yield (3, _parse_Newline1, pos)
                if mode133:
                    pos = pos133
                else:
                    if mode133 is None:
                        mode132 = mode133
                        value170 = value171
                        pos132 = pos133
                    break
            mode132 = 1
            value170 = None
            pos132 = pos
            if mode132:
                mode127 = 1
                value165 = value166
                pos127 = pos132
            else:
                mode127 = mode132
                value165 = value170
                pos127 = pos132
        mode125 = mode127
        value161 = value165
        pos125 = pos127
    if not mode125:
        mode124 = mode125
        value160 = value161
        pos124 = pos125
    else:
        pos = pos125
        value173 = ')'
        if pos >= len(text):
            mode134 = False
            value172 = 4337145392
            pos134 = pos
        else:
            value174 = text[pos]
            if value174.value == ')':
                mode134 = 1
                value172 = value174
                pos134 = pos + 1
            else:
                mode134 = False
                value172 = 4337145392
                pos134 = pos
        if mode134:
            mode124 = 1
            value160 = value161
            pos124 = pos134
        else:
            mode124 = mode134
            value160 = value172
            pos124 = pos134
    if mode124 or mode124 is None:
        mode123 = mode124
        value159 = value160
        pos123 = pos124
    else:
        mode135, value175, pos135 = yield (3, _parse_Ref1, pos)
        if mode135 or mode135 is None:
            mode123 = mode135
            value159 = value175
            pos123 = pos135
        else:
            mode136, value176, pos136 = yield (3, _parse_StringLiteral1, pos)
            if mode136 or mode136 is None:
                mode123 = mode136
                value159 = value176
                pos123 = pos136
            else:
                mode137, value177, pos137 = yield (3, _parse_RegexLiteral1, pos)
                if mode137 or mode137 is None:
                    mode123 = mode137
                    value159 = value177
                    pos123 = pos137
                else:
                    mode138, value178, pos138 = yield (3, _parse_ListLiteral1, pos)
                    if mode138 or mode138 is None:
                        mode123 = mode138
                        value159 = value178
                        pos123 = pos138
                    else:
                        mode123 = False
                        value159 = 4337669680
                        pos123 = pos
                        if pos123 < pos124:
                            mode123 = mode124
                            value159 = value160
                            pos123 = pos124
                        if pos123 < pos135:
                            mode123 = mode135
                            value159 = value175
                            pos123 = pos135
                        if pos123 < pos136:
                            mode123 = mode136
                            value159 = value176
                            pos123 = pos136
                        if pos123 < pos137:
                            mode123 = mode137
                            value159 = value177
                            pos123 = pos137
                        if pos123 < pos138:
                            mode123 = mode138
                            value159 = value178
                            pos123 = pos138
    yield (mode123, value159, pos123)
    

def _parse_KeywordArg1(text, pos):
    mode141, value181, pos141 = yield (3, _parse_Name1, pos)
    if not mode141:
        mode140 = mode141
        value180 = value181
        pos140 = pos141
    else:
        pos = pos141
        value184 = '='
        if pos >= len(text):
            mode143 = False
            value183 = 4337147016
            pos143 = pos
        else:
            value185 = text[pos]
            if value185.value == '=':
                mode143 = 1
                value183 = value185
                pos143 = pos + 1
            else:
                mode143 = False
                value183 = 4337147016
                pos143 = pos
        if mode143 or mode143 is None:
            mode142 = mode143
            value182 = value183
            pos142 = pos143
        else:
            value187 = ':'
            if pos >= len(text):
                mode144 = False
                value186 = 4337147296
                pos144 = pos
            else:
                value188 = text[pos]
                if value188.value == ':':
                    mode144 = 1
                    value186 = value188
                    pos144 = pos + 1
                else:
                    mode144 = False
                    value186 = 4337147296
                    pos144 = pos
            if mode144 or mode144 is None:
                mode142 = mode144
                value182 = value186
                pos142 = pos144
            else:
                mode142 = False
                value182 = 4337670184
                pos142 = pos
                if pos142 < pos143:
                    mode142 = mode143
                    value182 = value183
                    pos142 = pos143
                if pos142 < pos144:
                    mode142 = mode144
                    value182 = value186
                    pos142 = pos144
        if mode142:
            mode140 = 1
            value180 = value181
            pos140 = pos142
        else:
            mode140 = mode142
            value180 = value182
            pos140 = pos142
    if not mode140:
        mode139 = mode140
        value179 = value180
        pos139 = pos140
    else:
        pos = pos140
        mode145, value189, pos145 = yield (3, _parse_Expr1, pos)
        if not mode145:
            mode139 = mode145
            value179 = value189
            pos139 = pos145
        else:
            pos = pos145
            mode139 = 1
            value179 = KeywordArg(value180, value189)
            pos139 = pos
    yield (mode139, value179, pos139)
    

def _parse_ArgList1(text, pos):
    value194 = '('
    if pos >= len(text):
        mode149 = False
        value193 = 4337152744
        pos149 = pos
    else:
        value195 = text[pos]
        if value195.value == '(':
            mode149 = 1
            value193 = value195
            pos149 = pos + 1
        else:
            mode149 = False
            value193 = 4337152744
            pos149 = pos
    if not mode149:
        mode148 = mode149
        value192 = value193
        pos148 = pos149
    else:
        pos = pos149
        buf6 = []
        pos150 = pos
        while True:
            while True:
                mode154, value200, pos154 = yield (3, _parse_Newline1, pos)
                if mode154:
                    pos = pos154
                else:
                    if mode154 is None:
                        mode153 = mode154
                        value199 = value200
                        pos153 = pos154
                    break
            mode153 = 1
            value199 = None
            pos153 = pos
            if not mode153:
                mode152 = mode153
                value198 = value199
                pos152 = pos153
            else:
                pos = pos153
                mode156, value202, pos156 = yield (3, _parse_KeywordArg1, pos)
                if mode156 or mode156 is None:
                    mode155 = mode156
                    value201 = value202
                    pos155 = pos156
                else:
                    mode157, value203, pos157 = yield (3, _parse_Expr1, pos)
                    if mode157 or mode157 is None:
                        mode155 = mode157
                        value201 = value203
                        pos155 = pos157
                    else:
                        mode155 = False
                        value201 = 4337670520
                        pos155 = pos
                        if pos155 < pos156:
                            mode155 = mode156
                            value201 = value202
                            pos155 = pos156
                        if pos155 < pos157:
                            mode155 = mode157
                            value201 = value203
                            pos155 = pos157
                mode152 = mode155
                value198 = value201
                pos152 = pos155
            if not mode152:
                mode151 = mode152
                value197 = value198
                pos151 = pos152
            else:
                pos = pos152
                while True:
                    mode159, value205, pos159 = yield (3, _parse_Newline1, pos)
                    if mode159:
                        pos = pos159
                    else:
                        if mode159 is None:
                            mode158 = mode159
                            value204 = value205
                            pos158 = pos159
                        break
                mode158 = 1
                value204 = None
                pos158 = pos
                if mode158:
                    mode151 = 1
                    value197 = value198
                    pos151 = pos158
                else:
                    mode151 = mode158
                    value197 = value204
                    pos151 = pos158
            if not mode151:
                if mode151 is None:
                    mode150 = mode151
                    value196 = value197
                    pos150 = pos151
                break
            buf6.append(value197)
            pos = pos151
            mode160, value206, pos160 = yield (3, _parse_Comma1, pos)
            if not mode160:
                if mode160 is None:
                    mode150 = mode160
                    value196 = value206
                    pos150 = pos160
                break
            pos = pos160
        mode150 = 1
        value196 = buf6
        pos150 = pos
        mode148 = mode150
        value192 = value196
        pos148 = pos150
    if not mode148:
        mode147 = mode148
        value191 = value192
        pos147 = pos148
    else:
        pos = pos148
        value208 = ')'
        if pos >= len(text):
            mode161 = False
            value207 = 4337153696
            pos161 = pos
        else:
            value209 = text[pos]
            if value209.value == ')':
                mode161 = 1
                value207 = value209
                pos161 = pos + 1
            else:
                mode161 = False
                value207 = 4337153696
                pos161 = pos
        if mode161:
            mode147 = 1
            value191 = value192
            pos147 = pos161
        else:
            mode147 = mode161
            value191 = value207
            pos147 = pos161
    if not mode147:
        mode146 = mode147
        value190 = value191
        pos146 = pos147
    else:
        pos = pos147
        mode146 = 1
        value190 = ArgList(value191)
        pos146 = pos
    yield (mode146, value190, pos146)
    

def _parse_Expr1(text, pos):
    is_first1 = True
    while True:
        if not is_first1:
            while True:
                mode166, value214, pos166 = yield (3, _parse_Newline1, pos)
                if mode166:
                    pos = pos166
                else:
                    if mode166 is None:
                        mode165 = mode166
                        value213 = value214
                        pos165 = pos166
                    break
            mode165 = 1
            value213 = None
            pos165 = pos
            if not mode165:
                mode164 = mode165
                value212 = value213
                pos164 = pos165
            else:
                pos = pos165
                value216 = '|'
                if pos >= len(text):
                    mode167 = False
                    value215 = 4337174008
                    pos167 = pos
                else:
                    value217 = text[pos]
                    if value217.value == '|':
                        mode167 = 1
                        value215 = value217
                        pos167 = pos + 1
                    else:
                        mode167 = False
                        value215 = 4337174008
                        pos167 = pos
                mode164 = mode167
                value212 = value215
                pos164 = pos167
            if not mode164:
                mode163 = mode164
                value211 = value212
                pos163 = pos164
            else:
                pos = pos164
                while True:
                    mode169, value219, pos169 = yield (3, _parse_Newline1, pos)
                    if mode169:
                        pos = pos169
                    else:
                        if mode169 is None:
                            mode168 = mode169
                            value218 = value219
                            pos168 = pos169
                        break
                mode168 = 1
                value218 = None
                pos168 = pos
                if mode168:
                    mode163 = 1
                    value211 = value212
                    pos163 = pos168
                else:
                    mode163 = mode168
                    value211 = value218
                    pos163 = pos168
            if not mode163:
                if mode163 is None:
                    mode162 = mode163
                    value210 = value211
                    pos162 = pos163
                break
            pos = pos163
        is_first2 = True
        while True:
            if not is_first2:
                while True:
                    mode174, value224, pos174 = yield (3, _parse_Newline1, pos)
                    if mode174:
                        pos = pos174
                    else:
                        if mode174 is None:
                            mode173 = mode174
                            value223 = value224
                            pos173 = pos174
                        break
                mode173 = 1
                value223 = None
                pos173 = pos
                if not mode173:
                    mode172 = mode173
                    value222 = value223
                    pos172 = pos173
                else:
                    pos = pos173
                    value227 = '<<'
                    if pos >= len(text):
                        mode176 = False
                        value226 = 4337164016
                        pos176 = pos
                    else:
                        value228 = text[pos]
                        if value228.value == '<<':
                            mode176 = 1
                            value226 = value228
                            pos176 = pos + 1
                        else:
                            mode176 = False
                            value226 = 4337164016
                            pos176 = pos
                    if mode176 or mode176 is None:
                        mode175 = mode176
                        value225 = value226
                        pos175 = pos176
                    else:
                        value230 = '>>'
                        if pos >= len(text):
                            mode177 = False
                            value229 = 4337172664
                            pos177 = pos
                        else:
                            value231 = text[pos]
                            if value231.value == '>>':
                                mode177 = 1
                                value229 = value231
                                pos177 = pos + 1
                            else:
                                mode177 = False
                                value229 = 4337172664
                                pos177 = pos
                        if mode177 or mode177 is None:
                            mode175 = mode177
                            value225 = value229
                            pos175 = pos177
                        else:
                            value233 = '<<!'
                            if pos >= len(text):
                                mode178 = False
                                value232 = 4337173392
                                pos178 = pos
                            else:
                                value234 = text[pos]
                                if value234.value == '<<!':
                                    mode178 = 1
                                    value232 = value234
                                    pos178 = pos + 1
                                else:
                                    mode178 = False
                                    value232 = 4337173392
                                    pos178 = pos
                            if mode178 or mode178 is None:
                                mode175 = mode178
                                value225 = value232
                                pos175 = pos178
                            else:
                                value236 = '!>>'
                                if pos >= len(text):
                                    mode179 = False
                                    value235 = 4337173336
                                    pos179 = pos
                                else:
                                    value237 = text[pos]
                                    if value237.value == '!>>':
                                        mode179 = 1
                                        value235 = value237
                                        pos179 = pos + 1
                                    else:
                                        mode179 = False
                                        value235 = 4337173336
                                        pos179 = pos
                                if mode179 or mode179 is None:
                                    mode175 = mode179
                                    value225 = value235
                                    pos175 = pos179
                                else:
                                    mode175 = False
                                    value225 = 4337671584
                                    pos175 = pos
                                    if pos175 < pos176:
                                        mode175 = mode176
                                        value225 = value226
                                        pos175 = pos176
                                    if pos175 < pos177:
                                        mode175 = mode177
                                        value225 = value229
                                        pos175 = pos177
                                    if pos175 < pos178:
                                        mode175 = mode178
                                        value225 = value232
                                        pos175 = pos178
                                    if pos175 < pos179:
                                        mode175 = mode179
                                        value225 = value235
                                        pos175 = pos179
                    mode172 = mode175
                    value222 = value225
                    pos172 = pos175
                if not mode172:
                    mode171 = mode172
                    value221 = value222
                    pos171 = pos172
                else:
                    pos = pos172
                    while True:
                        mode181, value239, pos181 = yield (3, _parse_Newline1, pos)
                        if mode181:
                            pos = pos181
                        else:
                            if mode181 is None:
                                mode180 = mode181
                                value238 = value239
                                pos180 = pos181
                            break
                    mode180 = 1
                    value238 = None
                    pos180 = pos
                    if mode180:
                        mode171 = 1
                        value221 = value222
                        pos171 = pos180
                    else:
                        mode171 = mode180
                        value221 = value238
                        pos171 = pos180
                if not mode171:
                    if mode171 is None:
                        mode170 = mode171
                        value220 = value221
                        pos170 = pos171
                    break
                pos = pos171
            is_first3 = True
            while True:
                if not is_first3:
                    while True:
                        mode186, value244, pos186 = yield (3, _parse_Newline1, pos)
                        if mode186:
                            pos = pos186
                        else:
                            if mode186 is None:
                                mode185 = mode186
                                value243 = value244
                                pos185 = pos186
                            break
                    mode185 = 1
                    value243 = None
                    pos185 = pos
                    if not mode185:
                        mode184 = mode185
                        value242 = value243
                        pos184 = pos185
                    else:
                        pos = pos185
                        value247 = '/'
                        if pos >= len(text):
                            mode188 = False
                            value246 = 4337162112
                            pos188 = pos
                        else:
                            value248 = text[pos]
                            if value248.value == '/':
                                mode188 = 1
                                value246 = value248
                                pos188 = pos + 1
                            else:
                                mode188 = False
                                value246 = 4337162112
                                pos188 = pos
                        if mode188 or mode188 is None:
                            mode187 = mode188
                            value245 = value246
                            pos187 = pos188
                        else:
                            value250 = '//'
                            if pos >= len(text):
                                mode189 = False
                                value249 = 4337162336
                                pos189 = pos
                            else:
                                value251 = text[pos]
                                if value251.value == '//':
                                    mode189 = 1
                                    value249 = value251
                                    pos189 = pos + 1
                                else:
                                    mode189 = False
                                    value249 = 4337162336
                                    pos189 = pos
                            if mode189 or mode189 is None:
                                mode187 = mode189
                                value245 = value249
                                pos187 = pos189
                            else:
                                mode187 = False
                                value245 = 4337671248
                                pos187 = pos
                                if pos187 < pos188:
                                    mode187 = mode188
                                    value245 = value246
                                    pos187 = pos188
                                if pos187 < pos189:
                                    mode187 = mode189
                                    value245 = value249
                                    pos187 = pos189
                        mode184 = mode187
                        value242 = value245
                        pos184 = pos187
                    if not mode184:
                        mode183 = mode184
                        value241 = value242
                        pos183 = pos184
                    else:
                        pos = pos184
                        while True:
                            mode191, value253, pos191 = yield (3, _parse_Newline1, pos)
                            if mode191:
                                pos = pos191
                            else:
                                if mode191 is None:
                                    mode190 = mode191
                                    value252 = value253
                                    pos190 = pos191
                                break
                        mode190 = 1
                        value252 = None
                        pos190 = pos
                        if mode190:
                            mode183 = 1
                            value241 = value242
                            pos183 = pos190
                        else:
                            mode183 = mode190
                            value241 = value252
                            pos183 = pos190
                    if not mode183:
                        if mode183 is None:
                            mode182 = mode183
                            value240 = value241
                            pos182 = pos183
                        break
                    pos = pos183
                mode194, value256, pos194 = yield (3, _parse_Atom1, pos)
                mode193 = mode194
                value255 = value256
                pos193 = pos194
                if mode194:
                    pos = pos194
                    while True:
                        mode195, value257, pos195 = yield (3, _parse_ArgList1, pos)
                        if not mode195:
                            if mode195 is None:
                                mode193 = mode195
                                value255 = value257
                                pos193 = pos195
                            else:
                                pos193 = pos
                            break
                        pos = pos195
                        value255 = Postfix(value255, value257)
                mode192 = mode193
                value254 = value255
                pos192 = pos193
                if mode193:
                    pos = pos193
                    while True:
                        value260 = '?'
                        if pos >= len(text):
                            mode197 = False
                            value259 = 4337160376
                            pos197 = pos
                        else:
                            value261 = text[pos]
                            if value261.value == '?':
                                mode197 = 1
                                value259 = value261
                                pos197 = pos + 1
                            else:
                                mode197 = False
                                value259 = 4337160376
                                pos197 = pos
                        if mode197 or mode197 is None:
                            mode196 = mode197
                            value258 = value259
                            pos196 = pos197
                        else:
                            value263 = '*'
                            if pos >= len(text):
                                mode198 = False
                                value262 = 4337160656
                                pos198 = pos
                            else:
                                value264 = text[pos]
                                if value264.value == '*':
                                    mode198 = 1
                                    value262 = value264
                                    pos198 = pos + 1
                                else:
                                    mode198 = False
                                    value262 = 4337160656
                                    pos198 = pos
                            if mode198 or mode198 is None:
                                mode196 = mode198
                                value258 = value262
                                pos196 = pos198
                            else:
                                value266 = '+'
                                if pos >= len(text):
                                    mode199 = False
                                    value265 = 4337161160
                                    pos199 = pos
                                else:
                                    value267 = text[pos]
                                    if value267.value == '+':
                                        mode199 = 1
                                        value265 = value267
                                        pos199 = pos + 1
                                    else:
                                        mode199 = False
                                        value265 = 4337161160
                                        pos199 = pos
                                if mode199 or mode199 is None:
                                    mode196 = mode199
                                    value258 = value265
                                    pos196 = pos199
                                else:
                                    value269 = '!'
                                    if pos >= len(text):
                                        mode200 = False
                                        value268 = 4337161216
                                        pos200 = pos
                                    else:
                                        value270 = text[pos]
                                        if value270.value == '!':
                                            mode200 = 1
                                            value268 = value270
                                            pos200 = pos + 1
                                        else:
                                            mode200 = False
                                            value268 = 4337161216
                                            pos200 = pos
                                    if mode200 or mode200 is None:
                                        mode196 = mode200
                                        value258 = value268
                                        pos196 = pos200
                                    else:
                                        mode196 = False
                                        value258 = 4337671080
                                        pos196 = pos
                                        if pos196 < pos197:
                                            mode196 = mode197
                                            value258 = value259
                                            pos196 = pos197
                                        if pos196 < pos198:
                                            mode196 = mode198
                                            value258 = value262
                                            pos196 = pos198
                                        if pos196 < pos199:
                                            mode196 = mode199
                                            value258 = value265
                                            pos196 = pos199
                                        if pos196 < pos200:
                                            mode196 = mode200
                                            value258 = value268
                                            pos196 = pos200
                        if not mode196:
                            if mode196 is None:
                                mode192 = mode196
                                value254 = value258
                                pos192 = pos196
                            else:
                                pos192 = pos
                            break
                        pos = pos196
                        value254 = Postfix(value254, value258)
                if not mode192:
                    if is_first3 or mode192 is None:
                        mode182 = mode192
                        value240 = value254
                        pos182 = pos192
                    break
                pos = pos182 = pos192
                if is_first3:
                    is_first3 = False
                    value240 = value254
                    mode182 = 1
                else:
                    value240 = Infix(value240, value241, value254)
            if not mode182:
                if is_first2 or mode182 is None:
                    mode170 = mode182
                    value220 = value240
                    pos170 = pos182
                break
            pos = pos170 = pos182
            if is_first2:
                is_first2 = False
                value220 = value240
                mode170 = 1
            else:
                value220 = Infix(value220, value221, value240)
        if not mode170:
            if is_first1 or mode170 is None:
                mode162 = mode170
                value210 = value220
                pos162 = pos170
            break
        pos = pos162 = pos170
        if is_first1:
            is_first1 = False
            value210 = value220
            mode162 = 1
        else:
            value210 = Infix(value210, value211, value220)
    yield (mode162, value210, pos162)
    

def _parse_start1(text, pos):
    while True:
        mode203, value273, pos203 = yield (3, _parse_Newline1, pos)
        if mode203:
            pos = pos203
        else:
            if mode203 is None:
                mode202 = mode203
                value272 = value273
                pos202 = pos203
            break
    mode202 = 1
    value272 = None
    pos202 = pos
    if not mode202:
        mode201 = mode202
        value271 = value272
        pos201 = pos202
    else:
        pos = pos202
        buf7 = []
        pos204 = pos
        while True:
            mode205, value275, pos205 = yield (3, _parse_Def1, pos)
            if not mode205:
                if mode205 is None:
                    mode204 = mode205
                    value274 = value275
                    pos204 = pos205
                break
            buf7.append(value275)
            pos = pos205
            mode206, value276, pos206 = yield (3, _parse_Sep1, pos)
            if not mode206:
                if mode206 is None:
                    mode204 = mode206
                    value274 = value276
                    pos204 = pos206
                break
            pos = pos206
        mode204 = 1
        value274 = buf7
        pos204 = pos
        mode201 = mode204
        value271 = value274
        pos201 = pos204
    yield (mode201, value271, pos201)
    

def _parse_Space1(text, pos):
    if pos >= len(text):
        mode207 = False
        value277 = 4337053480
        pos207 = pos
    else:
        value278 = text[pos]
        match11 = pattern11.fullmatch(value278.value)
        if match11:
            mode207 = 1
            value277 = value278
            pos207 = pos + 1
        else:
            mode207 = False
            value277 = 4337053480
            pos207 = pos
    yield (mode207, value277, pos207)
    

def _parse_Word1(text, pos):
    if pos >= len(text):
        mode208 = False
        value279 = 4337053592
        pos208 = pos
    else:
        value280 = text[pos]
        match12 = pattern12.fullmatch(value280.value)
        if match12:
            mode208 = 1
            value279 = value280
            pos208 = pos + 1
        else:
            mode208 = False
            value279 = 4337053592
            pos208 = pos
    yield (mode208, value279, pos208)
    

def _parse_Symbol1(text, pos):
    if pos >= len(text):
        mode209 = False
        value281 = 4337102920
        pos209 = pos
    else:
        value282 = text[pos]
        match13 = pattern13.fullmatch(value282.value)
        if match13:
            mode209 = 1
            value281 = value282
            pos209 = pos + 1
        else:
            mode209 = False
            value281 = 4337102920
            pos209 = pos
    yield (mode209, value281, pos209)
    

def _parse_StringLiteral1(text, pos):
    if pos >= len(text):
        mode211 = False
        value284 = 4337103368
        pos211 = pos
    else:
        value285 = text[pos]
        match14 = pattern14.fullmatch(value285.value)
        if match14:
            mode211 = 1
            value284 = value285
            pos211 = pos + 1
        else:
            mode211 = False
            value284 = 4337103368
            pos211 = pos
    if mode211 or mode211 is None:
        mode210 = mode211
        value283 = value284
        pos210 = pos211
    else:
        if pos >= len(text):
            mode212 = False
            value286 = 4337103592
            pos212 = pos
        else:
            value287 = text[pos]
            match15 = pattern15.fullmatch(value287.value)
            if match15:
                mode212 = 1
                value286 = value287
                pos212 = pos + 1
            else:
                mode212 = False
                value286 = 4337103592
                pos212 = pos
        if mode212 or mode212 is None:
            mode210 = mode212
            value283 = value286
            pos210 = pos212
        else:
            if pos >= len(text):
                mode213 = False
                value288 = 4337103424
                pos213 = pos
            else:
                value289 = text[pos]
                match16 = pattern16.fullmatch(value289.value)
                if match16:
                    mode213 = 1
                    value288 = value289
                    pos213 = pos + 1
                else:
                    mode213 = False
                    value288 = 4337103424
                    pos213 = pos
            if mode213 or mode213 is None:
                mode210 = mode213
                value283 = value288
                pos210 = pos213
            else:
                if pos >= len(text):
                    mode214 = False
                    value290 = 4337103760
                    pos214 = pos
                else:
                    value291 = text[pos]
                    match17 = pattern17.fullmatch(value291.value)
                    if match17:
                        mode214 = 1
                        value290 = value291
                        pos214 = pos + 1
                    else:
                        mode214 = False
                        value290 = 4337103760
                        pos214 = pos
                if mode214 or mode214 is None:
                    mode210 = mode214
                    value283 = value290
                    pos210 = pos214
                else:
                    mode210 = False
                    value283 = 4337174232
                    pos210 = pos
                    if pos210 < pos211:
                        mode210 = mode211
                        value283 = value284
                        pos210 = pos211
                    if pos210 < pos212:
                        mode210 = mode212
                        value283 = value286
                        pos210 = pos212
                    if pos210 < pos213:
                        mode210 = mode213
                        value283 = value288
                        pos210 = pos213
                    if pos210 < pos214:
                        mode210 = mode214
                        value283 = value290
                        pos210 = pos214
    yield (mode210, value283, pos210)
    

def _parse_RegexLiteral1(text, pos):
    if pos >= len(text):
        mode215 = False
        value292 = 4337103312
        pos215 = pos
    else:
        value293 = text[pos]
        match18 = pattern18.fullmatch(value293.value)
        if match18:
            mode215 = 1
            value292 = value293
            pos215 = pos + 1
        else:
            mode215 = False
            value292 = 4337103312
            pos215 = pos
    yield (mode215, value292, pos215)
    

def _parse_Newline1(text, pos):
    if pos >= len(text):
        mode216 = False
        value294 = 4337103816
        pos216 = pos
    else:
        value295 = text[pos]
        match19 = pattern19.fullmatch(value295.value)
        if match19:
            mode216 = 1
            value294 = value295
            pos216 = pos + 1
        else:
            mode216 = False
            value294 = 4337103816
            pos216 = pos
    yield (mode216, value294, pos216)
    

def _parse_Comment1(text, pos):
    if pos >= len(text):
        mode217 = False
        value296 = 4337104040
        pos217 = pos
    else:
        value297 = text[pos]
        match20 = pattern20.fullmatch(value297.value)
        if match20:
            mode217 = 1
            value296 = value297
            pos217 = pos + 1
        else:
            mode217 = False
            value296 = 4337104040
            pos217 = pos
    yield (mode217, value296, pos217)
    

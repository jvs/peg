# Generated by ../generate_metasyntax.py
import re

class Node:
    _fields = ()

    def __eq__(self, other):
        if not isinstance(other, self.__class__):
            return False
        for field in self._fields:
            if getattr(self, field) != getattr(other, field):
                return False
        return True

    def _asdict(self):
        return {k: getattr(self, k) for k in self._fields}

    def _replace(self, **kw):
        for field in self._fields:
            if field not in kw:
                kw[field] = getattr(self, field)
        return self.__class__(**kw)


class Token(Node):
    _fields = ('value',)

    def __init__(self, value):
        self.value = value

    def __repr__(self):
        return f'{self.__class__.__name__}({self.value!r})'


class Space(Token): pass
pattern1 = re.compile('[ \\t]+')

class Word(Token): pass
pattern2 = re.compile('[_a-zA-Z][_a-zA-Z0-9]*')

class Symbol(Token): pass
pattern3 = re.compile('<<\\!|\\!>>|<<|>>|=>|\\/\\/|[=;,:\\|\\/\\*\\+\\?\\!\\(\\)\\[\\]\\{\\}]')

class StringLiteral(Token): pass
pattern4 = re.compile('("""([^\\\\]|\\\\.)*?""")')
pattern5 = re.compile("('\\''([^\\\\]|\\\\.)*?'\\'')")
pattern6 = re.compile('("([^"\\\\]|\\\\.)*")')
pattern7 = re.compile("('([^'\\\\]|\\\\.)*')")

class RegexLiteral(Token): pass
pattern8 = re.compile('\\@\\/([^\\/\\\\]|\\\\.)*\\/')

class Newline(Token): pass
pattern9 = re.compile('[\\r\\n][\\s]*')

class PythonSection(Token): pass
pattern10 = re.compile('```.*?```')

class PythonExpression(Token): pass
pattern11 = re.compile('`[^`\\n]*`')

class Comment(Token): pass
pattern12 = re.compile('#[^\\r\\n]*')

class RuleDef(Node):
    _fields = ('name', 'expr')
    value = 'RuleDef'

    def __init__(self, name, expr):
        self.name = name
        self.expr = expr

    def __repr__(self):
        return f'RuleDef(name={self.name!r}, expr={self.expr!r})'


class ClassDef(Node):
    _fields = ('name', 'fields')
    value = 'ClassDef'

    def __init__(self, name, fields):
        self.name = name
        self.fields = fields

    def __repr__(self):
        return f'ClassDef(name={self.name!r}, fields={self.fields!r})'


class TokenDef(Node):
    _fields = ('is_ignored', 'child')
    value = 'TokenDef'

    def __init__(self, is_ignored, child):
        self.is_ignored = is_ignored
        self.child = child

    def __repr__(self):
        return f'TokenDef(is_ignored={self.is_ignored!r}, child={self.child!r})'


class TemplateDef(Node):
    _fields = ('name', 'params', 'expr')
    value = 'TemplateDef'

    def __init__(self, name, params, expr):
        self.name = name
        self.params = params
        self.expr = expr

    def __repr__(self):
        return f'TemplateDef(name={self.name!r}, params={self.params!r}, expr={self.expr!r})'


class Ref(Node):
    _fields = ('name',)
    value = 'Ref'

    def __init__(self, name):
        self.name = name

    def __repr__(self):
        return f'Ref(name={self.name!r})'


class ListLiteral(Node):
    _fields = ('elements',)
    value = 'ListLiteral'

    def __init__(self, elements):
        self.elements = elements

    def __repr__(self):
        return f'ListLiteral(elements={self.elements!r})'


class KeywordArg(Node):
    _fields = ('name', 'expr')
    value = 'KeywordArg'

    def __init__(self, name, expr):
        self.name = name
        self.expr = expr

    def __repr__(self):
        return f'KeywordArg(name={self.name!r}, expr={self.expr!r})'


class ArgList(Node):
    _fields = ('args',)
    value = 'ArgList'

    def __init__(self, args):
        self.args = args

    def __repr__(self):
        return f'ArgList(args={self.args!r})'


class ParseError(Exception):
    def __init__(self, mode, expr_code, pos):
        self.is_error = (mode is None)
        self.expr_code = expr_code
        self.pos = pos



class Infix(Node):
    _fields = ('left', 'operator', 'right')

    def __init__(self, left, operator, right):
        self.left = left
        self.operator = operator
        self.right = right

    def __repr__(self):
        return f'Infix({self.left!r}, {self.operator!r}, {self.right!r})'


class Postfix(Node):
    _fields = ('left', 'operator')

    def __init__(self, left, operator):
        self.left = left
        self.operator = operator

    def __repr__(self):
        return f'Postfix({self.left!r}, {self.operator!r})'


class Prefix(Node):
    _fields = ('operator', 'right')

    def __init__(self, operator, right):
        self.operator = operator
        self.right = right

    def __repr__(self):
        return f'Prefix({self.operator!r}, {self.right!r})'


def parse(text, pos=0):
    text = _run(text, pos, _tokenize)
    pos = 0
    return _run(text, pos, _parse_start1)


def _run(text, pos, start):
    memo = {}
    result = None

    key = (3, start, pos)
    gtor = start(text, pos)
    stack = [(key, gtor)]

    while stack:
        key, gtor = stack[-1]
        result = gtor.send(result)

        if result[0] != 3:
            stack.pop()
            memo[key] = result
        elif result in memo:
            result = memo[result]
        else:
            gtor = result[1](text, result[2])
            stack.append((result, gtor))
            result = None

    if result[0]:
        return result[1]
    else:
        raise ParseError(*result)


def visit(node):
    if isinstance(node, list):
        yield from node

    elif isinstance(node, Node):
        yield node

        if hasattr(node, '_fields'):
            for field in node._fields:
                yield from visit(getattr(node, field))


def transform(node, *callbacks):
    if not callbacks:
        return node

    if len(callbacks) == 1:
        callback = callbacks[0]
    else:
        def callback(node):
            for f in callbacks:
                node = f(node)
            return node

    return _transform(node, callback)


def _transform(node, callback):
    if isinstance(node, list):
        return [_transform(x, callback) for x in node]

    if not isinstance(node, Node):
        return node

    updates = {}
    for field in node._fields:
        was = getattr(node, field)
        now = _transform(was, callback)
        if was is not now:
            updates[field] = now

    if updates:
        node = node._replace(**updates)

    return callback(node)


def _tokenize(text, pos):
    buf1 = []
    while True:
        backtrack1 = pos
        match1 = pattern1.match(text, pos)
        if match1:
            mode4 = 1
            value4 = match1.group(0)
            pos4 = match1.end()
        else:
            mode4 = False
            value4 = 140500470594360
            pos4 = pos
        if mode4:
            mode3 = 2
            value3 = None
            pos3 = pos4
        else:
            mode3 = mode4
            value3 = value4
            pos3 = pos4
        if mode3 or mode3 is None:
            mode2 = mode3
            value2 = value3
            pos2 = pos3
        else:
            pos = backtrack1
            match2 = pattern2.match(text, pos)
            if match2:
                mode6 = 1
                value6 = match2.group(0)
                pos6 = match2.end()
            else:
                mode6 = False
                value6 = 140500470594472
                pos6 = pos
            if mode6:
                mode5 = 1
                value5 = Word(value6)
                pos5 = pos6
            else:
                mode5 = mode6
                value5 = value6
                pos5 = pos6
            if mode5 or mode5 is None:
                mode2 = mode5
                value2 = value5
                pos2 = pos5
            else:
                pos = backtrack1
                match3 = pattern3.match(text, pos)
                if match3:
                    mode8 = 1
                    value8 = match3.group(0)
                    pos8 = match3.end()
                else:
                    mode8 = False
                    value8 = 140500470594584
                    pos8 = pos
                if mode8:
                    mode7 = 1
                    value7 = Symbol(value8)
                    pos7 = pos8
                else:
                    mode7 = mode8
                    value7 = value8
                    pos7 = pos8
                if mode7 or mode7 is None:
                    mode2 = mode7
                    value2 = value7
                    pos2 = pos7
                else:
                    pos = backtrack1
                    backtrack2 = pos
                    match4 = pattern4.match(text, pos)
                    if match4:
                        mode11 = 1
                        value11 = match4.group(0)
                        pos11 = match4.end()
                    else:
                        mode11 = False
                        value11 = 140500470595032
                        pos11 = pos
                    if mode11 or mode11 is None:
                        mode10 = mode11
                        value10 = value11
                        pos10 = pos11
                    else:
                        pos = backtrack2
                        match5 = pattern5.match(text, pos)
                        if match5:
                            mode12 = 1
                            value12 = match5.group(0)
                            pos12 = match5.end()
                        else:
                            mode12 = False
                            value12 = 140500470595256
                            pos12 = pos
                        if mode12 or mode12 is None:
                            mode10 = mode12
                            value10 = value12
                            pos10 = pos12
                        else:
                            pos = backtrack2
                            match6 = pattern6.match(text, pos)
                            if match6:
                                mode13 = 1
                                value13 = match6.group(0)
                                pos13 = match6.end()
                            else:
                                mode13 = False
                                value13 = 140500470595088
                                pos13 = pos
                            if mode13 or mode13 is None:
                                mode10 = mode13
                                value10 = value13
                                pos10 = pos13
                            else:
                                pos = backtrack2
                                match7 = pattern7.match(text, pos)
                                if match7:
                                    mode14 = 1
                                    value14 = match7.group(0)
                                    pos14 = match7.end()
                                else:
                                    mode14 = False
                                    value14 = 140500470595424
                                    pos14 = pos
                                if mode14 or mode14 is None:
                                    mode10 = mode14
                                    value10 = value14
                                    pos10 = pos14
                                else:
                                    pos = backtrack2
                                    mode10 = False
                                    value10 = 140500470720384
                                    pos10 = pos
                                    if pos10 < pos11:
                                        mode10 = mode11
                                        value10 = value11
                                        pos10 = pos11
                                    if pos10 < pos12:
                                        mode10 = mode12
                                        value10 = value12
                                        pos10 = pos12
                                    if pos10 < pos13:
                                        mode10 = mode13
                                        value10 = value13
                                        pos10 = pos13
                                    if pos10 < pos14:
                                        mode10 = mode14
                                        value10 = value14
                                        pos10 = pos14
                    if mode10:
                        mode9 = 1
                        value9 = StringLiteral(value10)
                        pos9 = pos10
                    else:
                        mode9 = mode10
                        value9 = value10
                        pos9 = pos10
                    if mode9 or mode9 is None:
                        mode2 = mode9
                        value2 = value9
                        pos2 = pos9
                    else:
                        pos = backtrack1
                        match8 = pattern8.match(text, pos)
                        if match8:
                            mode16 = 1
                            value16 = match8.group(0)
                            pos16 = match8.end()
                        else:
                            mode16 = False
                            value16 = 140500470594976
                            pos16 = pos
                        if mode16:
                            mode15 = 1
                            value15 = RegexLiteral(value16)
                            pos15 = pos16
                        else:
                            mode15 = mode16
                            value15 = value16
                            pos15 = pos16
                        if mode15 or mode15 is None:
                            mode2 = mode15
                            value2 = value15
                            pos2 = pos15
                        else:
                            pos = backtrack1
                            match9 = pattern9.match(text, pos)
                            if match9:
                                mode18 = 1
                                value18 = match9.group(0)
                                pos18 = match9.end()
                            else:
                                mode18 = False
                                value18 = 140500470595480
                                pos18 = pos
                            if mode18:
                                mode17 = 1
                                value17 = Newline(value18)
                                pos17 = pos18
                            else:
                                mode17 = mode18
                                value17 = value18
                                pos17 = pos18
                            if mode17 or mode17 is None:
                                mode2 = mode17
                                value2 = value17
                                pos2 = pos17
                            else:
                                pos = backtrack1
                                match10 = pattern10.match(text, pos)
                                if match10:
                                    mode20 = 1
                                    value20 = match10.group(0)
                                    pos20 = match10.end()
                                else:
                                    mode20 = False
                                    value20 = 140500470640824
                                    pos20 = pos
                                if mode20:
                                    mode19 = 1
                                    value19 = PythonSection(value20)
                                    pos19 = pos20
                                else:
                                    mode19 = mode20
                                    value19 = value20
                                    pos19 = pos20
                                if mode19 or mode19 is None:
                                    mode2 = mode19
                                    value2 = value19
                                    pos2 = pos19
                                else:
                                    pos = backtrack1
                                    match11 = pattern11.match(text, pos)
                                    if match11:
                                        mode22 = 1
                                        value22 = match11.group(0)
                                        pos22 = match11.end()
                                    else:
                                        mode22 = False
                                        value22 = 140500470640992
                                        pos22 = pos
                                    if mode22:
                                        mode21 = 1
                                        value21 = PythonExpression(value22)
                                        pos21 = pos22
                                    else:
                                        mode21 = mode22
                                        value21 = value22
                                        pos21 = pos22
                                    if mode21 or mode21 is None:
                                        mode2 = mode21
                                        value2 = value21
                                        pos2 = pos21
                                    else:
                                        pos = backtrack1
                                        match12 = pattern12.match(text, pos)
                                        if match12:
                                            mode24 = 1
                                            value24 = match12.group(0)
                                            pos24 = match12.end()
                                        else:
                                            mode24 = False
                                            value24 = 140500470641328
                                            pos24 = pos
                                        if mode24:
                                            mode23 = 2
                                            value23 = None
                                            pos23 = pos24
                                        else:
                                            mode23 = mode24
                                            value23 = value24
                                            pos23 = pos24
                                        if mode23 or mode23 is None:
                                            mode2 = mode23
                                            value2 = value23
                                            pos2 = pos23
                                        else:
                                            pos = backtrack1
                                            mode2 = False
                                            value2 = 140500470594640
                                            pos2 = pos
                                            if pos2 < pos3:
                                                mode2 = mode3
                                                value2 = value3
                                                pos2 = pos3
                                            if pos2 < pos5:
                                                mode2 = mode5
                                                value2 = value5
                                                pos2 = pos5
                                            if pos2 < pos7:
                                                mode2 = mode7
                                                value2 = value7
                                                pos2 = pos7
                                            if pos2 < pos9:
                                                mode2 = mode9
                                                value2 = value9
                                                pos2 = pos9
                                            if pos2 < pos15:
                                                mode2 = mode15
                                                value2 = value15
                                                pos2 = pos15
                                            if pos2 < pos17:
                                                mode2 = mode17
                                                value2 = value17
                                                pos2 = pos17
                                            if pos2 < pos19:
                                                mode2 = mode19
                                                value2 = value19
                                                pos2 = pos19
                                            if pos2 < pos21:
                                                mode2 = mode21
                                                value2 = value21
                                                pos2 = pos21
                                            if pos2 < pos23:
                                                mode2 = mode23
                                                value2 = value23
                                                pos2 = pos23
        if not mode2:
            if mode2 is None:
                mode1 = mode2
                value1 = value2
                pos1 = pos2
            break
        if mode2 != 2:
            buf1.append(value2)
        pos = pos2
    mode1 = 1
    value1 = buf1
    pos1 = pos
    yield (mode1, value1, pos1)
    

def tokenize(text, pos=0):
    return _run(text, pos, _tokenize)


def _parse_Sep1(text, pos):
    buf2 = []
    while True:
        backtrack3 = pos
        mode27, value27, pos27 = yield (3, _parse_Newline1, pos)
        if mode27 or mode27 is None:
            mode26 = mode27
            value26 = value27
            pos26 = pos27
        else:
            pos = backtrack3
            value29 = ';'
            if pos >= len(text):
                mode28 = False
                value28 = 140500470641944
                pos28 = pos
            else:
                token1 = text[pos]
                if token1.value == value29:
                    mode28 = 1
                    value28 = token1
                    pos28 = pos + 1
                else:
                    mode28 = False
                    value28 = 140500470641944
                    pos28 = pos
            if mode28 or mode28 is None:
                mode26 = mode28
                value26 = value28
                pos26 = pos28
            else:
                pos = backtrack3
                mode26 = False
                value26 = 140500470720720
                pos26 = pos
                if pos26 < pos27:
                    mode26 = mode27
                    value26 = value27
                    pos26 = pos27
                if pos26 < pos28:
                    mode26 = mode28
                    value26 = value28
                    pos26 = pos28
        if not mode26:
            if mode26 is None:
                mode25 = mode26
                value25 = value26
                pos25 = pos26
            break
        if mode26 != 2:
            buf2.append(value26)
        pos = pos26
    if not buf2:
        mode25 = False
        value25 = 140500470720888
        pos25 = pos
    else:
        mode25 = 1
        value25 = buf2
        pos25 = pos
    yield (mode25, value25, pos25)
    

def _parse_Name1(text, pos):
    mode29, value30, pos29 = yield (3, _parse_Word1, pos)
    yield (mode29, value30, pos29)
    

def _parse_Comma1(text, pos):
    while True:
        mode33, value34, pos33 = yield (3, _parse_Newline1, pos)
        if mode33:
            pos = pos33
        else:
            if mode33 is None:
                mode32 = mode33
                value33 = value34
                pos32 = pos33
            break
    mode32 = 1
    value33 = None
    pos32 = pos
    if not mode32:
        mode31 = mode32
        value32 = value33
        pos31 = pos32
    else:
        pos = pos32
        value35 = ','
        if pos >= len(text):
            mode31 = False
            value32 = 140500470643064
            pos31 = pos
        else:
            token2 = text[pos]
            if token2.value == value35:
                mode31 = 1
                value32 = token2
                pos31 = pos + 1
            else:
                mode31 = False
                value32 = 140500470643064
                pos31 = pos
    if not mode31:
        mode30 = mode31
        value31 = value32
        pos30 = pos31
    else:
        pos = pos31
        while True:
            mode35, value37, pos35 = yield (3, _parse_Newline1, pos)
            if mode35:
                pos = pos35
            else:
                if mode35 is None:
                    mode34 = mode35
                    value36 = value37
                    pos34 = pos35
                break
        mode34 = 1
        value36 = None
        pos34 = pos
        if mode34:
            mode30 = 1
            value31 = value32
            pos30 = pos34
        else:
            mode30 = mode34
            value31 = value36
            pos30 = pos34
    yield (mode30, value31, pos30)
    

def _parse_RuleDef1(text, pos):
    mode38, value40, pos38 = yield (3, _parse_Name1, pos)
    if not mode38:
        mode37 = mode38
        value39 = value40
        pos37 = pos38
    else:
        pos = pos38
        backtrack4 = pos
        value43 = '='
        if pos >= len(text):
            mode40 = False
            value42 = 140500470643568
            pos40 = pos
        else:
            token3 = text[pos]
            if token3.value == value43:
                mode40 = 1
                value42 = token3
                pos40 = pos + 1
            else:
                mode40 = False
                value42 = 140500470643568
                pos40 = pos
        if mode40 or mode40 is None:
            mode39 = mode40
            value41 = value42
            pos39 = pos40
        else:
            pos = backtrack4
            value45 = ':'
            if pos >= len(text):
                mode41 = False
                value44 = 140500470643512
                pos41 = pos
            else:
                token4 = text[pos]
                if token4.value == value45:
                    mode41 = 1
                    value44 = token4
                    pos41 = pos + 1
                else:
                    mode41 = False
                    value44 = 140500470643512
                    pos41 = pos
            if mode41 or mode41 is None:
                mode39 = mode41
                value41 = value44
                pos39 = pos41
            else:
                pos = backtrack4
                mode39 = False
                value41 = 140500472499448
                pos39 = pos
                if pos39 < pos40:
                    mode39 = mode40
                    value41 = value42
                    pos39 = pos40
                if pos39 < pos41:
                    mode39 = mode41
                    value41 = value44
                    pos39 = pos41
        if mode39:
            mode37 = 1
            value39 = value40
            pos37 = pos39
        else:
            mode37 = mode39
            value39 = value41
            pos37 = pos39
    if not mode37:
        mode36 = mode37
        value38 = value39
        pos36 = pos37
    else:
        pos = pos37
        mode42, value46, pos42 = yield (3, _parse_Expr1, pos)
        if not mode42:
            mode36 = mode42
            value38 = value46
            pos36 = pos42
        else:
            pos = pos42
            mode36 = 1
            value38 = RuleDef(value39, value46)
            pos36 = pos
    yield (mode36, value38, pos36)
    

def _parse_ClassDef1(text, pos):
    value50 = 'class'
    if pos >= len(text):
        mode45 = False
        value49 = 140500470644688
        pos45 = pos
    else:
        token5 = text[pos]
        if token5.value == value50:
            mode45 = 1
            value49 = token5
            pos45 = pos + 1
        else:
            mode45 = False
            value49 = 140500470644688
            pos45 = pos
    if not mode45:
        mode44 = mode45
        value48 = value49
        pos44 = pos45
    else:
        pos = pos45
        mode44, value48, pos44 = yield (3, _parse_Name1, pos)
    if not mode44:
        mode43 = mode44
        value47 = value48
        pos43 = pos44
    else:
        pos = pos44
        while True:
            mode51, value56, pos51 = yield (3, _parse_Newline1, pos)
            if mode51:
                pos = pos51
            else:
                if mode51 is None:
                    mode50 = mode51
                    value55 = value56
                    pos50 = pos51
                break
        mode50 = 1
        value55 = None
        pos50 = pos
        if not mode50:
            mode49 = mode50
            value54 = value55
            pos49 = pos50
        else:
            pos = pos50
            value57 = '{'
            if pos >= len(text):
                mode49 = False
                value54 = 140500470658048
                pos49 = pos
            else:
                token6 = text[pos]
                if token6.value == value57:
                    mode49 = 1
                    value54 = token6
                    pos49 = pos + 1
                else:
                    mode49 = False
                    value54 = 140500470658048
                    pos49 = pos
        if not mode49:
            mode48 = mode49
            value53 = value54
            pos48 = pos49
        else:
            pos = pos49
            while True:
                mode53, value59, pos53 = yield (3, _parse_Newline1, pos)
                if mode53:
                    pos = pos53
                else:
                    if mode53 is None:
                        mode52 = mode53
                        value58 = value59
                        pos52 = pos53
                    break
            mode52 = 1
            value58 = None
            pos52 = pos
            if mode52:
                mode48 = 1
                value53 = value54
                pos48 = pos52
            else:
                mode48 = mode52
                value53 = value58
                pos48 = pos52
        if not mode48:
            mode47 = mode48
            value52 = value53
            pos47 = pos48
        else:
            pos = pos48
            buf3 = []
            pos47 = pos
            while True:
                mode54, value60, pos54 = yield (3, _parse_RuleDef1, pos)
                if not mode54:
                    if mode54 is None:
                        mode47 = mode54
                        value52 = value60
                        pos47 = pos54
                    break
                buf3.append(value60)
                pos = pos54
                mode55, value61, pos55 = yield (3, _parse_Sep1, pos)
                if not mode55:
                    if mode55 is None:
                        mode47 = mode55
                        value52 = value61
                        pos47 = pos55
                    break
                pos = pos55
            mode47 = 1
            value52 = buf3
            pos47 = pos
        if not mode47:
            mode46 = mode47
            value51 = value52
            pos46 = pos47
        else:
            pos = pos47
            value63 = '}'
            if pos >= len(text):
                mode56 = False
                value62 = 140500470658832
                pos56 = pos
            else:
                token7 = text[pos]
                if token7.value == value63:
                    mode56 = 1
                    value62 = token7
                    pos56 = pos + 1
                else:
                    mode56 = False
                    value62 = 140500470658832
                    pos56 = pos
            if mode56:
                mode46 = 1
                value51 = value52
                pos46 = pos56
            else:
                mode46 = mode56
                value51 = value62
                pos46 = pos56
        if not mode46:
            mode43 = mode46
            value47 = value51
            pos43 = pos46
        else:
            pos = pos46
            mode43 = 1
            value47 = ClassDef(value48, value51)
            pos43 = pos
    yield (mode43, value47, pos43)
    

def _parse_TokenDef1(text, pos):
    backtrack5 = pos
    backtrack6 = pos
    value68 = 'ignore'
    if pos >= len(text):
        mode60 = False
        value67 = 140500470659448
        pos60 = pos
    else:
        token8 = text[pos]
        if token8.value == value68:
            mode60 = 1
            value67 = token8
            pos60 = pos + 1
        else:
            mode60 = False
            value67 = 140500470659448
            pos60 = pos
    if mode60 or mode60 is None:
        mode59 = mode60
        value66 = value67
        pos59 = pos60
    else:
        pos = backtrack6
        value70 = 'ignored'
        if pos >= len(text):
            mode61 = False
            value69 = 140500470659672
            pos61 = pos
        else:
            token9 = text[pos]
            if token9.value == value70:
                mode61 = 1
                value69 = token9
                pos61 = pos + 1
            else:
                mode61 = False
                value69 = 140500470659672
                pos61 = pos
        if mode61 or mode61 is None:
            mode59 = mode61
            value66 = value69
            pos59 = pos61
        else:
            pos = backtrack6
            mode59 = False
            value66 = 140500472582328
            pos59 = pos
            if pos59 < pos60:
                mode59 = mode60
                value66 = value67
                pos59 = pos60
            if pos59 < pos61:
                mode59 = mode61
                value66 = value69
                pos59 = pos61
    if mode59 or mode59 is None:
        mode58 = mode59
        value65 = value66
        pos58 = pos59
    else:
        mode58 = 1
        value65 = None
        pos58 = backtrack5
    if not mode58:
        mode57 = mode58
        value64 = value65
        pos57 = pos58
    else:
        pos = pos58
        value73 = 'token'
        if pos >= len(text):
            mode63 = False
            value72 = 140500470660344
            pos63 = pos
        else:
            token10 = text[pos]
            if token10.value == value73:
                mode63 = 1
                value72 = token10
                pos63 = pos + 1
            else:
                mode63 = False
                value72 = 140500470660344
                pos63 = pos
        if not mode63:
            mode62 = mode63
            value71 = value72
            pos62 = pos63
        else:
            pos = pos63
            backtrack7 = pos
            mode64, value74, pos64 = yield (3, _parse_ClassDef1, pos)
            if mode64 or mode64 is None:
                mode62 = mode64
                value71 = value74
                pos62 = pos64
            else:
                pos = backtrack7
                mode65, value75, pos65 = yield (3, _parse_RuleDef1, pos)
                if mode65 or mode65 is None:
                    mode62 = mode65
                    value71 = value75
                    pos62 = pos65
                else:
                    pos = backtrack7
                    mode62 = False
                    value71 = 140500472582496
                    pos62 = pos
                    if pos62 < pos64:
                        mode62 = mode64
                        value71 = value74
                        pos62 = pos64
                    if pos62 < pos65:
                        mode62 = mode65
                        value71 = value75
                        pos62 = pos65
        if not mode62:
            mode57 = mode62
            value64 = value71
            pos57 = pos62
        else:
            pos = pos62
            mode57 = 1
            value64 = TokenDef(value65, value71)
            pos57 = pos
    yield (mode57, value64, pos57)
    

def _parse_TemplateDef1(text, pos):
    value79 = 'template'
    if pos >= len(text):
        mode68 = False
        value78 = 140500470665400
        pos68 = pos
    else:
        token11 = text[pos]
        if token11.value == value79:
            mode68 = 1
            value78 = token11
            pos68 = pos + 1
        else:
            mode68 = False
            value78 = 140500470665400
            pos68 = pos
    if not mode68:
        mode67 = mode68
        value77 = value78
        pos67 = pos68
    else:
        pos = pos68
        mode67, value77, pos67 = yield (3, _parse_Name1, pos)
    if not mode67:
        mode66 = mode67
        value76 = value77
        pos66 = pos67
    else:
        pos = pos67
        while True:
            mode74, value85, pos74 = yield (3, _parse_Newline1, pos)
            if mode74:
                pos = pos74
            else:
                if mode74 is None:
                    mode73 = mode74
                    value84 = value85
                    pos73 = pos74
                break
        mode73 = 1
        value84 = None
        pos73 = pos
        if not mode73:
            mode72 = mode73
            value83 = value84
            pos72 = pos73
        else:
            pos = pos73
            value86 = '('
            if pos >= len(text):
                mode72 = False
                value83 = 140500470667640
                pos72 = pos
            else:
                token12 = text[pos]
                if token12.value == value86:
                    mode72 = 1
                    value83 = token12
                    pos72 = pos + 1
                else:
                    mode72 = False
                    value83 = 140500470667640
                    pos72 = pos
        if not mode72:
            mode71 = mode72
            value82 = value83
            pos71 = pos72
        else:
            pos = pos72
            while True:
                mode76, value88, pos76 = yield (3, _parse_Newline1, pos)
                if mode76:
                    pos = pos76
                else:
                    if mode76 is None:
                        mode75 = mode76
                        value87 = value88
                        pos75 = pos76
                    break
            mode75 = 1
            value87 = None
            pos75 = pos
            if mode75:
                mode71 = 1
                value82 = value83
                pos71 = pos75
            else:
                mode71 = mode75
                value82 = value87
                pos71 = pos75
        if not mode71:
            mode70 = mode71
            value81 = value82
            pos70 = pos71
        else:
            pos = pos71
            buf4 = []
            pos70 = pos
            while True:
                while True:
                    mode80, value92, pos80 = yield (3, _parse_Newline1, pos)
                    if mode80:
                        pos = pos80
                    else:
                        if mode80 is None:
                            mode79 = mode80
                            value91 = value92
                            pos79 = pos80
                        break
                mode79 = 1
                value91 = None
                pos79 = pos
                if not mode79:
                    mode78 = mode79
                    value90 = value91
                    pos78 = pos79
                else:
                    pos = pos79
                    mode78, value90, pos78 = yield (3, _parse_Name1, pos)
                if not mode78:
                    mode77 = mode78
                    value89 = value90
                    pos77 = pos78
                else:
                    pos = pos78
                    while True:
                        mode82, value94, pos82 = yield (3, _parse_Newline1, pos)
                        if mode82:
                            pos = pos82
                        else:
                            if mode82 is None:
                                mode81 = mode82
                                value93 = value94
                                pos81 = pos82
                            break
                    mode81 = 1
                    value93 = None
                    pos81 = pos
                    if mode81:
                        mode77 = 1
                        value89 = value90
                        pos77 = pos81
                    else:
                        mode77 = mode81
                        value89 = value93
                        pos77 = pos81
                if not mode77:
                    if mode77 is None:
                        mode70 = mode77
                        value81 = value89
                        pos70 = pos77
                    break
                buf4.append(value89)
                pos = pos77
                mode83, value95, pos83 = yield (3, _parse_Comma1, pos)
                if not mode83:
                    if mode83 is None:
                        mode70 = mode83
                        value81 = value95
                        pos70 = pos83
                    break
                pos = pos83
            mode70 = 1
            value81 = buf4
            pos70 = pos
        if not mode70:
            mode69 = mode70
            value80 = value81
            pos69 = pos70
        else:
            pos = pos70
            value97 = ')'
            if pos >= len(text):
                mode84 = False
                value96 = 140500470667752
                pos84 = pos
            else:
                token13 = text[pos]
                if token13.value == value97:
                    mode84 = 1
                    value96 = token13
                    pos84 = pos + 1
                else:
                    mode84 = False
                    value96 = 140500470667752
                    pos84 = pos
            if mode84:
                mode69 = 1
                value80 = value81
                pos69 = pos84
            else:
                mode69 = mode84
                value80 = value96
                pos69 = pos84
        if not mode69:
            mode66 = mode69
            value76 = value80
            pos66 = pos69
        else:
            pos = pos69
            while True:
                mode89, value102, pos89 = yield (3, _parse_Newline1, pos)
                if mode89:
                    pos = pos89
                else:
                    if mode89 is None:
                        mode88 = mode89
                        value101 = value102
                        pos88 = pos89
                    break
            mode88 = 1
            value101 = None
            pos88 = pos
            if not mode88:
                mode87 = mode88
                value100 = value101
                pos87 = pos88
            else:
                pos = pos88
                backtrack8 = pos
                value104 = '='
                if pos >= len(text):
                    mode90 = False
                    value103 = 140500470673480
                    pos90 = pos
                else:
                    token14 = text[pos]
                    if token14.value == value104:
                        mode90 = 1
                        value103 = token14
                        pos90 = pos + 1
                    else:
                        mode90 = False
                        value103 = 140500470673480
                        pos90 = pos
                if mode90 or mode90 is None:
                    mode87 = mode90
                    value100 = value103
                    pos87 = pos90
                else:
                    pos = backtrack8
                    value106 = ':'
                    if pos >= len(text):
                        mode91 = False
                        value105 = 140500470673592
                        pos91 = pos
                    else:
                        token15 = text[pos]
                        if token15.value == value106:
                            mode91 = 1
                            value105 = token15
                            pos91 = pos + 1
                        else:
                            mode91 = False
                            value105 = 140500470673592
                            pos91 = pos
                    if mode91 or mode91 is None:
                        mode87 = mode91
                        value100 = value105
                        pos87 = pos91
                    else:
                        pos = backtrack8
                        value108 = '=>'
                        if pos >= len(text):
                            mode92 = False
                            value107 = 140500470673760
                            pos92 = pos
                        else:
                            token16 = text[pos]
                            if token16.value == value108:
                                mode92 = 1
                                value107 = token16
                                pos92 = pos + 1
                            else:
                                mode92 = False
                                value107 = 140500470673760
                                pos92 = pos
                        if mode92 or mode92 is None:
                            mode87 = mode92
                            value100 = value107
                            pos87 = pos92
                        else:
                            pos = backtrack8
                            mode87 = False
                            value100 = 140500472583560
                            pos87 = pos
                            if pos87 < pos90:
                                mode87 = mode90
                                value100 = value103
                                pos87 = pos90
                            if pos87 < pos91:
                                mode87 = mode91
                                value100 = value105
                                pos87 = pos91
                            if pos87 < pos92:
                                mode87 = mode92
                                value100 = value107
                                pos87 = pos92
            if not mode87:
                mode86 = mode87
                value99 = value100
                pos86 = pos87
            else:
                pos = pos87
                while True:
                    mode94, value110, pos94 = yield (3, _parse_Newline1, pos)
                    if mode94:
                        pos = pos94
                    else:
                        if mode94 is None:
                            mode93 = mode94
                            value109 = value110
                            pos93 = pos94
                        break
                mode93 = 1
                value109 = None
                pos93 = pos
                if mode93:
                    mode86 = 1
                    value99 = value100
                    pos86 = pos93
                else:
                    mode86 = mode93
                    value99 = value109
                    pos86 = pos93
            if not mode86:
                mode85 = mode86
                value98 = value99
                pos85 = pos86
            else:
                pos = pos86
                mode85, value98, pos85 = yield (3, _parse_Expr1, pos)
            if not mode85:
                mode66 = mode85
                value76 = value98
                pos66 = pos85
            else:
                pos = pos85
                mode66 = 1
                value76 = TemplateDef(value77, value80, value98)
                pos66 = pos
    yield (mode66, value76, pos66)
    

def _parse_Stmt1(text, pos):
    backtrack9 = pos
    mode96, value112, pos96 = yield (3, _parse_TokenDef1, pos)
    if mode96 or mode96 is None:
        mode95 = mode96
        value111 = value112
        pos95 = pos96
    else:
        pos = backtrack9
        mode97, value113, pos97 = yield (3, _parse_ClassDef1, pos)
        if mode97 or mode97 is None:
            mode95 = mode97
            value111 = value113
            pos95 = pos97
        else:
            pos = backtrack9
            mode98, value114, pos98 = yield (3, _parse_TemplateDef1, pos)
            if mode98 or mode98 is None:
                mode95 = mode98
                value111 = value114
                pos95 = pos98
            else:
                pos = backtrack9
                mode99, value115, pos99 = yield (3, _parse_RuleDef1, pos)
                if mode99 or mode99 is None:
                    mode95 = mode99
                    value111 = value115
                    pos95 = pos99
                else:
                    pos = backtrack9
                    mode100, value116, pos100 = yield (3, _parse_PythonSection1, pos)
                    if mode100 or mode100 is None:
                        mode95 = mode100
                        value111 = value116
                        pos95 = pos100
                    else:
                        pos = backtrack9
                        mode101, value117, pos101 = yield (3, _parse_PythonExpression1, pos)
                        if mode101 or mode101 is None:
                            mode95 = mode101
                            value111 = value117
                            pos95 = pos101
                        else:
                            pos = backtrack9
                            mode95 = False
                            value111 = 140500472583896
                            pos95 = pos
                            if pos95 < pos96:
                                mode95 = mode96
                                value111 = value112
                                pos95 = pos96
                            if pos95 < pos97:
                                mode95 = mode97
                                value111 = value113
                                pos95 = pos97
                            if pos95 < pos98:
                                mode95 = mode98
                                value111 = value114
                                pos95 = pos98
                            if pos95 < pos99:
                                mode95 = mode99
                                value111 = value115
                                pos95 = pos99
                            if pos95 < pos100:
                                mode95 = mode100
                                value111 = value116
                                pos95 = pos100
                            if pos95 < pos101:
                                mode95 = mode101
                                value111 = value117
                                pos95 = pos101
    yield (mode95, value111, pos95)
    

def _parse_Ref1(text, pos):
    mode103, value119, pos103 = yield (3, _parse_Word1, pos)
    if not mode103:
        mode102 = mode103
        value118 = value119
        pos102 = pos103
    else:
        pos = pos103
        mode102 = 1
        value118 = Ref(value119)
        pos102 = pos
    yield (mode102, value118, pos102)
    

def _parse_ListLiteral1(text, pos):
    value124 = '['
    if pos >= len(text):
        mode107 = False
        value123 = 140500470676224
        pos107 = pos
    else:
        token17 = text[pos]
        if token17.value == value124:
            mode107 = 1
            value123 = token17
            pos107 = pos + 1
        else:
            mode107 = False
            value123 = 140500470676224
            pos107 = pos
    if not mode107:
        mode106 = mode107
        value122 = value123
        pos106 = pos107
    else:
        pos = pos107
        buf5 = []
        pos106 = pos
        while True:
            while True:
                mode111, value128, pos111 = yield (3, _parse_Newline1, pos)
                if mode111:
                    pos = pos111
                else:
                    if mode111 is None:
                        mode110 = mode111
                        value127 = value128
                        pos110 = pos111
                    break
            mode110 = 1
            value127 = None
            pos110 = pos
            if not mode110:
                mode109 = mode110
                value126 = value127
                pos109 = pos110
            else:
                pos = pos110
                mode109, value126, pos109 = yield (3, _parse_Expr1, pos)
            if not mode109:
                mode108 = mode109
                value125 = value126
                pos108 = pos109
            else:
                pos = pos109
                while True:
                    mode113, value130, pos113 = yield (3, _parse_Newline1, pos)
                    if mode113:
                        pos = pos113
                    else:
                        if mode113 is None:
                            mode112 = mode113
                            value129 = value130
                            pos112 = pos113
                        break
                mode112 = 1
                value129 = None
                pos112 = pos
                if mode112:
                    mode108 = 1
                    value125 = value126
                    pos108 = pos112
                else:
                    mode108 = mode112
                    value125 = value129
                    pos108 = pos112
            if not mode108:
                if mode108 is None:
                    mode106 = mode108
                    value122 = value125
                    pos106 = pos108
                break
            buf5.append(value125)
            pos = pos108
            mode114, value131, pos114 = yield (3, _parse_Comma1, pos)
            if not mode114:
                if mode114 is None:
                    mode106 = mode114
                    value122 = value131
                    pos106 = pos114
                break
            pos = pos114
        mode106 = 1
        value122 = buf5
        pos106 = pos
    if not mode106:
        mode105 = mode106
        value121 = value122
        pos105 = pos106
    else:
        pos = pos106
        value133 = ']'
        if pos >= len(text):
            mode115 = False
            value132 = 140500470677288
            pos115 = pos
        else:
            token18 = text[pos]
            if token18.value == value133:
                mode115 = 1
                value132 = token18
                pos115 = pos + 1
            else:
                mode115 = False
                value132 = 140500470677288
                pos115 = pos
        if mode115:
            mode105 = 1
            value121 = value122
            pos105 = pos115
        else:
            mode105 = mode115
            value121 = value132
            pos105 = pos115
    if not mode105:
        mode104 = mode105
        value120 = value121
        pos104 = pos105
    else:
        pos = pos105
        mode104 = 1
        value120 = ListLiteral(value121)
        pos104 = pos
    yield (mode104, value120, pos104)
    

def _parse_Atom1(text, pos):
    backtrack10 = pos
    value138 = '('
    if pos >= len(text):
        mode119 = False
        value137 = 140500470649968
        pos119 = pos
    else:
        token19 = text[pos]
        if token19.value == value138:
            mode119 = 1
            value137 = token19
            pos119 = pos + 1
        else:
            mode119 = False
            value137 = 140500470649968
            pos119 = pos
    if not mode119:
        mode118 = mode119
        value136 = value137
        pos118 = pos119
    else:
        pos = pos119
        while True:
            mode122, value141, pos122 = yield (3, _parse_Newline1, pos)
            if mode122:
                pos = pos122
            else:
                if mode122 is None:
                    mode121 = mode122
                    value140 = value141
                    pos121 = pos122
                break
        mode121 = 1
        value140 = None
        pos121 = pos
        if not mode121:
            mode120 = mode121
            value139 = value140
            pos120 = pos121
        else:
            pos = pos121
            mode120, value139, pos120 = yield (3, _parse_Expr1, pos)
        if not mode120:
            mode118 = mode120
            value136 = value139
            pos118 = pos120
        else:
            pos = pos120
            while True:
                mode124, value143, pos124 = yield (3, _parse_Newline1, pos)
                if mode124:
                    pos = pos124
                else:
                    if mode124 is None:
                        mode123 = mode124
                        value142 = value143
                        pos123 = pos124
                    break
            mode123 = 1
            value142 = None
            pos123 = pos
            if mode123:
                mode118 = 1
                value136 = value139
                pos118 = pos123
            else:
                mode118 = mode123
                value136 = value142
                pos118 = pos123
    if not mode118:
        mode117 = mode118
        value135 = value136
        pos117 = pos118
    else:
        pos = pos118
        value145 = ')'
        if pos >= len(text):
            mode125 = False
            value144 = 140500470650024
            pos125 = pos
        else:
            token20 = text[pos]
            if token20.value == value145:
                mode125 = 1
                value144 = token20
                pos125 = pos + 1
            else:
                mode125 = False
                value144 = 140500470650024
                pos125 = pos
        if mode125:
            mode117 = 1
            value135 = value136
            pos117 = pos125
        else:
            mode117 = mode125
            value135 = value144
            pos117 = pos125
    if mode117 or mode117 is None:
        mode116 = mode117
        value134 = value135
        pos116 = pos117
    else:
        pos = backtrack10
        mode126, value146, pos126 = yield (3, _parse_Ref1, pos)
        if mode126 or mode126 is None:
            mode116 = mode126
            value134 = value146
            pos116 = pos126
        else:
            pos = backtrack10
            mode127, value147, pos127 = yield (3, _parse_StringLiteral1, pos)
            if mode127 or mode127 is None:
                mode116 = mode127
                value134 = value147
                pos116 = pos127
            else:
                pos = backtrack10
                mode128, value148, pos128 = yield (3, _parse_RegexLiteral1, pos)
                if mode128 or mode128 is None:
                    mode116 = mode128
                    value134 = value148
                    pos116 = pos128
                else:
                    pos = backtrack10
                    mode129, value149, pos129 = yield (3, _parse_ListLiteral1, pos)
                    if mode129 or mode129 is None:
                        mode116 = mode129
                        value134 = value149
                        pos116 = pos129
                    else:
                        pos = backtrack10
                        mode130, value150, pos130 = yield (3, _parse_PythonExpression1, pos)
                        if mode130 or mode130 is None:
                            mode116 = mode130
                            value134 = value150
                            pos116 = pos130
                        else:
                            pos = backtrack10
                            mode116 = False
                            value134 = 140500472584624
                            pos116 = pos
                            if pos116 < pos117:
                                mode116 = mode117
                                value134 = value135
                                pos116 = pos117
                            if pos116 < pos126:
                                mode116 = mode126
                                value134 = value146
                                pos116 = pos126
                            if pos116 < pos127:
                                mode116 = mode127
                                value134 = value147
                                pos116 = pos127
                            if pos116 < pos128:
                                mode116 = mode128
                                value134 = value148
                                pos116 = pos128
                            if pos116 < pos129:
                                mode116 = mode129
                                value134 = value149
                                pos116 = pos129
                            if pos116 < pos130:
                                mode116 = mode130
                                value134 = value150
                                pos116 = pos130
    yield (mode116, value134, pos116)
    

def _parse_KeywordArg1(text, pos):
    mode133, value153, pos133 = yield (3, _parse_Name1, pos)
    if not mode133:
        mode132 = mode133
        value152 = value153
        pos132 = pos133
    else:
        pos = pos133
        backtrack11 = pos
        value156 = '='
        if pos >= len(text):
            mode135 = False
            value155 = 140500470651144
            pos135 = pos
        else:
            token21 = text[pos]
            if token21.value == value156:
                mode135 = 1
                value155 = token21
                pos135 = pos + 1
            else:
                mode135 = False
                value155 = 140500470651144
                pos135 = pos
        if mode135 or mode135 is None:
            mode134 = mode135
            value154 = value155
            pos134 = pos135
        else:
            pos = backtrack11
            value158 = ':'
            if pos >= len(text):
                mode136 = False
                value157 = 140500470651312
                pos136 = pos
            else:
                token22 = text[pos]
                if token22.value == value158:
                    mode136 = 1
                    value157 = token22
                    pos136 = pos + 1
                else:
                    mode136 = False
                    value157 = 140500470651312
                    pos136 = pos
            if mode136 or mode136 is None:
                mode134 = mode136
                value154 = value157
                pos134 = pos136
            else:
                pos = backtrack11
                mode134 = False
                value154 = 140500472585128
                pos134 = pos
                if pos134 < pos135:
                    mode134 = mode135
                    value154 = value155
                    pos134 = pos135
                if pos134 < pos136:
                    mode134 = mode136
                    value154 = value157
                    pos134 = pos136
        if mode134:
            mode132 = 1
            value152 = value153
            pos132 = pos134
        else:
            mode132 = mode134
            value152 = value154
            pos132 = pos134
    if not mode132:
        mode131 = mode132
        value151 = value152
        pos131 = pos132
    else:
        pos = pos132
        mode137, value159, pos137 = yield (3, _parse_Expr1, pos)
        if not mode137:
            mode131 = mode137
            value151 = value159
            pos131 = pos137
        else:
            pos = pos137
            mode131 = 1
            value151 = KeywordArg(value152, value159)
            pos131 = pos
    yield (mode131, value151, pos131)
    

def _parse_ArgList1(text, pos):
    value164 = '('
    if pos >= len(text):
        mode141 = False
        value163 = 140500470652656
        pos141 = pos
    else:
        token23 = text[pos]
        if token23.value == value164:
            mode141 = 1
            value163 = token23
            pos141 = pos + 1
        else:
            mode141 = False
            value163 = 140500470652656
            pos141 = pos
    if not mode141:
        mode140 = mode141
        value162 = value163
        pos140 = pos141
    else:
        pos = pos141
        buf6 = []
        pos140 = pos
        while True:
            while True:
                mode145, value168, pos145 = yield (3, _parse_Newline1, pos)
                if mode145:
                    pos = pos145
                else:
                    if mode145 is None:
                        mode144 = mode145
                        value167 = value168
                        pos144 = pos145
                    break
            mode144 = 1
            value167 = None
            pos144 = pos
            if not mode144:
                mode143 = mode144
                value166 = value167
                pos143 = pos144
            else:
                pos = pos144
                backtrack12 = pos
                mode146, value169, pos146 = yield (3, _parse_KeywordArg1, pos)
                if mode146 or mode146 is None:
                    mode143 = mode146
                    value166 = value169
                    pos143 = pos146
                else:
                    pos = backtrack12
                    mode147, value170, pos147 = yield (3, _parse_Expr1, pos)
                    if mode147 or mode147 is None:
                        mode143 = mode147
                        value166 = value170
                        pos143 = pos147
                    else:
                        pos = backtrack12
                        mode143 = False
                        value166 = 140500472585464
                        pos143 = pos
                        if pos143 < pos146:
                            mode143 = mode146
                            value166 = value169
                            pos143 = pos146
                        if pos143 < pos147:
                            mode143 = mode147
                            value166 = value170
                            pos143 = pos147
            if not mode143:
                mode142 = mode143
                value165 = value166
                pos142 = pos143
            else:
                pos = pos143
                while True:
                    mode149, value172, pos149 = yield (3, _parse_Newline1, pos)
                    if mode149:
                        pos = pos149
                    else:
                        if mode149 is None:
                            mode148 = mode149
                            value171 = value172
                            pos148 = pos149
                        break
                mode148 = 1
                value171 = None
                pos148 = pos
                if mode148:
                    mode142 = 1
                    value165 = value166
                    pos142 = pos148
                else:
                    mode142 = mode148
                    value165 = value171
                    pos142 = pos148
            if not mode142:
                if mode142 is None:
                    mode140 = mode142
                    value162 = value165
                    pos140 = pos142
                break
            buf6.append(value165)
            pos = pos142
            mode150, value173, pos150 = yield (3, _parse_Comma1, pos)
            if not mode150:
                if mode150 is None:
                    mode140 = mode150
                    value162 = value173
                    pos140 = pos150
                break
            pos = pos150
        mode140 = 1
        value162 = buf6
        pos140 = pos
    if not mode140:
        mode139 = mode140
        value161 = value162
        pos139 = pos140
    else:
        pos = pos140
        value175 = ')'
        if pos >= len(text):
            mode151 = False
            value174 = 140500470652544
            pos151 = pos
        else:
            token24 = text[pos]
            if token24.value == value175:
                mode151 = 1
                value174 = token24
                pos151 = pos + 1
            else:
                mode151 = False
                value174 = 140500470652544
                pos151 = pos
        if mode151:
            mode139 = 1
            value161 = value162
            pos139 = pos151
        else:
            mode139 = mode151
            value161 = value174
            pos139 = pos151
    if not mode139:
        mode138 = mode139
        value160 = value161
        pos138 = pos139
    else:
        pos = pos139
        mode138 = 1
        value160 = ArgList(value161)
        pos138 = pos
    yield (mode138, value160, pos138)
    

def _parse_Expr1(text, pos):
    is_first1 = True
    while True:
        if not is_first1:
            while True:
                mode156, value180, pos156 = yield (3, _parse_Newline1, pos)
                if mode156:
                    pos = pos156
                else:
                    if mode156 is None:
                        mode155 = mode156
                        value179 = value180
                        pos155 = pos156
                    break
            mode155 = 1
            value179 = None
            pos155 = pos
            if not mode155:
                mode154 = mode155
                value178 = value179
                pos154 = pos155
            else:
                pos = pos155
                value181 = '|'
                if pos >= len(text):
                    mode154 = False
                    value178 = 140500470719880
                    pos154 = pos
                else:
                    token25 = text[pos]
                    if token25.value == value181:
                        mode154 = 1
                        value178 = token25
                        pos154 = pos + 1
                    else:
                        mode154 = False
                        value178 = 140500470719880
                        pos154 = pos
            if not mode154:
                mode153 = mode154
                value177 = value178
                pos153 = pos154
            else:
                pos = pos154
                while True:
                    mode158, value183, pos158 = yield (3, _parse_Newline1, pos)
                    if mode158:
                        pos = pos158
                    else:
                        if mode158 is None:
                            mode157 = mode158
                            value182 = value183
                            pos157 = pos158
                        break
                mode157 = 1
                value182 = None
                pos157 = pos
                if mode157:
                    mode153 = 1
                    value177 = value178
                    pos153 = pos157
                else:
                    mode153 = mode157
                    value177 = value182
                    pos153 = pos157
            if not mode153:
                if mode153 is None:
                    mode152 = mode153
                    value176 = value177
                    pos152 = pos153
                break
            pos = pos153
        is_first2 = True
        while True:
            if not is_first2:
                while True:
                    mode163, value188, pos163 = yield (3, _parse_Newline1, pos)
                    if mode163:
                        pos = pos163
                    else:
                        if mode163 is None:
                            mode162 = mode163
                            value187 = value188
                            pos162 = pos163
                        break
                mode162 = 1
                value187 = None
                pos162 = pos
                if not mode162:
                    mode161 = mode162
                    value186 = value187
                    pos161 = pos162
                else:
                    pos = pos162
                    backtrack13 = pos
                    value190 = '<<'
                    if pos >= len(text):
                        mode164 = False
                        value189 = 140500470709552
                        pos164 = pos
                    else:
                        token26 = text[pos]
                        if token26.value == value190:
                            mode164 = 1
                            value189 = token26
                            pos164 = pos + 1
                        else:
                            mode164 = False
                            value189 = 140500470709552
                            pos164 = pos
                    if mode164 or mode164 is None:
                        mode161 = mode164
                        value186 = value189
                        pos161 = pos164
                    else:
                        pos = backtrack13
                        value192 = '>>'
                        if pos >= len(text):
                            mode165 = False
                            value191 = 140500470718648
                            pos165 = pos
                        else:
                            token27 = text[pos]
                            if token27.value == value192:
                                mode165 = 1
                                value191 = token27
                                pos165 = pos + 1
                            else:
                                mode165 = False
                                value191 = 140500470718648
                                pos165 = pos
                        if mode165 or mode165 is None:
                            mode161 = mode165
                            value186 = value191
                            pos161 = pos165
                        else:
                            pos = backtrack13
                            value194 = '<<!'
                            if pos >= len(text):
                                mode166 = False
                                value193 = 140500470718760
                                pos166 = pos
                            else:
                                token28 = text[pos]
                                if token28.value == value194:
                                    mode166 = 1
                                    value193 = token28
                                    pos166 = pos + 1
                                else:
                                    mode166 = False
                                    value193 = 140500470718760
                                    pos166 = pos
                            if mode166 or mode166 is None:
                                mode161 = mode166
                                value186 = value193
                                pos161 = pos166
                            else:
                                pos = backtrack13
                                value196 = '!>>'
                                if pos >= len(text):
                                    mode167 = False
                                    value195 = 140500470718704
                                    pos167 = pos
                                else:
                                    token29 = text[pos]
                                    if token29.value == value196:
                                        mode167 = 1
                                        value195 = token29
                                        pos167 = pos + 1
                                    else:
                                        mode167 = False
                                        value195 = 140500470718704
                                        pos167 = pos
                                if mode167 or mode167 is None:
                                    mode161 = mode167
                                    value186 = value195
                                    pos161 = pos167
                                else:
                                    pos = backtrack13
                                    mode161 = False
                                    value186 = 140500472574304
                                    pos161 = pos
                                    if pos161 < pos164:
                                        mode161 = mode164
                                        value186 = value189
                                        pos161 = pos164
                                    if pos161 < pos165:
                                        mode161 = mode165
                                        value186 = value191
                                        pos161 = pos165
                                    if pos161 < pos166:
                                        mode161 = mode166
                                        value186 = value193
                                        pos161 = pos166
                                    if pos161 < pos167:
                                        mode161 = mode167
                                        value186 = value195
                                        pos161 = pos167
                if not mode161:
                    mode160 = mode161
                    value185 = value186
                    pos160 = pos161
                else:
                    pos = pos161
                    while True:
                        mode169, value198, pos169 = yield (3, _parse_Newline1, pos)
                        if mode169:
                            pos = pos169
                        else:
                            if mode169 is None:
                                mode168 = mode169
                                value197 = value198
                                pos168 = pos169
                            break
                    mode168 = 1
                    value197 = None
                    pos168 = pos
                    if mode168:
                        mode160 = 1
                        value185 = value186
                        pos160 = pos168
                    else:
                        mode160 = mode168
                        value185 = value197
                        pos160 = pos168
                if not mode160:
                    if mode160 is None:
                        mode159 = mode160
                        value184 = value185
                        pos159 = pos160
                    break
                pos = pos160
            is_first3 = True
            while True:
                if not is_first3:
                    while True:
                        mode174, value203, pos174 = yield (3, _parse_Newline1, pos)
                        if mode174:
                            pos = pos174
                        else:
                            if mode174 is None:
                                mode173 = mode174
                                value202 = value203
                                pos173 = pos174
                            break
                    mode173 = 1
                    value202 = None
                    pos173 = pos
                    if not mode173:
                        mode172 = mode173
                        value201 = value202
                        pos172 = pos173
                    else:
                        pos = pos173
                        backtrack14 = pos
                        value205 = '/'
                        if pos >= len(text):
                            mode175 = False
                            value204 = 140500470707592
                            pos175 = pos
                        else:
                            token30 = text[pos]
                            if token30.value == value205:
                                mode175 = 1
                                value204 = token30
                                pos175 = pos + 1
                            else:
                                mode175 = False
                                value204 = 140500470707592
                                pos175 = pos
                        if mode175 or mode175 is None:
                            mode172 = mode175
                            value201 = value204
                            pos172 = pos175
                        else:
                            pos = backtrack14
                            value207 = '//'
                            if pos >= len(text):
                                mode176 = False
                                value206 = 140500470707928
                                pos176 = pos
                            else:
                                token31 = text[pos]
                                if token31.value == value207:
                                    mode176 = 1
                                    value206 = token31
                                    pos176 = pos + 1
                                else:
                                    mode176 = False
                                    value206 = 140500470707928
                                    pos176 = pos
                            if mode176 or mode176 is None:
                                mode172 = mode176
                                value201 = value206
                                pos172 = pos176
                            else:
                                pos = backtrack14
                                value209 = '*'
                                if pos >= len(text):
                                    mode177 = False
                                    value208 = 140500470707424
                                    pos177 = pos
                                else:
                                    token32 = text[pos]
                                    if token32.value == value209:
                                        mode177 = 1
                                        value208 = token32
                                        pos177 = pos + 1
                                    else:
                                        mode177 = False
                                        value208 = 140500470707424
                                        pos177 = pos
                                if mode177 or mode177 is None:
                                    mode172 = mode177
                                    value201 = value208
                                    pos172 = pos177
                                else:
                                    pos = backtrack14
                                    mode172 = False
                                    value201 = 140500472586192
                                    pos172 = pos
                                    if pos172 < pos175:
                                        mode172 = mode175
                                        value201 = value204
                                        pos172 = pos175
                                    if pos172 < pos176:
                                        mode172 = mode176
                                        value201 = value206
                                        pos172 = pos176
                                    if pos172 < pos177:
                                        mode172 = mode177
                                        value201 = value208
                                        pos172 = pos177
                    if not mode172:
                        mode171 = mode172
                        value200 = value201
                        pos171 = pos172
                    else:
                        pos = pos172
                        while True:
                            mode179, value211, pos179 = yield (3, _parse_Newline1, pos)
                            if mode179:
                                pos = pos179
                            else:
                                if mode179 is None:
                                    mode178 = mode179
                                    value210 = value211
                                    pos178 = pos179
                                break
                        mode178 = 1
                        value210 = None
                        pos178 = pos
                        if mode178:
                            mode171 = 1
                            value200 = value201
                            pos171 = pos178
                        else:
                            mode171 = mode178
                            value200 = value210
                            pos171 = pos178
                    if not mode171:
                        if mode171 is None:
                            mode170 = mode171
                            value199 = value200
                            pos170 = pos171
                        break
                    pos = pos171
                mode182, value214, pos182 = yield (3, _parse_Atom1, pos)
                mode181 = mode182
                value213 = value214
                pos181 = pos182
                if mode182:
                    pos = pos182
                    while True:
                        mode183, value215, pos183 = yield (3, _parse_ArgList1, pos)
                        if not mode183:
                            if mode183 is None:
                                mode181 = mode183
                                value213 = value215
                                pos181 = pos183
                            else:
                                pos181 = pos
                            break
                        pos = pos183
                        value213 = Postfix(value213, value215)
                mode180 = mode181
                value212 = value213
                pos180 = pos181
                if mode181:
                    pos = pos181
                    while True:
                        backtrack15 = pos
                        value218 = '?'
                        if pos >= len(text):
                            mode185 = False
                            value217 = 140500470701528
                            pos185 = pos
                        else:
                            token33 = text[pos]
                            if token33.value == value218:
                                mode185 = 1
                                value217 = token33
                                pos185 = pos + 1
                            else:
                                mode185 = False
                                value217 = 140500470701528
                                pos185 = pos
                        if mode185 or mode185 is None:
                            mode184 = mode185
                            value216 = value217
                            pos184 = pos185
                        else:
                            pos = backtrack15
                            value220 = '*'
                            if pos >= len(text):
                                mode186 = False
                                value219 = 140500470701640
                                pos186 = pos
                            else:
                                token34 = text[pos]
                                if token34.value == value220:
                                    mode186 = 1
                                    value219 = token34
                                    pos186 = pos + 1
                                else:
                                    mode186 = False
                                    value219 = 140500470701640
                                    pos186 = pos
                            if mode186 or mode186 is None:
                                mode184 = mode186
                                value216 = value219
                                pos184 = pos186
                            else:
                                pos = backtrack15
                                value222 = '+'
                                if pos >= len(text):
                                    mode187 = False
                                    value221 = 140500470701416
                                    pos187 = pos
                                else:
                                    token35 = text[pos]
                                    if token35.value == value222:
                                        mode187 = 1
                                        value221 = token35
                                        pos187 = pos + 1
                                    else:
                                        mode187 = False
                                        value221 = 140500470701416
                                        pos187 = pos
                                if mode187 or mode187 is None:
                                    mode184 = mode187
                                    value216 = value221
                                    pos184 = pos187
                                else:
                                    pos = backtrack15
                                    value224 = '!'
                                    if pos >= len(text):
                                        mode188 = False
                                        value223 = 140500470701808
                                        pos188 = pos
                                    else:
                                        token36 = text[pos]
                                        if token36.value == value224:
                                            mode188 = 1
                                            value223 = token36
                                            pos188 = pos + 1
                                        else:
                                            mode188 = False
                                            value223 = 140500470701808
                                            pos188 = pos
                                    if mode188 or mode188 is None:
                                        mode184 = mode188
                                        value216 = value223
                                        pos184 = pos188
                                    else:
                                        pos = backtrack15
                                        mode184 = False
                                        value216 = 140500472586024
                                        pos184 = pos
                                        if pos184 < pos185:
                                            mode184 = mode185
                                            value216 = value217
                                            pos184 = pos185
                                        if pos184 < pos186:
                                            mode184 = mode186
                                            value216 = value219
                                            pos184 = pos186
                                        if pos184 < pos187:
                                            mode184 = mode187
                                            value216 = value221
                                            pos184 = pos187
                                        if pos184 < pos188:
                                            mode184 = mode188
                                            value216 = value223
                                            pos184 = pos188
                        if not mode184:
                            if mode184 is None:
                                mode180 = mode184
                                value212 = value216
                                pos180 = pos184
                            else:
                                pos180 = pos
                            break
                        pos = pos184
                        value212 = Postfix(value212, value216)
                if not mode180:
                    if is_first3 or mode180 is None:
                        mode170 = mode180
                        value199 = value212
                        pos170 = pos180
                    break
                pos = pos170 = pos180
                if is_first3:
                    is_first3 = False
                    value199 = value212
                    mode170 = 1
                else:
                    value199 = Infix(value199, value200, value212)
            if not mode170:
                if is_first2 or mode170 is None:
                    mode159 = mode170
                    value184 = value199
                    pos159 = pos170
                break
            pos = pos159 = pos170
            if is_first2:
                is_first2 = False
                value184 = value199
                mode159 = 1
            else:
                value184 = Infix(value184, value185, value199)
        if not mode159:
            if is_first1 or mode159 is None:
                mode152 = mode159
                value176 = value184
                pos152 = pos159
            break
        pos = pos152 = pos159
        if is_first1:
            is_first1 = False
            value176 = value184
            mode152 = 1
        else:
            value176 = Infix(value176, value177, value184)
    yield (mode152, value176, pos152)
    

def _parse_start1(text, pos):
    while True:
        mode191, value227, pos191 = yield (3, _parse_Newline1, pos)
        if mode191:
            pos = pos191
        else:
            if mode191 is None:
                mode190 = mode191
                value226 = value227
                pos190 = pos191
            break
    mode190 = 1
    value226 = None
    pos190 = pos
    if not mode190:
        mode189 = mode190
        value225 = value226
        pos189 = pos190
    else:
        pos = pos190
        buf7 = []
        pos189 = pos
        while True:
            mode192, value228, pos192 = yield (3, _parse_Stmt1, pos)
            if not mode192:
                if mode192 is None:
                    mode189 = mode192
                    value225 = value228
                    pos189 = pos192
                break
            buf7.append(value228)
            pos = pos192
            mode193, value229, pos193 = yield (3, _parse_Sep1, pos)
            if not mode193:
                if mode193 is None:
                    mode189 = mode193
                    value225 = value229
                    pos189 = pos193
                break
            pos = pos193
        mode189 = 1
        value225 = buf7
        pos189 = pos
    yield (mode189, value225, pos189)
    

def _parse_Space1(text, pos):
    if pos < len(text):
        value231 = text[pos]
        if isinstance(value231, Space):
            mode194 = 2
            value230 = None
            pos194 = pos + 1
        else:
            mode194 = False
            value230 = 140500475605064
            pos194 = pos
    else:
        mode194 = False
        value230 = 140500475605064
        pos194 = pos
    yield (mode194, value230, pos194)
    

def _parse_Word1(text, pos):
    if pos < len(text):
        value233 = text[pos]
        if isinstance(value233, Word):
            mode195 = 1
            value232 = value233
            pos195 = pos + 1
        else:
            mode195 = False
            value232 = 140500470720048
            pos195 = pos
    else:
        mode195 = False
        value232 = 140500470720048
        pos195 = pos
    yield (mode195, value232, pos195)
    

def _parse_Symbol1(text, pos):
    if pos < len(text):
        value235 = text[pos]
        if isinstance(value235, Symbol):
            mode196 = 1
            value234 = value235
            pos196 = pos + 1
        else:
            mode196 = False
            value234 = 140500470720216
            pos196 = pos
    else:
        mode196 = False
        value234 = 140500470720216
        pos196 = pos
    yield (mode196, value234, pos196)
    

def _parse_StringLiteral1(text, pos):
    if pos < len(text):
        value237 = text[pos]
        if isinstance(value237, StringLiteral):
            mode197 = 1
            value236 = value237
            pos197 = pos + 1
        else:
            mode197 = False
            value236 = 140500470720440
            pos197 = pos
    else:
        mode197 = False
        value236 = 140500470720440
        pos197 = pos
    yield (mode197, value236, pos197)
    

def _parse_RegexLiteral1(text, pos):
    if pos < len(text):
        value239 = text[pos]
        if isinstance(value239, RegexLiteral):
            mode198 = 1
            value238 = value239
            pos198 = pos + 1
        else:
            mode198 = False
            value238 = 140500470720496
            pos198 = pos
    else:
        mode198 = False
        value238 = 140500470720496
        pos198 = pos
    yield (mode198, value238, pos198)
    

def _parse_Newline1(text, pos):
    if pos < len(text):
        value241 = text[pos]
        if isinstance(value241, Newline):
            mode199 = 1
            value240 = value241
            pos199 = pos + 1
        else:
            mode199 = False
            value240 = 140500470720608
            pos199 = pos
    else:
        mode199 = False
        value240 = 140500470720608
        pos199 = pos
    yield (mode199, value240, pos199)
    

def _parse_PythonSection1(text, pos):
    if pos < len(text):
        value243 = text[pos]
        if isinstance(value243, PythonSection):
            mode200 = 1
            value242 = value243
            pos200 = pos + 1
        else:
            mode200 = False
            value242 = 140500470720552
            pos200 = pos
    else:
        mode200 = False
        value242 = 140500470720552
        pos200 = pos
    yield (mode200, value242, pos200)
    

def _parse_PythonExpression1(text, pos):
    if pos < len(text):
        value245 = text[pos]
        if isinstance(value245, PythonExpression):
            mode201 = 1
            value244 = value245
            pos201 = pos + 1
        else:
            mode201 = False
            value244 = 140500470720664
            pos201 = pos
    else:
        mode201 = False
        value244 = 140500470720664
        pos201 = pos
    yield (mode201, value244, pos201)
    

def _parse_Comment1(text, pos):
    if pos < len(text):
        value247 = text[pos]
        if isinstance(value247, Comment):
            mode202 = 2
            value246 = None
            pos202 = pos + 1
        else:
            mode202 = False
            value246 = 140500470720776
            pos202 = pos
    else:
        mode202 = False
        value246 = 140500470720776
        pos202 = pos
    yield (mode202, value246, pos202)
    
